{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/matery/source/favicon-1.png","path":"favicon-1.png","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/contact.jpg","path":"medias/contact.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/logo-1.png","path":"medias/logo-1.png","modified":1,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","path":"libs/codeBlock/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/explosion.min.js","path":"libs/others/explosion.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/fireworks.js","path":"libs/others/fireworks.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/others/text.js","path":"libs/others/text.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ajin.jpg","path":"medias/avatars/ajin.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","path":"medias/avatars/cww97.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/feibar.jpg","path":"medias/avatars/feibar.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","path":"medias/avatars/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/fun4go.png","path":"medias/avatars/fun4go.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hael.jpg","path":"medias/avatars/hael.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","path":"medias/avatars/huaji.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","path":"medias/avatars/hzwer.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jianshu.png","path":"medias/avatars/jianshu.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","path":"medias/avatars/ids2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","path":"medias/avatars/lijiaqian.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","path":"medias/avatars/ldy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","path":"medias/avatars/kewlgrl.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","path":"medias/avatars/liyangzone.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","path":"medias/avatars/liyucheng.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/masterx.jpg","path":"medias/avatars/masterx.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/michael.jpg","path":"medias/avatars/michael.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","path":"medias/avatars/mouse.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mpy634.png","path":"medias/avatars/mpy634.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/nainiu.png","path":"medias/avatars/nainiu.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/toutiao.jpg","path":"medias/avatars/toutiao.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","path":"medias/avatars/qiqiang.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/tawn.jpg","path":"medias/avatars/tawn.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/taotao.jpg","path":"medias/avatars/taotao.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/spacesac.png","path":"medias/avatars/spacesac.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/ywsydwsbn.jpg","path":"medias/avatars/ywsydwsbn.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/yezijie.png","path":"medias/avatars/yezijie.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","path":"medias/avatars/sunchangzhi.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhihu.jpg","path":"medias/avatars/zhihu.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","path":"medias/avatars/zhaokangzhe.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","path":"medias/avatars/antnlp.ico","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/babyq.png","path":"medias/avatars/babyq.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/bytedtrans.png","path":"medias/avatars/bytedtrans.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","path":"medias/avatars/gsy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","path":"medias/avatars/duyupei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jiejie.jpg","path":"medias/avatars/jiejie.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","path":"medias/avatars/mizunashi.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","path":"medias/avatars/myzhihu.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","path":"medias/avatars/qiandongwei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","path":"medias/avatars/taowei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","path":"medias/avatars/xuzhongyou.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/xiejiadong.jpg","path":"medias/avatars/xiejiadong.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","path":"medias/avatars/zhangting.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","path":"medias/avatars/zzw.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/0xbird.png","path":"medias/avatars/0xbird.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/tiantangdemogui.jpg","path":"medias/music/avatars/tiantangdemogui.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/yequ.jpg","path":"medias/music/avatars/yequ.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","path":"medias/avatars/milyyy.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","path":"medias/avatars/mashiro.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","path":"medias/avatars/lyn-draw.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/yiluxiangbei.jpg","path":"medias/music/avatars/yiluxiangbei.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/qianqian.png","path":"medias/avatars/qianqian.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","path":"medias/avatars/jitao.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/lzh.png","path":"medias/avatars/lzh.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/28.jpg","path":"medias/featureimages/28.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/25.jpg","path":"medias/featureimages/25.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/feibar.png","path":"medias/avatars/feibar.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/26.jpg","path":"medias/featureimages/26.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/27.jpg","path":"medias/featureimages/27.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","path":"medias/avatars/zhangyi.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/daoshu.jpg","path":"medias/music/avatars/daoshu.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","path":"medias/avatars/jingjing.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/24.jpg","path":"medias/featureimages/24.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/avatars/logo.png","path":"medias/avatars/logo.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"d97f69ff63501de89cfd341c68e4d6ed5c8a5b3a","modified":1586054623000},{"_id":"source/CNAME","hash":"a272f86b2a87102f8735a8369199dafb0edfc33e","modified":1606791587366},{"_id":"themes/matery/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1586054623000},{"_id":"themes/matery/README.md","hash":"7ef16198a2c5ff580f006582286354caf160c7fe","modified":1586054623000},{"_id":"themes/matery/README_CN.md","hash":"a94324950e0299bcfcbc106cf2ca65c93e1fe843","modified":1586054623000},{"_id":"themes/matery/LICENSE","hash":"b314c7ebb7d599944981908b7f3ed33a30e78f3a","modified":1586054623000},{"_id":"themes/matery/_config.yml","hash":"b1025fb4d6f55e5ba835380f346982c17e8485d4","modified":1606999781574},{"_id":"source/_posts/Chinese-chess.md","hash":"3f03dfd4090391c9dda4abe4a63fb5287290fca6","modified":1607844633913},{"_id":"source/_posts/Dimensionless-processing-of-data.md","hash":"3716746732a651ed38e6d923a15e5128f9307353","modified":1606807107486},{"_id":"source/_posts/Fuzzy-comprehensive-evaluation.md","hash":"d59f0dcebc8b0730a123cdfd92c71af2340f10f5","modified":1608019069028},{"_id":"source/_posts/Different-color-canvas.md","hash":"8dc29d818e0223bcb4237254ed9f63688ad864d9","modified":1607157585042},{"_id":"source/_posts/Raspberry-Pi-camera.md","hash":"b058f004d51f6b8c5347e6916565e3399db9ad7f","modified":1606981629065},{"_id":"source/_posts/analytic-hierarchy-process.md","hash":"ef4ec8427c43ce0cfaa6fbe970ed498a02e29101","modified":1607496810450},{"_id":"source/_posts/The-series-matrix-function-horzcat.md","hash":"de3d79ba55d7244b6d987f626f8d87e8ffbc0bb4","modified":1607302060065},{"_id":"source/_posts/SSL-secure-network-communication.md","hash":"22275e79672a07f3a6d006390004e747e081d919","modified":1607905462798},{"_id":"source/_posts/Vue-3-0.md","hash":"8268426486cc4a5ab2a31f6f2c304b24cd794195","modified":1607579935179},{"_id":"source/_posts/sort-algorithms.md","hash":"7d1b6f7db08898569f0ac59649b05d34961be815","modified":1606787853244},{"_id":"source/_data/musics.json","hash":"32bc061f34721b4ff55f880de1d0ec5787acd2f9","modified":1586054623000},{"_id":"source/_posts/pip-change-source.md","hash":"dce77b0c1918a6cd5d31a7d46523365682e08e6c","modified":1606998846311},{"_id":"source/_posts/Fuzzy-cluster-analysis.md","hash":"e69c0c848628aa964f7b5b9428e34b4a9b87659b","modified":1607168283847},{"_id":"source/categories/index.md","hash":"67687d3f908737f7c680f096b3e80d9412f23b0e","modified":1586054623000},{"_id":"source/archives/index.md","hash":"30a0e3a59be650ae34d7bb86ac7da53e21e9cf5b","modified":1586054623000},{"_id":"source/_data/friends.json","hash":"27c3894236cb00fd659b0d47f191e4fe7ffd852c","modified":1607082165518},{"_id":"source/tags/index.md","hash":"fe3d7ecc91b81b062a6a60c06859dc24b9d704ac","modified":1586054623000},{"_id":"source/friends/index.md","hash":"2eb18fce9c356f2b43cb2651fe5836806ada72ac","modified":1606790995883},{"_id":"source/about/index.md","hash":"e3e2502c35fc1093dc2f2f8575826c7905691a47","modified":1606790638708},{"_id":"themes/matery/languages/default.yml","hash":"527c795b8c41fe62bf35603ffebfa6d4a7929a2c","modified":1586054623000},{"_id":"source/contact/index.md","hash":"f3fd3e639a7387726ca76cc33af0026e46de71fb","modified":1606790959620},{"_id":"themes/matery/languages/zh-CN.yml","hash":"d92db4b986bb6f0d228e9a8249383103bf56342d","modified":1586054623000},{"_id":"themes/matery/layout/404.ejs","hash":"f08a0f507b36f3652520a41381f71167488405c7","modified":1586054623000},{"_id":"source/_posts/基于混沌Logistic加密算法的图片加密与还原.md","hash":"9d519537f730f46f61e7ded95bcd97cea3ed4f96","modified":1606807143747},{"_id":"themes/matery/layout/categories.ejs","hash":"c431e772d0f7700592228bbd9502793bdc28a893","modified":1586054623000},{"_id":"themes/matery/layout/about.ejs","hash":"e87752e59f021b5139b1155a264da11ab469a9aa","modified":1586054623000},{"_id":"themes/matery/layout/contact.ejs","hash":"1513c5a40b7cc0b6e5854cf8c3253958bcb486cb","modified":1586054623000},{"_id":"themes/matery/layout/category.ejs","hash":"2d421e10c3b8fd2c4f725e5eaa967c4a1429c707","modified":1586054623000},{"_id":"themes/matery/layout/layout.ejs","hash":"2ba4110dc596424b1220a259c8e594da774e7f59","modified":1586054623000},{"_id":"themes/matery/layout/post.ejs","hash":"f1a35f32e5901e167ae9a750e7cb3635549cea2e","modified":1586054623000},{"_id":"themes/matery/layout/tag.ejs","hash":"5cdf3a1d72f54285ee9cb826fd0e4a0449093215","modified":1586054623000},{"_id":"themes/matery/layout/tags.ejs","hash":"851c0ee599e91e7b1d657673859e8b6ff79cf50b","modified":1586054623000},{"_id":"themes/matery/source/favicon-1.png","hash":"0f4145b9a712f9662e4fae1b0086ce74cf1f9fc4","modified":1586054623000},{"_id":"themes/matery/layout/index.ejs","hash":"7fc5a6c4f0229c0be43b7d1315524c468346fbb8","modified":1586054623000},{"_id":"themes/matery/layout/friends.ejs","hash":"895e40a864796680fbef581e4b09f252fbdd963a","modified":1586054623000},{"_id":"themes/matery/layout/archive.ejs","hash":"1b5023571894404d75caffa28128fc9c49f9095d","modified":1586054623000},{"_id":"source/_posts/Dimensionless-processing-of-data/1.png","hash":"99ccc7724643508fcf67caed0a3733072625f05a","modified":1606804387689},{"_id":"source/_posts/Dimensionless-processing-of-data/11.png","hash":"e651502cf0f13a5690bfd55928d12732ff6fbd5e","modified":1606804621653},{"_id":"source/_posts/Dimensionless-processing-of-data/12.png","hash":"c1082b99f7080c7af317cfb142447a0608a6fd8b","modified":1606804634810},{"_id":"source/_posts/Dimensionless-processing-of-data/14.png","hash":"201f89690b94391bc32610c99d5ef2c3a38776d8","modified":1606804661768},{"_id":"source/_posts/Dimensionless-processing-of-data/13.png","hash":"682d548c43aef83806eabd09d4cbd3cccba364f2","modified":1606804649479},{"_id":"source/_posts/Dimensionless-processing-of-data/15.png","hash":"7bbef6b9baa145cf425a022dd0abfbb5fe85347d","modified":1606804675065},{"_id":"source/_posts/Dimensionless-processing-of-data/17.png","hash":"a7d4991d6956f30245315e26f96faeb30d58fe96","modified":1606804705550},{"_id":"source/_posts/Dimensionless-processing-of-data/16.png","hash":"856cc6601bbf58c25000efb59cd027e830032a51","modified":1606804690445},{"_id":"source/_posts/Dimensionless-processing-of-data/18.png","hash":"9981c508409438839db94d5da7eeed564758b873","modified":1606804719789},{"_id":"source/_posts/Dimensionless-processing-of-data/10.png","hash":"9bc78416b24f0428aa5ca26e657c37424d60a828","modified":1606804608935},{"_id":"source/_posts/Dimensionless-processing-of-data/19.png","hash":"ec68c35c78e9076afb4ca33af811c419fcfd7be4","modified":1606804732305},{"_id":"source/_posts/Dimensionless-processing-of-data/2.png","hash":"97b76fc43e1f78f1a14cdba90dcfdd732693297c","modified":1606804401231},{"_id":"source/_posts/Dimensionless-processing-of-data/3.png","hash":"993e01feedbce5f6361ae84778e6aac8e7e22a48","modified":1606804415274},{"_id":"source/_posts/Dimensionless-processing-of-data/20.png","hash":"6d0cc08d7d8cf2dde4fce43e8cc1e51f534cae48","modified":1606804745451},{"_id":"source/_posts/Dimensionless-processing-of-data/4.png","hash":"9d5b322556af662a8d6efff3aacbc73957cc4d06","modified":1606804432292},{"_id":"source/_posts/Dimensionless-processing-of-data/5.png","hash":"e8e68122730736047a2d80c88e001c9a91e649c7","modified":1606804494575},{"_id":"source/_posts/Dimensionless-processing-of-data/6.png","hash":"8fcf27710492c1e57cddf75f13321af184668438","modified":1606804558438},{"_id":"source/_posts/Dimensionless-processing-of-data/7.png","hash":"aaa28fc3960eac8a116a5fdeb49edfe0fa535073","modified":1606804569907},{"_id":"source/_posts/Chinese-chess/3.png","hash":"41f6966b3fb189bd9edb7a6c89f83a520d4d2d06","modified":1607844692816},{"_id":"source/_posts/Dimensionless-processing-of-data/22.png","hash":"1485a8dadab3f4d455d6bb4f24649ec0b382f8b0","modified":1606804776768},{"_id":"source/_posts/Dimensionless-processing-of-data/21.png","hash":"7577a2ad832b9a4d518528e2a133a6503ae542c4","modified":1606804759451},{"_id":"source/_posts/Dimensionless-processing-of-data/8.png","hash":"fa5a91bb8a660e127d1d4d6968e3bd4bc08c8cbc","modified":1606804582715},{"_id":"source/_posts/Dimensionless-processing-of-data/9.png","hash":"a021432545bf9f623633c36e3c0056b62ec567b5","modified":1606804594852},{"_id":"source/_posts/Different-color-canvas/1.png","hash":"4c42bb86657280b533d8f568ae6201232d39f489","modified":1607155261861},{"_id":"source/_posts/Different-color-canvas/5.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1607155289715},{"_id":"source/_posts/Different-color-canvas/2.jpg","hash":"48ce875ad1d23ca30e786d5d738ba11c4234edba","modified":1607155269949},{"_id":"source/_posts/Different-color-canvas/4.png","hash":"9b3291e205a95ca9e6607c00e355a44619206a72","modified":1607155282394},{"_id":"source/_posts/Different-color-canvas/6.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1607155295757},{"_id":"source/_posts/Different-color-canvas/7.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1607155301284},{"_id":"source/_posts/Different-color-canvas/3.png","hash":"8c75313ac623a2c9fda802f528fd5d58dba8b2b0","modified":1607155277083},{"_id":"source/_posts/Fuzzy-cluster-analysis/10.png","hash":"b8b8ee8ad2c830078f0c50bd13ad4d40dae36f1d","modified":1607168363296},{"_id":"source/_posts/Fuzzy-cluster-analysis/1.png","hash":"baed0a71244347f0447403bab38864241964fcef","modified":1607168305393},{"_id":"source/_posts/Fuzzy-cluster-analysis/3.png","hash":"15007680a28abdd093d6dbd834cb89d3f405a64a","modified":1607168317583},{"_id":"source/_posts/Different-color-canvas/8.png","hash":"e1051df677698070afba9b5eebc947ce7bf7dc3b","modified":1607155308007},{"_id":"source/_posts/Fuzzy-cluster-analysis/4.png","hash":"5f3714d185e33a19279ae22df9ba64ecaf21cc1c","modified":1607168324963},{"_id":"source/_posts/Fuzzy-cluster-analysis/5.png","hash":"a51fa8cf7cbaa998336d929bed85c3d3cb2c0b20","modified":1607168329746},{"_id":"source/_posts/Fuzzy-cluster-analysis/8.png","hash":"024753e66ce8e0c070451e0a63e1d678a4fe7fbd","modified":1607168350691},{"_id":"source/_posts/Fuzzy-comprehensive-evaluation/1.png","hash":"79138ff275230ae437020d2e7cd3ce2fafa2666d","modified":1608017907812},{"_id":"source/_posts/Fuzzy-comprehensive-evaluation/2.png","hash":"6b5bb822f2560d66abbb1071ddf6a0d999f19a80","modified":1608017978636},{"_id":"source/_posts/Fuzzy-cluster-analysis/9.png","hash":"1e1a4ce52215ede2c682b42766ce517bb2d5b2ce","modified":1607168357245},{"_id":"source/_posts/Fuzzy-cluster-analysis/6.png","hash":"30545f70ad3f299f6fb8cf2e828299a24f78fa9a","modified":1607168335788},{"_id":"source/_posts/Fuzzy-cluster-analysis/11.png","hash":"770341cf1ba592aafba609487e79e035fcbf26fc","modified":1607168369100},{"_id":"source/_posts/analytic-hierarchy-process/2.png","hash":"200b5e635472444161f03998486124ecfd1ddf89","modified":1607494544027},{"_id":"source/_posts/analytic-hierarchy-process/1.png","hash":"5c5dd3d436f23160c51239141d32be1b5a44a235","modified":1607493606323},{"_id":"source/_posts/analytic-hierarchy-process/3.png","hash":"4d0871ea5fc372ac880f8a82a7630a67fceb7ce7","modified":1607494597544},{"_id":"source/_posts/analytic-hierarchy-process/4.png","hash":"243db7f1ae5325e53817dd10618e5ef6d418c8c3","modified":1607494925710},{"_id":"source/_posts/analytic-hierarchy-process/5.png","hash":"62ca80c77284634d0ffb396252e61e17a40c6a32","modified":1607495311673},{"_id":"source/_posts/analytic-hierarchy-process/10.png","hash":"157c61a4994a28d3e585e287ede5bf009071fef7","modified":1607496195086},{"_id":"source/_posts/analytic-hierarchy-process/7.png","hash":"b15823c5eaee740524c9c742e98bcbacc425f296","modified":1607495918245},{"_id":"source/_posts/analytic-hierarchy-process/6.png","hash":"75a2f4c6550799451e2f769aec4b6228b74139f9","modified":1607495848826},{"_id":"source/_posts/analytic-hierarchy-process/8.png","hash":"a0026c217dee27e3732db086f21214a5dfbaca2d","modified":1607495968789},{"_id":"source/_posts/analytic-hierarchy-process/9.png","hash":"75a72f7653b74874671425ab4f4e511f6f9cdae1","modified":1607496143691},{"_id":"source/_posts/pip-change-source/2.png","hash":"ad7da954fa246859c19d1b7d909803cec8202256","modified":1606998777556},{"_id":"source/_posts/pip-change-source/1.png","hash":"2f6909df2a44b73b64d120c7dc2127c790b46f53","modified":1606998768597},{"_id":"source/_posts/pip-change-source/3.png","hash":"ebf00ff921aa2c9f8c92e91f38cd5682520999ec","modified":1606998785153},{"_id":"source/_posts/pip-change-source/4.png","hash":"7203a2bbe9509c6a4596c31db87768681ed5e9f4","modified":1606998795238},{"_id":"source/_posts/pip-change-source/7.png","hash":"82d31a9d725cec12b4d1badce3932dcf98e9d98c","modified":1606998823506},{"_id":"source/_posts/pip-change-source/5.png","hash":"8b74c16e5c5f74db7fb74160f6710d8c2aa34cea","modified":1606998808121},{"_id":"source/_posts/pip-change-source/8.png","hash":"a10332794e7e9eb28a3bd205a50de37348b8b76e","modified":1606998831235},{"_id":"source/_posts/pip-change-source/6.png","hash":"66844c6cbfba45a7d187655aa3699a2a688c8c3e","modified":1606998816133},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"ab610754bf6aea844b5ae0802ed37c73b5f1dc9f","modified":1586054623000},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"cb99dc352397ec5d0765794d7b8884972e61973b","modified":1586054623000},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"42dda8e67f7f09d148347887e52f18aea546df26","modified":1586054623000},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"d5a7b9bb96e04c0a3485dd873748f19c50a6a04f","modified":1586054623000},{"_id":"source/_posts/sort-algorithms/1.png","hash":"cb9865eb782b293168e69406b212a0f3097b82a4","modified":1586054623000},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"a3a140e6aeeb6f289e4b821a577ef548267f3de1","modified":1586054623000},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"fd4034bca2eb3987dcf113e6477260bee97eb1e7","modified":1586054623000},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"890c8f04c1f4905dfceb3ea9fd6efdd040d79c01","modified":1586054623000},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"d8c40dbc8106b5bc53ceb727ad968c1d8f234261","modified":1586054623000},{"_id":"source/_posts/pip-change-source/9.png","hash":"02d52a204308eb8f671e63d084e504744786d8ca","modified":1606998839394},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"821e1af65990521c9e0288178d8e5b18c73a9cab","modified":1586054623000},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"d4042e5521ceb5f3255cd4455ac7ccd227fee6df","modified":1586054623000},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"e761f0104fbf431671bbe6bebc91ca82f737f4d2","modified":1586054623000},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"42728561c09589f79b698eb059ab4def53ed3642","modified":1586054623000},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"3a82fcb6f31d69971cb564985842c14ac02cdca0","modified":1586054623000},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"dfdeea9c59d157acb851d4bf44bf95f81787523c","modified":1586054623000},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"166c0b9753f3f913bd801e82ad5b268004be198d","modified":1586054623000},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"82cb8090cde663fa7ad67418a802997b3057e957","modified":1586054623000},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"3f208f33e4e12becdb8323e6e64e20ad60c3fb2a","modified":1586054623000},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"3b42900247d5ea4ea5b68e2be44420a0d54785ad","modified":1586054623000},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"2adb36ed1e7c023f34debd3cad8e82a337c83e02","modified":1606987805052},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"cb4b8ddc71e5298f0aaf90cec323a891a2b7e6eb","modified":1606987784807},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"f85a222ec3f9bc27eb7978015e63a16514b38791","modified":1586054623000},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"e859fe6e0259e0c123cb7ceda6e4cac836318ffc","modified":1586054623000},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"0f2e1e27d21492cf228e786daead985b1e1dcea4","modified":1586054623000},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"73624d9db81e87ff0c12310bb873fbd0b5221021","modified":1586054623000},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"e2865b3003ec07892e9112692e7ec786ee926ae8","modified":1586054623000},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"c3039180ddb2eb17e724b8441e5f93e79859aef7","modified":1586054623000},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"b2b22d4fc4e46b051f67216c391f629f4ff552b5","modified":1586054623000},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"6ae58a57b83a5999d0b6a737ec868f084d208f89","modified":1586054623000},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"5284712d84bbaa4f0d88026ac3ec5a8c13e00056","modified":1586054623000},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"9ea672db65f1e5b8fad1ffafb1614f25adc97e63","modified":1586054623000},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"fc50cb4bbc1f4d0e4c9f5941f1c3c74bea742db7","modified":1586054623000},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"c6f713316ce75ad08ac5d1587bd8ce42e894e9ae","modified":1586054623000},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"785cb588a31215876f6737213054ba0e8552fff0","modified":1586054623000},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"4608af6151f0e32f668c89f09343748340021478","modified":1586054623000},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"0aaf0a111b9aa07ff37f6286eeac5506283f47f8","modified":1586054623000},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"d439d86818de179d64965d4f7f5fa56147fd9221","modified":1586054623000},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"6310903eb0e434d6f9a59ca669aab7fae38d4797","modified":1586054623000},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"05f5e2acace5730cdf7bed650375ad88f6b5d1b7","modified":1586054623000},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"bf604fe9c435f0fb9a559cac9c35772579b590e8","modified":1586054623000},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"4e73f10eacb5d00a0681cb44fe5c039cd8ab03cd","modified":1586054623000},{"_id":"themes/matery/source/css/my.css","hash":"37683a9f11c68903a53e2b8593ca8c095a721896","modified":1586054623000},{"_id":"themes/matery/source/css/matery.css","hash":"0d345a72318fd7aadcb6fcaa6f3abac94b91001c","modified":1586054623000},{"_id":"themes/matery/source/css/gitment.css","hash":"d5ef623065d1fbc897119f7b70ccf7563e329917","modified":1586054623000},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"4e3e855767ac5a48b13af1d6a42df13d8975e03f","modified":1586054623000},{"_id":"themes/matery/source/medias/contact.jpg","hash":"5322ca54c3d0c7651991ffc94789111158e786a0","modified":1606052873401},{"_id":"themes/matery/source/medias/logo-1.png","hash":"0f4145b9a712f9662e4fae1b0086ce74cf1f9fc4","modified":1586054623000},{"_id":"themes/matery/source/js/matery.js","hash":"208b7806caa943c115aa0825c9c72a0781404775","modified":1586054623000},{"_id":"source/_posts/Chinese-chess/2.png","hash":"632bf3de21ead8117aa7d65f01a6df4b61609e33","modified":1607844685948},{"_id":"source/_posts/Fuzzy-cluster-analysis/2.png","hash":"6a703b7d17a00713064cfee6ce4f019d2e690f47","modified":1607168311892},{"_id":"source/_posts/Fuzzy-cluster-analysis/7.png","hash":"d565cc3409e5f66e78461d963e456912e99b4505","modified":1607168341017},{"_id":"themes/matery/source/js/search.js","hash":"77ecae23dd3edd8ad962c5b12954652bb2f7a1b6","modified":1586054623000},{"_id":"source/_posts/Raspberry-Pi-camera/1.png","hash":"c1322f83da192aade68904606dbe47918a76194f","modified":1606981497964},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"5dfcbcee866e9dc564916416281885f3e320871e","modified":1586054623000},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"ded9739f803d114c9168d3351fded72b3b478b4c","modified":1586054623000},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"5a8e6d07ffa55642418ab3fd4b263aa08284b77a","modified":1586054623000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1586054623000},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1586054623000},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"b74a381adf6ef8404d6a0452c2b9f44b47219c80","modified":1586054623000},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"ea8b51e4d75e7b2cd63e4d5bcb8db2cf7f23f5db","modified":1586054623000},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"215910dc8f63fd50b97957e5fcdc8480aa2728cb","modified":1586054623000},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","hash":"9cd57c67fbd3e3067f80793ef8445f5ff7783563","modified":1586054623000},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"33810b2b757fc4327bc1d3b83bb5e0d3dc1fec5b","modified":1586054623000},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"a0625d8b432af8bdc820f8768d36cde439e7257c","modified":1586054623000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"5d52d3b34fceb9d7e11f1beaf7ed380b4249dec4","modified":1586054623000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"26849509f196a2d21bbfd15696e5d5153163b8f1","modified":1586054623000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"4e6538c8312aeeab845d361c37a8c1a0931241f0","modified":1586054623000},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"021898a16279ac2ffe75af4f902fab2a0a39f11a","modified":1586054623000},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"f81cd7bfcf7aa2d043bd3e6077df42656fc44b82","modified":1586054623000},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1586054623000},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1586054623000},{"_id":"themes/matery/source/libs/others/explosion.min.js","hash":"417b68e2cf2c6de2119c57626f4412105a8457f5","modified":1586054623000},{"_id":"themes/matery/source/libs/others/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1586054623000},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1586054623000},{"_id":"themes/matery/source/libs/others/snow.js","hash":"b393f069781eef788a0ae66b2681cece8fea2851","modified":1586054623000},{"_id":"themes/matery/source/libs/others/text.js","hash":"1791782cde0d1e4197f2ed58ecb7dd6aefddd169","modified":1586054623000},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1586054623000},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"f646f2bb75bcd1eb65b2788ac7bf15d4fd243ce9","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/ajin.jpg","hash":"76cb8e872472ff47a1b061c3bcff1c03f30c02b8","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/cww97.jpg","hash":"6af987cafc55d8d031534dd5e0f722fff19f70ec","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/feibar.jpg","hash":"343f47cb5c83cd866a1c824cbe2a112d02516d06","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/avatar.jpg","hash":"6850c3643f81caf79c8be7c454a501f0d3962e14","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/fun4go.png","hash":"0f4333973a972a629cfbabf601bc7c192b65376c","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/hael.jpg","hash":"e66ccedab38bb2e8fc45fac024e234ab8e7b9d54","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/huaji.jpg","hash":"86be7eed2a491455ccfe3e7da46366ff477765ca","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/hzwer.jpg","hash":"53a66bb5e65d2abd5b7412edf094c1e0b1094492","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/jianshu.png","hash":"caf1f3ff059628c1d8fc4ee3c345fb68c8b5988d","modified":1607061757511},{"_id":"themes/matery/source/medias/avatars/ids2.jpg","hash":"2c8d3ac6ab5ac6196bac83766fde975daca91c32","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/lijiaqian.png","hash":"9d96b3838acfae9a23b6e290fcfafceff0419c63","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/ldy.jpg","hash":"906ef214d1f2fe52a663738340ad5623f826bd82","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/kewlgrl.jpg","hash":"3af0fd1029a1511bb3c0e90871e41b35e714b01f","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/liyangzone.jpg","hash":"febab557e4c0d859ab4cc14b57d8106f5e3fccfb","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/liyucheng.jpg","hash":"12055a27fa667c87d2319475968056e1a8ad0f08","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/masterx.jpg","hash":"c9f7e83d895fa241cefd6e742f356106b35f1b89","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/michael.jpg","hash":"331a2ab20c299196f5a3089b8445fc8f55346cb6","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/mouse.jpg","hash":"2eae273885b9859150a1f98f74b3df12ca9a207c","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/mpy634.png","hash":"30f88e09c02b37c2dc684d4ee3237e327bb23f8b","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/nainiu.png","hash":"3b012a4f402872e8550d4c4c64291790943db677","modified":1607061159207},{"_id":"themes/matery/source/medias/avatars/toutiao.jpg","hash":"a35794d2dc09692fba7277f60c7e75ef23f99cec","modified":1607060988712},{"_id":"themes/matery/source/medias/avatars/qiqiang.jpg","hash":"081459866f922d9558a88cd4d7155d91fa730322","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/tawn.jpg","hash":"68a1cbacbb2370912b000c9d8d2b16196c918a50","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/taotao.jpg","hash":"e668254375ddd40a684ff4669c3421851bebd36e","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/spacesac.png","hash":"ff1bdb058f1f0499312da1a082ba97d78590db1a","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/ywsydwsbn.jpg","hash":"d3ff94fa72f2582dbeedf3057e17571fcc089bee","modified":1607060693397},{"_id":"themes/matery/source/medias/avatars/yezijie.png","hash":"8a53537eb69f749115e512b6da061e7f23cd04e5","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/sunchangzhi.jpg","hash":"bbe2a15fd474ab62dbd14fea72deb1113a4fb005","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/zhihu.jpg","hash":"a2b8d3f86ea79fbae1d4fb744c1e1293777f7d5f","modified":1607052527662},{"_id":"themes/matery/source/medias/avatars/zhaokangzhe.jpg","hash":"c8242bd13f08a9ddb97e26f216bc729b12ed9058","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"c4cc724f4572a9bcede7443a4f4c0393d3073868","modified":1586054623000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1586054623000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"82276be41d2001e820020a219b90ad5b026302d1","modified":1586054623000},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"7a551393b8360731104fdef1af36a6f3638f5855","modified":1586054623000},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"f1558f12d96a352e490166d543a8e821dd3bb2bc","modified":1586054623000},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"5a13983930b019450e4fe01a407c64b3dd316be4","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/antnlp.ico","hash":"29475f350b989331cebd702a315f020917d06ed8","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/babyq.png","hash":"be5432588003e5a52c02e690622eec72b5f7346c","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/bytedtrans.png","hash":"ce59d69e5106f20548f4ec9b6429c8fcc787ea08","modified":1607051642179},{"_id":"themes/matery/source/medias/avatars/gsy.jpg","hash":"6a175e2ba56a2280d40a2e654b559be41c3a0a48","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/duyupei.jpg","hash":"3c02ed4cf57dc37e4f4b8314bf5094833a854cb0","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/jiejie.jpg","hash":"a52476e25bec2391674e77a889a89341fbb29791","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/mizunashi.png","hash":"5fc300701d3b4250a307ed70e3a3aa0d5395c808","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","hash":"992e0d803160d2ae867be5eb0032d324d1cedffb","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/qiandongwei.jpg","hash":"6873551596a4513d01898ad866c4073c68270c57","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/taowei.jpg","hash":"e58b03b70656aa7a27238be38dac3896d9d16f10","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/xuzhongyou.jpg","hash":"1db4dfaf23cf250f222a398326562d4170d3aaa1","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/xiejiadong.jpg","hash":"f1a31f89426bd4dccdaba2170f4fc701336702e1","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/zhangting.jpg","hash":"10ee25ae3531f046a8bd3696c1cc8a16f0f25e1b","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/zzw.jpg","hash":"5d385b5732644b07b937a4919abc83cb95e14513","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"309f484b6e69e877de6a7fb847d66497d22bbd65","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"1f8bbfbd625448b4b2a748b75636e456b826dcd3","modified":1586054623000},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"3480f00d284c812d623ed16a9e0ead3fb964c72e","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1586054623000},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"2c27939768606603bee3b5e6c8a722596a667e60","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1586054623000},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"f8cd48e1fff82ecd54a7ce3e69de8dba7c92d113","modified":1586054623000},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1586054623000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1586054623000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1586054623000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1586054623000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1586054623000},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"c843f0dc497314574c608ca28cc742bb041786d5","modified":1586054623000},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"f63c7c489524ccb5d95e74fcd6618116c58fb305","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/0xbird.png","hash":"f9d597dfcb49e1e2be06138b24028291f5638610","modified":1586054623000},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"4fcbc9dd8ec0316e9dd5bfd0caf86f1520b10b3f","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"d8cc7a730668943dcb0776cfa240a0cf76826363","modified":1586054623000},{"_id":"themes/matery/source/medias/music/avatars/tiantangdemogui.jpg","hash":"f005578ddb4d3d731838db89a708f39f18d50e60","modified":1586054623000},{"_id":"source/_posts/SSL-secure-network-communication/1.png","hash":"e058559601f11f84b6bdcc4437d332077f3904e2","modified":1607905498743},{"_id":"themes/matery/source/medias/music/avatars/yequ.jpg","hash":"103beb9ab33434b434fa37a30aecdb29db633024","modified":1586054623000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1586054623000},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1586054623000},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"04c6b2782ce4610c429563110f6a20a47432fc4c","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/milyyy.jpg","hash":"ac2826d9c28346efeb967df01465a2c74d9041fe","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/mashiro.jpg","hash":"250e911c16eeb6acb1e6214ad3e6a3d762850a8e","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/lyn-draw.jpg","hash":"837d5d5df4dcb086d2da114d0d85084b4ec18768","modified":1586054623000},{"_id":"themes/matery/source/medias/music/avatars/yiluxiangbei.jpg","hash":"01b12e3aca7385a88412c12539e1a608a78896fa","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/qianqian.png","hash":"fed254c4e7eb58ee22d647acb83f1d08f4508f8f","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"d4db93afdff4ce889dd8271bcf9e80eb3c0bf866","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"280fa1c6493d7fdccfc18bd486446bacd9afe623","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"1c1063c29f827cf52eeef7ca8dc2d7e4efa31a76","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"02ec4566225102778c3837f08b24de02faf460a6","modified":1586054623000},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"542279c640dcc37c6c944e9f7f8e002c34069087","modified":1606797445838},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1586054623000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1586054623000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/jitao.jpg","hash":"5934b9baccebccbc2be2ead5d84ad32dd41f9559","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/lzh.png","hash":"8ffcbf19d6b38b891dbe408d9a4e9513b56f247e","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"a3cfdee2120195ab36b2fdd074d5558852e69297","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"c2892770fd5617418fd33d6f834879e05b2cdafd","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"1d8863277d744e1a18a2778ac26041bda5b03a98","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/28.jpg","hash":"c73036359640a67a8b17db7ba0e968c088957ab8","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"ee598933707f8bb98ecbf36925f24e8a1c4bd2d6","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/25.jpg","hash":"d0668539783fc615f14178644e486a6befb90c0c","modified":1586054623000},{"_id":"themes/matery/source/favicon.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1570158217076},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/feibar.png","hash":"eceaefcbbca1bf49b582eaa649d311cf4fe69dd6","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"11a6de283124964370dbfaf0e74f2f1e9ac8394d","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"255aaa4375da855bd80b38cfcc253de892a9d4cf","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/26.jpg","hash":"c66a4e7a2e670b63759a091f9428ee7f971d7b56","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/27.jpg","hash":"7ea6f890cc59def8b1c9f393e4ae77cd16c79aad","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"bd400da9123424afe7ba6c839be9ad7697c1245b","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/zhangyi.jpg","hash":"c9130036aac9a7ac8d62e33550a9d64896cdc364","modified":1586054623000},{"_id":"themes/matery/source/medias/music/avatars/daoshu.jpg","hash":"eee120fdf5ccbe86aa7d51826c4c773e76e6357f","modified":1586054623000},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"6ddd1bcbb62a2d28c5be3b9acb7418849d60b2e7","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/jingjing.jpg","hash":"bfcab0139edb2509de984cb0a9b156879c355158","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"ceb8e0c195a7fe7420334efa114e98cd0e1c6523","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"84ba9cf61045de789426eeb6333910266ce29b8c","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/24.jpg","hash":"72bc68fb0673b84ab9f863d2979396cdc268a76c","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"a77810cc2224446f5d4e1a857a8d480f21e81f83","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"698fc46e97428d73c9d4e3d254e88b9b66fb38cd","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"0801e96a2f4cbd14b2ad44547e5ffbb23822e751","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"2a47d1123d9c4c6255b7b4817a582d2fa9aea808","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"f1d720039d654d693c32150c06c78cfc3663b0b4","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"66de48d963e7f221931e550b2442da0cd40cbaa8","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"c74ce6fa4eee122e147ec55532744f34a87ae2bf","modified":1586054623000},{"_id":"themes/matery/source/medias/avatars/logo.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1570158217076},{"_id":"themes/matery/source/medias/logo.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1570158217076},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"f81e97edf705ab45b989b2b15d6a13c005ccaa32","modified":1586054623000},{"_id":"source/_posts/Chinese-chess/1.gif","hash":"34f66be96d19ca09be28f392c8d430b3c200e7fc","modified":1607844675923},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1586054623000},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"8789b5e4daf0029a6c88f238f10e54d01c4fce82","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"aff885598033614639944c7559b4849f883e2b34","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"2b30186c6d78ed76fa5f278be57290c1bd22c96a","modified":1586054623000},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"0f4211a0365e1aa439e439ffca5f330b031150be","modified":1606797468463},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"cd54b116609f5741cc7db0f7f49bf56ac356ddfb","modified":1586054623000},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"e06afe32a867f7a6e861618e0b5ac9d93cd71d05","modified":1586054623000},{"_id":"public/baidu_urls.txt","hash":"69a631b45cdf814a368d18a8c18224e74385dea2","modified":1608019079526},{"_id":"public/baidusitemap.xml","hash":"4c6a3607e776abb42e0cb4bcca10709fc833f75a","modified":1608019079526},{"_id":"public/atom.xml","hash":"aaf2c605fcaaba7a07a6e72dfa301d4b648378f1","modified":1608019079527},{"_id":"public/search.xml","hash":"96e07fd8fc800f70f9631395b289d0311cb1b346","modified":1608019079539},{"_id":"public/sitemap.xml","hash":"574c4136c0b72d61274cc048e37ae36f4ab95f2a","modified":1608019079539},{"_id":"public/404.html","hash":"81a254fccc71d45f34c9b65cfe934fc8a217983c","modified":1608019080672},{"_id":"public/tags/index.html","hash":"f76d1a5eeb7b6a6b426c48fb95679ec34c6af690","modified":1608019080672},{"_id":"public/categories/index.html","hash":"cf40549e758f4ff311f75c60f3789847c51d473d","modified":1608019080718},{"_id":"public/about/index.html","hash":"3e2c9f00b6f594b4a567882ce73bf6c4a47e99db","modified":1608019080725},{"_id":"public/contact/index.html","hash":"0fc1d7c8ab19615b7f637c65412ffdd5b28b2b72","modified":1608019080726},{"_id":"public/2020/12/13/chinese-chess/index.html","hash":"2a2154dd09e6e144ce6639b3bddedf5efce4c787","modified":1608019080727},{"_id":"public/2020/12/10/vue-3-0/index.html","hash":"2e0ccb32ac826deb5fbe6cfc758baa193d96d34f","modified":1608019080727},{"_id":"public/2020/12/08/analytic-hierarchy-process/index.html","hash":"388b7320d0c671747c87c8b06e89e164af663cf2","modified":1608019080727},{"_id":"public/2020/12/07/the-series-matrix-function-horzcat/index.html","hash":"d685f53c32215b7e4d645481876413031fcadbcf","modified":1608019080727},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/index.html","hash":"e44c1ed01dede5eb87d6516d75c7ef1cbca10d64","modified":1608019080727},{"_id":"public/archives/index.html","hash":"9925ba35397f97a34146ed191027546ec8a39417","modified":1608019080727},{"_id":"public/2020/12/05/different-color-canvas/index.html","hash":"8e8191c4e3b0a057ef5dc22f2798109ae70fec56","modified":1608019080727},{"_id":"public/2020/12/03/pip-change-source/index.html","hash":"2655bfbc1057dde374e43cd77bb15082295e429e","modified":1608019080728},{"_id":"public/2020/12/03/raspberry-pi-camera/index.html","hash":"31cb9b910d8b92828b5b85904c1e9df9105a824d","modified":1608019080728},{"_id":"public/friends/index.html","hash":"a97cb9d603bb4b5d8e576c37b0e2da7713189b68","modified":1608019080728},{"_id":"public/2020/12/01/ji-yu-hun-dun-logistic-jia-mi-suan-fa-de-tu-pian-jia-mi-yu-huan-yuan/index.html","hash":"641c6aa280da87407fbdd119ed58179c53647a5b","modified":1608019080728},{"_id":"public/2020/12/01/dimensionless-processing-of-data/index.html","hash":"6960f21acea683902f77544bd04ed03b9dd352fa","modified":1608019080728},{"_id":"public/2020/02/16/sort-algorithms/index.html","hash":"dfc0603b0573c50cb7c0d36a8c11252067ac508a","modified":1608019080728},{"_id":"public/archives/2020/index.html","hash":"2cddd53c5c3d56caf02b0fdc9f3a832df5ea188f","modified":1608019080728},{"_id":"public/2020/12/14/ssl-secure-network-communication/index.html","hash":"382faad99d71163cdbfe02c0590b141cbd2a4a89","modified":1608019080728},{"_id":"public/archives/2020/02/index.html","hash":"69605a1f1f353402dc88aa8943810237493ba5e1","modified":1608019080728},{"_id":"public/categories/python/index.html","hash":"8a148ff14591b93656ed496130ed67b0c7a79a9f","modified":1608019080728},{"_id":"public/archives/2020/12/index.html","hash":"5e33894bc72182cc980f6d9b3e5ab1d84146e2ff","modified":1608019080728},{"_id":"public/categories/matlab/index.html","hash":"a8da2238aaf338d00b517b726fb3e6b0c09eddaa","modified":1608019080728},{"_id":"public/categories/计算机/index.html","hash":"785c38fd02403f30230dac09d0c13bfe484e6e2c","modified":1608019080728},{"_id":"public/categories/编程算法/index.html","hash":"e64d176932451f936559d11b95e0d7d14a58572c","modified":1608019080728},{"_id":"public/categories/数学建模/index.html","hash":"f0555af5027e7345db684f912f7d3d3e1de3dad5","modified":1608019080728},{"_id":"public/index.html","hash":"43175b81b9c8a91b5d754aeff9c040c14b6ba18e","modified":1608019080728},{"_id":"public/categories/开发日常/index.html","hash":"3a50c673e251ca435bc2d42348f54b4a0986b32e","modified":1608019080729},{"_id":"public/categories/数字图像处理/index.html","hash":"d45b3b439255cfd7be3ddaa1ad198e9a1dbd7c25","modified":1608019080729},{"_id":"public/tags/数学分析模型/index.html","hash":"a398ec4e282412dc783d1bc422f868fa621ea59d","modified":1608019080729},{"_id":"public/tags/turtle/index.html","hash":"a1b92670f50f117044b4dd339113d31bac9fb471","modified":1608019080729},{"_id":"public/tags/matlab/index.html","hash":"9b055b9be6f28e0fcc4c64d3e37ca7a311c0aee5","modified":1608019080729},{"_id":"public/tags/numpy/index.html","hash":"a310168d710ca9ee760d1f72c4f500a7fb5b5d58","modified":1608019080729},{"_id":"public/tags/python/index.html","hash":"84a45ee7361c1c9193701eab91bdcac98f63e693","modified":1608019080729},{"_id":"public/tags/数学评价模型/index.html","hash":"384bbb3a32c147894b2ac75fa703d22d63ff00e8","modified":1608019080729},{"_id":"public/tags/OpenCV/index.html","hash":"5cd26ef751dce587ed08c191a780b11f24e809af","modified":1608019080729},{"_id":"public/tags/Raspberry-Pi/index.html","hash":"a153b6478a62ddcf43b1e375ed2089cebe870c05","modified":1608019080729},{"_id":"public/tags/网络/index.html","hash":"75bc5e701e1efb7d2f2f28fe43aefd91e8af2770","modified":1608019080729},{"_id":"public/tags/函数/index.html","hash":"873cfc0f4b85c9433d91c0a6c480ab0b9b2a3ac0","modified":1608019080729},{"_id":"public/tags/网络通信/index.html","hash":"9a64f454e98400373970f73ba094a19665dc5c0d","modified":1608019080729},{"_id":"public/tags/SSL/index.html","hash":"d66404c5eda2322e8fcb6f883a8b89acaf973244","modified":1608019080729},{"_id":"public/tags/安全/index.html","hash":"c2d49525495415517436558022205e71034d2c24","modified":1608019080729},{"_id":"public/tags/Vue-3-0/index.html","hash":"1a56e4188b5f195760d5d050438f8046aa71b752","modified":1608019080729},{"_id":"public/tags/leetcode/index.html","hash":"c3942d9b67b054e5aeb2bc28d1734395fb2397f6","modified":1608019080729},{"_id":"public/tags/javascript/index.html","hash":"9d4e995ea498b7273bf345a2da7962a9751b16b9","modified":1608019080729},{"_id":"public/tags/算法/index.html","hash":"0dfbecf69b179eb5fb77e259f9c8464396b8373c","modified":1608019080729},{"_id":"public/tags/pip/index.html","hash":"62aed2c294d8deffbd52c0ca54c2139ea7598c8e","modified":1608019080729},{"_id":"public/tags/Logistic加密/index.html","hash":"981c3a4b6b3007c36796c9b534d7b2bfac3e7003","modified":1608019080730},{"_id":"public/tags/数字图像处理/index.html","hash":"c8b7e8f757c8fac235a9119f82cfce57921c2d8d","modified":1608019080730},{"_id":"public/2020/12/15/fuzzy-comprehensive-evaluation/index.html","hash":"6c8fc145fbc049ac48b5fac7cb7fb0b6a0987882","modified":1608019080749},{"_id":"public/archives/page/2/index.html","hash":"172cbe91fa3df901df89886b41c29ecfd6e47502","modified":1608019080749},{"_id":"public/archives/2020/page/2/index.html","hash":"039c2c5f9c37955ca0531136210eb9c6b09827ec","modified":1608019080749},{"_id":"public/page/2/index.html","hash":"0a4c949d56a1f3808d8e31d52f9a94855fa5f945","modified":1608019080749},{"_id":"public/CNAME","hash":"a272f86b2a87102f8735a8369199dafb0edfc33e","modified":1608019080749},{"_id":"public/favicon-1.png","hash":"0f4145b9a712f9662e4fae1b0086ce74cf1f9fc4","modified":1608019080749},{"_id":"public/medias/contact.jpg","hash":"5322ca54c3d0c7651991ffc94789111158e786a0","modified":1608019080749},{"_id":"public/medias/logo-1.png","hash":"0f4145b9a712f9662e4fae1b0086ce74cf1f9fc4","modified":1608019080749},{"_id":"public/medias/avatars/feibar.jpg","hash":"343f47cb5c83cd866a1c824cbe2a112d02516d06","modified":1608019080749},{"_id":"public/medias/avatars/hael.jpg","hash":"e66ccedab38bb2e8fc45fac024e234ab8e7b9d54","modified":1608019080749},{"_id":"public/medias/avatars/cww97.jpg","hash":"6af987cafc55d8d031534dd5e0f722fff19f70ec","modified":1608019080749},{"_id":"public/medias/avatars/ajin.jpg","hash":"76cb8e872472ff47a1b061c3bcff1c03f30c02b8","modified":1608019080749},{"_id":"public/medias/avatars/hzwer.jpg","hash":"53a66bb5e65d2abd5b7412edf094c1e0b1094492","modified":1608019080749},{"_id":"public/medias/avatars/jianshu.png","hash":"caf1f3ff059628c1d8fc4ee3c345fb68c8b5988d","modified":1608019080749},{"_id":"public/medias/avatars/avatar.jpg","hash":"6850c3643f81caf79c8be7c454a501f0d3962e14","modified":1608019080749},{"_id":"public/medias/avatars/huaji.jpg","hash":"86be7eed2a491455ccfe3e7da46366ff477765ca","modified":1608019080749},{"_id":"public/medias/avatars/fun4go.png","hash":"0f4333973a972a629cfbabf601bc7c192b65376c","modified":1608019080749},{"_id":"public/medias/avatars/kewlgrl.jpg","hash":"3af0fd1029a1511bb3c0e90871e41b35e714b01f","modified":1608019080749},{"_id":"public/medias/avatars/ids2.jpg","hash":"2c8d3ac6ab5ac6196bac83766fde975daca91c32","modified":1608019080749},{"_id":"public/medias/avatars/lijiaqian.png","hash":"9d96b3838acfae9a23b6e290fcfafceff0419c63","modified":1608019080749},{"_id":"public/medias/avatars/ldy.jpg","hash":"906ef214d1f2fe52a663738340ad5623f826bd82","modified":1608019080749},{"_id":"public/medias/avatars/liyangzone.jpg","hash":"febab557e4c0d859ab4cc14b57d8106f5e3fccfb","modified":1608019080749},{"_id":"public/medias/avatars/mpy634.png","hash":"30f88e09c02b37c2dc684d4ee3237e327bb23f8b","modified":1608019080749},{"_id":"public/medias/avatars/mouse.jpg","hash":"2eae273885b9859150a1f98f74b3df12ca9a207c","modified":1608019080750},{"_id":"public/medias/avatars/nainiu.png","hash":"3b012a4f402872e8550d4c4c64291790943db677","modified":1608019080750},{"_id":"public/medias/avatars/liyucheng.jpg","hash":"12055a27fa667c87d2319475968056e1a8ad0f08","modified":1608019080750},{"_id":"public/medias/avatars/masterx.jpg","hash":"c9f7e83d895fa241cefd6e742f356106b35f1b89","modified":1608019080750},{"_id":"public/medias/avatars/qiqiang.jpg","hash":"081459866f922d9558a88cd4d7155d91fa730322","modified":1608019080750},{"_id":"public/medias/avatars/michael.jpg","hash":"331a2ab20c299196f5a3089b8445fc8f55346cb6","modified":1608019080750},{"_id":"public/medias/avatars/taotao.jpg","hash":"e668254375ddd40a684ff4669c3421851bebd36e","modified":1608019080750},{"_id":"public/medias/avatars/spacesac.png","hash":"ff1bdb058f1f0499312da1a082ba97d78590db1a","modified":1608019080750},{"_id":"public/medias/avatars/tawn.jpg","hash":"68a1cbacbb2370912b000c9d8d2b16196c918a50","modified":1608019080750},{"_id":"public/medias/avatars/toutiao.jpg","hash":"a35794d2dc09692fba7277f60c7e75ef23f99cec","modified":1608019080750},{"_id":"public/medias/avatars/ywsydwsbn.jpg","hash":"d3ff94fa72f2582dbeedf3057e17571fcc089bee","modified":1608019080750},{"_id":"public/medias/avatars/yezijie.png","hash":"8a53537eb69f749115e512b6da061e7f23cd04e5","modified":1608019080750},{"_id":"public/medias/avatars/zhihu.jpg","hash":"a2b8d3f86ea79fbae1d4fb744c1e1293777f7d5f","modified":1608019080750},{"_id":"public/medias/avatars/sunchangzhi.jpg","hash":"bbe2a15fd474ab62dbd14fea72deb1113a4fb005","modified":1608019080750},{"_id":"public/medias/featureimages/5.jpg","hash":"c4cc724f4572a9bcede7443a4f4c0393d3073868","modified":1608019080750},{"_id":"public/medias/avatars/babyq.png","hash":"be5432588003e5a52c02e690622eec72b5f7346c","modified":1608019080750},{"_id":"public/medias/avatars/zhaokangzhe.jpg","hash":"c8242bd13f08a9ddb97e26f216bc729b12ed9058","modified":1608019080750},{"_id":"public/medias/avatars/taowei.jpg","hash":"e58b03b70656aa7a27238be38dac3896d9d16f10","modified":1608019080750},{"_id":"public/medias/featureimages/0.jpg","hash":"1f8bbfbd625448b4b2a748b75636e456b826dcd3","modified":1608019080750},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1608019080751},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1608019080751},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1608019080751},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1608019080751},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1608019080751},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1608019080751},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1608019080751},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"3480f00d284c812d623ed16a9e0ead3fb964c72e","modified":1608019080751},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1608019080751},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1608019080751},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1608019080751},{"_id":"public/medias/music/avatars/tiantangdemogui.jpg","hash":"f005578ddb4d3d731838db89a708f39f18d50e60","modified":1608019080751},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1608019080751},{"_id":"public/medias/music/avatars/yequ.jpg","hash":"103beb9ab33434b434fa37a30aecdb29db633024","modified":1608019080751},{"_id":"public/medias/music/avatars/yiluxiangbei.jpg","hash":"01b12e3aca7385a88412c12539e1a608a78896fa","modified":1608019080752},{"_id":"public/2020/12/01/dimensionless-processing-of-data/1.png","hash":"99ccc7724643508fcf67caed0a3733072625f05a","modified":1608019080769},{"_id":"public/2020/12/01/dimensionless-processing-of-data/10.png","hash":"9bc78416b24f0428aa5ca26e657c37424d60a828","modified":1608019080770},{"_id":"public/2020/12/01/dimensionless-processing-of-data/13.png","hash":"682d548c43aef83806eabd09d4cbd3cccba364f2","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/12.png","hash":"c1082b99f7080c7af317cfb142447a0608a6fd8b","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/11.png","hash":"e651502cf0f13a5690bfd55928d12732ff6fbd5e","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/16.png","hash":"856cc6601bbf58c25000efb59cd027e830032a51","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/14.png","hash":"201f89690b94391bc32610c99d5ef2c3a38776d8","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/17.png","hash":"a7d4991d6956f30245315e26f96faeb30d58fe96","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/15.png","hash":"7bbef6b9baa145cf425a022dd0abfbb5fe85347d","modified":1608019080775},{"_id":"public/2020/12/01/dimensionless-processing-of-data/18.png","hash":"9981c508409438839db94d5da7eeed564758b873","modified":1608019080776},{"_id":"public/2020/12/13/chinese-chess/3.png","hash":"41f6966b3fb189bd9edb7a6c89f83a520d4d2d06","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/19.png","hash":"ec68c35c78e9076afb4ca33af811c419fcfd7be4","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/2.png","hash":"97b76fc43e1f78f1a14cdba90dcfdd732693297c","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/21.png","hash":"7577a2ad832b9a4d518528e2a133a6503ae542c4","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/5.png","hash":"e8e68122730736047a2d80c88e001c9a91e649c7","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/20.png","hash":"6d0cc08d7d8cf2dde4fce43e8cc1e51f534cae48","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/4.png","hash":"9d5b322556af662a8d6efff3aacbc73957cc4d06","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/22.png","hash":"1485a8dadab3f4d455d6bb4f24649ec0b382f8b0","modified":1608019080776},{"_id":"public/2020/12/01/dimensionless-processing-of-data/3.png","hash":"993e01feedbce5f6361ae84778e6aac8e7e22a48","modified":1608019080777},{"_id":"public/2020/12/01/dimensionless-processing-of-data/9.png","hash":"a021432545bf9f623633c36e3c0056b62ec567b5","modified":1608019080777},{"_id":"public/2020/12/01/dimensionless-processing-of-data/7.png","hash":"aaa28fc3960eac8a116a5fdeb49edfe0fa535073","modified":1608019080777},{"_id":"public/2020/12/01/dimensionless-processing-of-data/8.png","hash":"fa5a91bb8a660e127d1d4d6968e3bd4bc08c8cbc","modified":1608019080777},{"_id":"public/2020/12/01/dimensionless-processing-of-data/6.png","hash":"8fcf27710492c1e57cddf75f13321af184668438","modified":1608019080777},{"_id":"public/2020/02/16/sort-algorithms/1.png","hash":"cb9865eb782b293168e69406b212a0f3097b82a4","modified":1608019080777},{"_id":"public/2020/12/15/fuzzy-comprehensive-evaluation/2.png","hash":"6b5bb822f2560d66abbb1071ddf6a0d999f19a80","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/1.png","hash":"4c42bb86657280b533d8f568ae6201232d39f489","modified":1608019080777},{"_id":"public/2020/12/15/fuzzy-comprehensive-evaluation/1.png","hash":"79138ff275230ae437020d2e7cd3ce2fafa2666d","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/3.png","hash":"8c75313ac623a2c9fda802f528fd5d58dba8b2b0","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/4.png","hash":"9b3291e205a95ca9e6607c00e355a44619206a72","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/8.png","hash":"e1051df677698070afba9b5eebc947ce7bf7dc3b","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/5.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/2.jpg","hash":"48ce875ad1d23ca30e786d5d738ba11c4234edba","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/1.png","hash":"2f6909df2a44b73b64d120c7dc2127c790b46f53","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/7.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1608019080777},{"_id":"public/2020/12/05/different-color-canvas/6.png","hash":"c0d11573bc28a51617cf52396b46cb8add625dad","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/2.png","hash":"ad7da954fa246859c19d1b7d909803cec8202256","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/3.png","hash":"ebf00ff921aa2c9f8c92e91f38cd5682520999ec","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/4.png","hash":"7203a2bbe9509c6a4596c31db87768681ed5e9f4","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/8.png","hash":"a10332794e7e9eb28a3bd205a50de37348b8b76e","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/7.png","hash":"82d31a9d725cec12b4d1badce3932dcf98e9d98c","modified":1608019080777},{"_id":"public/2020/12/03/pip-change-source/9.png","hash":"02d52a204308eb8f671e63d084e504744786d8ca","modified":1608019080778},{"_id":"public/2020/12/03/pip-change-source/5.png","hash":"8b74c16e5c5f74db7fb74160f6710d8c2aa34cea","modified":1608019080778},{"_id":"public/2020/12/03/pip-change-source/6.png","hash":"66844c6cbfba45a7d187655aa3699a2a688c8c3e","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/10.png","hash":"157c61a4994a28d3e585e287ede5bf009071fef7","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/1.png","hash":"5c5dd3d436f23160c51239141d32be1b5a44a235","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/3.png","hash":"4d0871ea5fc372ac880f8a82a7630a67fceb7ce7","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/4.png","hash":"243db7f1ae5325e53817dd10618e5ef6d418c8c3","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/5.png","hash":"62ca80c77284634d0ffb396252e61e17a40c6a32","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/2.png","hash":"200b5e635472444161f03998486124ecfd1ddf89","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/9.png","hash":"75a72f7653b74874671425ab4f4e511f6f9cdae1","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/6.png","hash":"75a2f4c6550799451e2f769aec4b6228b74139f9","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/7.png","hash":"b15823c5eaee740524c9c742e98bcbacc425f296","modified":1608019080778},{"_id":"public/2020/12/08/analytic-hierarchy-process/8.png","hash":"a0026c217dee27e3732db086f21214a5dfbaca2d","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/1.png","hash":"baed0a71244347f0447403bab38864241964fcef","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/10.png","hash":"b8b8ee8ad2c830078f0c50bd13ad4d40dae36f1d","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/3.png","hash":"15007680a28abdd093d6dbd834cb89d3f405a64a","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/6.png","hash":"30545f70ad3f299f6fb8cf2e828299a24f78fa9a","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/5.png","hash":"a51fa8cf7cbaa998336d929bed85c3d3cb2c0b20","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/4.png","hash":"5f3714d185e33a19279ae22df9ba64ecaf21cc1c","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/9.png","hash":"1e1a4ce52215ede2c682b42766ce517bb2d5b2ce","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/11.png","hash":"770341cf1ba592aafba609487e79e035fcbf26fc","modified":1608019080778},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/8.png","hash":"024753e66ce8e0c070451e0a63e1d678a4fe7fbd","modified":1608019080778},{"_id":"public/medias/avatars/antnlp.ico","hash":"29475f350b989331cebd702a315f020917d06ed8","modified":1608019080778},{"_id":"public/medias/avatars/bytedtrans.png","hash":"ce59d69e5106f20548f4ec9b6429c8fcc787ea08","modified":1608019080778},{"_id":"public/medias/avatars/gsy.jpg","hash":"6a175e2ba56a2280d40a2e654b559be41c3a0a48","modified":1608019080778},{"_id":"public/medias/avatars/myzhihu.png","hash":"992e0d803160d2ae867be5eb0032d324d1cedffb","modified":1608019080779},{"_id":"public/medias/avatars/duyupei.jpg","hash":"3c02ed4cf57dc37e4f4b8314bf5094833a854cb0","modified":1608019080779},{"_id":"public/medias/avatars/jiejie.jpg","hash":"a52476e25bec2391674e77a889a89341fbb29791","modified":1608019080779},{"_id":"public/medias/avatars/xiejiadong.jpg","hash":"f1a31f89426bd4dccdaba2170f4fc701336702e1","modified":1608019080779},{"_id":"public/medias/banner/1.jpg","hash":"309f484b6e69e877de6a7fb847d66497d22bbd65","modified":1608019080779},{"_id":"public/medias/avatars/mizunashi.png","hash":"5fc300701d3b4250a307ed70e3a3aa0d5395c808","modified":1608019080779},{"_id":"public/medias/avatars/zzw.jpg","hash":"5d385b5732644b07b937a4919abc83cb95e14513","modified":1608019080779},{"_id":"public/medias/avatars/xuzhongyou.jpg","hash":"1db4dfaf23cf250f222a398326562d4170d3aaa1","modified":1608019080779},{"_id":"public/medias/avatars/zhangting.jpg","hash":"10ee25ae3531f046a8bd3696c1cc8a16f0f25e1b","modified":1608019080779},{"_id":"public/medias/avatars/qiandongwei.jpg","hash":"6873551596a4513d01898ad866c4073c68270c57","modified":1608019080779},{"_id":"public/medias/avatars/milyyy.jpg","hash":"ac2826d9c28346efeb967df01465a2c74d9041fe","modified":1608019080779},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1608019080779},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1608019080779},{"_id":"public/css/prism-line-numbers.css","hash":"e0db113a99e4a09d2161a539b1652d96e4a22fac","modified":1608019080780},{"_id":"public/css/prism-tomorrow.css","hash":"7efd268869bf07673639975ec764c9bdffd0fb04","modified":1608019080780},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1608019080789},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1608019080789},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1608019080789},{"_id":"public/js/matery.js","hash":"92f07106944f5ef7cd72e84bb3534513d00eebe1","modified":1608019080789},{"_id":"public/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1608019080789},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1608019080789},{"_id":"public/libs/codeBlock/codeLang.js","hash":"ea8b51e4d75e7b2cd63e4d5bcb8db2cf7f23f5db","modified":1608019080789},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1608019080790},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"b74a381adf6ef8404d6a0452c2b9f44b47219c80","modified":1608019080790},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1608019080790},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"215910dc8f63fd50b97957e5fcdc8480aa2728cb","modified":1608019080790},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1608019080790},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1608019080790},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1608019080790},{"_id":"public/libs/others/snow.js","hash":"7f3b1ad2f64d4473210a2c3218893649c73c980e","modified":1608019080790},{"_id":"public/libs/others/explosion.min.js","hash":"417b68e2cf2c6de2119c57626f4412105a8457f5","modified":1608019080790},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1608019080790},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1608019080790},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1608019080791},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1608019080791},{"_id":"public/libs/others/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1608019080791},{"_id":"public/libs/others/text.js","hash":"1791782cde0d1e4197f2ed58ecb7dd6aefddd169","modified":1608019080791},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1608019080791},{"_id":"public/css/matery.css","hash":"caa63c2c7908e45ebbbea0fbdc72d09b7b6d5b76","modified":1608019080791},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1608019080792},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1608019080792},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1608019080792},{"_id":"public/libs/codeBlock/clipboard.min.js","hash":"9cd57c67fbd3e3067f80793ef8445f5ff7783563","modified":1608019080792},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1608019080792},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1608019080792},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1608019080792},{"_id":"public/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1608019080792},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1608019080792},{"_id":"public/libs/jquery/jquery-2.2.0.min.js","hash":"5d7e5bbfa540f0e53bd599e4305e1a4e815b5dd1","modified":1608019080792},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1608019080792},{"_id":"public/libs/valine/Valine.min.js","hash":"4e34802ccbb59f1daa58a62241ff57f923e50600","modified":1608019080792},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1608019080792},{"_id":"public/libs/awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1608019080792},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1608019080792},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1608019080792},{"_id":"public/libs/materialize/materialize.min.css","hash":"4d46df5f22cbc24eefa76228c7ee308dc3585594","modified":1608019080792},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"28bdb33c9eb609c2f30d431df1a4cf8ca70bf841","modified":1608019080793},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1608019080793},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1608019080793},{"_id":"public/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1608019080793},{"_id":"public/libs/valine/av-min.js","hash":"2577e72b52b736d99649f9e95be8976d58563333","modified":1608019080793},{"_id":"public/medias/reward/wechat.png","hash":"0f4211a0365e1aa439e439ffca5f330b031150be","modified":1608019080793},{"_id":"public/2020/12/13/chinese-chess/2.png","hash":"632bf3de21ead8117aa7d65f01a6df4b61609e33","modified":1608019080794},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/7.png","hash":"d565cc3409e5f66e78461d963e456912e99b4505","modified":1608019080794},{"_id":"public/2020/12/05/fuzzy-cluster-analysis/2.png","hash":"6a703b7d17a00713064cfee6ce4f019d2e690f47","modified":1608019080794},{"_id":"public/medias/avatars/0xbird.png","hash":"f9d597dfcb49e1e2be06138b24028291f5638610","modified":1608019080794},{"_id":"public/medias/featureimages/13.jpg","hash":"d8cc7a730668943dcb0776cfa240a0cf76826363","modified":1608019080794},{"_id":"public/medias/avatars/lyn-draw.jpg","hash":"837d5d5df4dcb086d2da114d0d85084b4ec18768","modified":1608019080794},{"_id":"public/medias/banner/6.jpg","hash":"4fcbc9dd8ec0316e9dd5bfd0caf86f1520b10b3f","modified":1608019080794},{"_id":"public/medias/banner/2.jpg","hash":"280fa1c6493d7fdccfc18bd486446bacd9afe623","modified":1608019080794},{"_id":"public/medias/featureimages/14.jpg","hash":"1c1063c29f827cf52eeef7ca8dc2d7e4efa31a76","modified":1608019080794},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1608019080794},{"_id":"public/medias/avatars/lzh.png","hash":"8ffcbf19d6b38b891dbe408d9a4e9513b56f247e","modified":1608019080795},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1608019080796},{"_id":"public/medias/banner/0.jpg","hash":"d4db93afdff4ce889dd8271bcf9e80eb3c0bf866","modified":1608019080796},{"_id":"public/medias/avatars/qianqian.png","hash":"fed254c4e7eb58ee22d647acb83f1d08f4508f8f","modified":1608019080796},{"_id":"public/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1608019080809},{"_id":"public/2020/12/03/raspberry-pi-camera/1.png","hash":"c1322f83da192aade68904606dbe47918a76194f","modified":1608019080809},{"_id":"public/medias/featureimages/22.jpg","hash":"02ec4566225102778c3837f08b24de02faf460a6","modified":1608019080813},{"_id":"public/medias/reward/alipay.jpg","hash":"542279c640dcc37c6c944e9f7f8e002c34069087","modified":1608019080813},{"_id":"public/medias/avatars/jitao.jpg","hash":"5934b9baccebccbc2be2ead5d84ad32dd41f9559","modified":1608019080814},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1608019080828},{"_id":"public/medias/featureimages/12.jpg","hash":"c2892770fd5617418fd33d6f834879e05b2cdafd","modified":1608019080828},{"_id":"public/medias/avatars/feibar.png","hash":"eceaefcbbca1bf49b582eaa649d311cf4fe69dd6","modified":1608019080829},{"_id":"public/medias/avatars/zhangyi.jpg","hash":"c9130036aac9a7ac8d62e33550a9d64896cdc364","modified":1608019080830},{"_id":"public/medias/avatars/mashiro.jpg","hash":"250e911c16eeb6acb1e6214ad3e6a3d762850a8e","modified":1608019080830},{"_id":"public/medias/music/avatars/daoshu.jpg","hash":"eee120fdf5ccbe86aa7d51826c4c773e76e6357f","modified":1608019080839},{"_id":"public/2020/12/14/ssl-secure-network-communication/1.png","hash":"e058559601f11f84b6bdcc4437d332077f3904e2","modified":1608019080839},{"_id":"public/medias/featureimages/2.jpg","hash":"1d8863277d744e1a18a2778ac26041bda5b03a98","modified":1608019080850},{"_id":"public/medias/banner/4.jpg","hash":"a3cfdee2120195ab36b2fdd074d5558852e69297","modified":1608019080850},{"_id":"public/medias/featureimages/28.jpg","hash":"c73036359640a67a8b17db7ba0e968c088957ab8","modified":1608019080850},{"_id":"public/medias/featureimages/17.jpg","hash":"11a6de283124964370dbfaf0e74f2f1e9ac8394d","modified":1608019080850},{"_id":"public/medias/banner/5.jpg","hash":"6ddd1bcbb62a2d28c5be3b9acb7418849d60b2e7","modified":1608019080850},{"_id":"public/medias/avatars/jingjing.jpg","hash":"bfcab0139edb2509de984cb0a9b156879c355158","modified":1608019080851},{"_id":"public/medias/featureimages/23.jpg","hash":"ee598933707f8bb98ecbf36925f24e8a1c4bd2d6","modified":1608019080856},{"_id":"public/medias/featureimages/25.jpg","hash":"d0668539783fc615f14178644e486a6befb90c0c","modified":1608019080856},{"_id":"public/medias/featureimages/3.jpg","hash":"ceb8e0c195a7fe7420334efa114e98cd0e1c6523","modified":1608019080857},{"_id":"public/medias/featureimages/26.jpg","hash":"c66a4e7a2e670b63759a091f9428ee7f971d7b56","modified":1608019080857},{"_id":"public/medias/featureimages/20.jpg","hash":"84ba9cf61045de789426eeb6333910266ce29b8c","modified":1608019080857},{"_id":"public/medias/featureimages/24.jpg","hash":"72bc68fb0673b84ab9f863d2979396cdc268a76c","modified":1608019080858},{"_id":"public/medias/featureimages/18.jpg","hash":"c74ce6fa4eee122e147ec55532744f34a87ae2bf","modified":1608019080858},{"_id":"public/medias/banner/3.jpg","hash":"255aaa4375da855bd80b38cfcc253de892a9d4cf","modified":1608019080858},{"_id":"public/medias/featureimages/27.jpg","hash":"7ea6f890cc59def8b1c9f393e4ae77cd16c79aad","modified":1608019080860},{"_id":"public/medias/featureimages/1.jpg","hash":"f1d720039d654d693c32150c06c78cfc3663b0b4","modified":1608019080860},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1608019080861},{"_id":"public/medias/featureimages/19.jpg","hash":"2a47d1123d9c4c6255b7b4817a582d2fa9aea808","modified":1608019080861},{"_id":"public/medias/featureimages/10.jpg","hash":"66de48d963e7f221931e550b2442da0cd40cbaa8","modified":1608019080861},{"_id":"public/medias/featureimages/11.jpg","hash":"2b30186c6d78ed76fa5f278be57290c1bd22c96a","modified":1608019080861},{"_id":"public/medias/featureimages/21.jpg","hash":"a77810cc2224446f5d4e1a857a8d480f21e81f83","modified":1608019080864},{"_id":"public/medias/avatars/logo.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1608019080864},{"_id":"public/medias/featureimages/7.jpg","hash":"bd400da9123424afe7ba6c839be9ad7697c1245b","modified":1608019080867},{"_id":"public/medias/featureimages/6.jpg","hash":"698fc46e97428d73c9d4e3d254e88b9b66fb38cd","modified":1608019080867},{"_id":"public/medias/featureimages/16.jpg","hash":"0801e96a2f4cbd14b2ad44547e5ffbb23822e751","modified":1608019080867},{"_id":"public/favicon.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1608019080869},{"_id":"public/medias/featureimages/8.jpg","hash":"f81e97edf705ab45b989b2b15d6a13c005ccaa32","modified":1608019080869},{"_id":"public/2020/12/13/chinese-chess/1.gif","hash":"34f66be96d19ca09be28f392c8d430b3c200e7fc","modified":1608019080872},{"_id":"public/medias/logo.png","hash":"bd296d1cfe6aecaa443322b0a44f984c3e9a6c5e","modified":1608019080873},{"_id":"public/medias/featureimages/15.jpg","hash":"aff885598033614639944c7559b4849f883e2b34","modified":1608019080874},{"_id":"public/medias/featureimages/9.jpg","hash":"cd54b116609f5741cc7db0f7f49bf56ac356ddfb","modified":1608019080876},{"_id":"public/medias/featureimages/4.jpg","hash":"e06afe32a867f7a6e861618e0b5ac9d93cd71d05","modified":1608019080877}],"Category":[{"name":"python","_id":"ckipp1hsc0005ksvb6er5kx8g"},{"name":"数学建模","_id":"ckipp1hso000cksvbw0ft5pmg"},{"name":"matlab","_id":"ckipp1hsz000rksvb3i0hdcjt"},{"name":"计算机","_id":"ckipp1ht2000xksvbrojsu62p"},{"name":"开发日常","_id":"ckipp1ht50014ksvbl7gkiv60"},{"name":"编程算法","_id":"ckipp1ht7001aksvbxmbugi54"},{"name":"数字图像处理","_id":"ckipp1hu2002gksvb5ghkqc0d"}],"Data":[{"_id":"musics","data":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}]},{"_id":"friends","data":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}],"Page":[{"title":"404","date":"2019-07-19T08:41:10.000Z","type":"404","layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2019-07-19 16:41:10\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","updated":"2020-04-05T02:43:43.000Z","path":"404.html","comments":1,"_id":"ckipp1hcj0000ksvb56whnkyo","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":""},{"title":"categories","date":"2019-07-19T08:39:20.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-07-19 16:39:20\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2020-04-05T02:43:43.000Z","path":"categories/index.html","comments":1,"_id":"ckipp1hs80002ksvbtq2anok6","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":""},{"title":"archives","date":"2019-07-19T08:39:20.000Z","type":"archives","layout":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-07-19 16:39:20\ntype: \"archives\"\nlayout: \"archives\"\n---","updated":"2020-04-05T02:43:43.000Z","path":"archives/index.html","comments":1,"_id":"ckipp1hsb0004ksvbrnwjcfie","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":""},{"title":"tags","date":"2019-07-19T08:40:27.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-07-19 16:40:27\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2020-04-05T02:43:43.000Z","path":"tags/index.html","comments":1,"_id":"ckipp1hsf0008ksvb61hjqwm0","content":"","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":""},{"title":"about","date":"2020-12-01T02:41:10.000Z","type":"about","layout":"about","_content":"\n\n## 教育经历\n* <b>硕士 信息与通信工程</b>\n北京印刷学院\n2019/09 - 现在\n* <b>本科 物联网工程</b>\n西南科技大学\n2015/09 - 2019/06\n<b>综合排名专业第四</b>\n\n## 获得荣誉\n\n### 2019\n\n* <b>国家励志奖学金</b>\n大四学年\n* <b>优秀团员</b>\n校级\n* <b>三好学生</b>\n校级\n* <b>学习成绩优秀奖</b>\n校级\n\n### 2018\n\n* <b>国家励志奖学金</b>\n大三学年\n* <b>道德风尚奖</b>\n校级\n* <b>三好学生</b>\n校级\n* <b>学习成绩优秀奖</b>\n校级\n* <b>优秀学生干部</b>\n校级\n\n### 2017\n* <b>国家一等奖</b>\n第十六届全国大学生机器人大赛 Robocon 赛事\n* <b>国家励志奖学金</b>\n大二学年\n* <b>国家三等奖</b>\n“数创杯”全国大学生数学建模挑战赛\n* <b>道德风尚奖</b>\n校级\n* <b>三好学生</b>\n校级\n\n## 联系方式\n* <b>电子邮箱</b>\n3286547557@qq.com\n18281693803@163.com\n* <b>地址</b>\n北京市大兴区，邮编106200\n* <b>QQ 技术交流</b>\n3286547557\n\n![](https://i.loli.net/2020/12/01/rRvDLHseiCYhAJm.jpg)\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-12-01 10:41:10\ntype: \"about\"\nlayout: \"about\"\n---\n\n\n## 教育经历\n* <b>硕士 信息与通信工程</b>\n北京印刷学院\n2019/09 - 现在\n* <b>本科 物联网工程</b>\n西南科技大学\n2015/09 - 2019/06\n<b>综合排名专业第四</b>\n\n## 获得荣誉\n\n### 2019\n\n* <b>国家励志奖学金</b>\n大四学年\n* <b>优秀团员</b>\n校级\n* <b>三好学生</b>\n校级\n* <b>学习成绩优秀奖</b>\n校级\n\n### 2018\n\n* <b>国家励志奖学金</b>\n大三学年\n* <b>道德风尚奖</b>\n校级\n* <b>三好学生</b>\n校级\n* <b>学习成绩优秀奖</b>\n校级\n* <b>优秀学生干部</b>\n校级\n\n### 2017\n* <b>国家一等奖</b>\n第十六届全国大学生机器人大赛 Robocon 赛事\n* <b>国家励志奖学金</b>\n大二学年\n* <b>国家三等奖</b>\n“数创杯”全国大学生数学建模挑战赛\n* <b>道德风尚奖</b>\n校级\n* <b>三好学生</b>\n校级\n\n## 联系方式\n* <b>电子邮箱</b>\n3286547557@qq.com\n18281693803@163.com\n* <b>地址</b>\n北京市大兴区，邮编106200\n* <b>QQ 技术交流</b>\n3286547557\n\n![](https://i.loli.net/2020/12/01/rRvDLHseiCYhAJm.jpg)\n","updated":"2020-12-01T02:43:58.708Z","path":"about/index.html","comments":1,"_id":"ckipp1hsi000aksvb7rz03nai","content":"<h2 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h2><ul>\n<li><b>硕士 信息与通信工程</b><br>北京印刷学院<br>2019/09 - 现在</li>\n<li><b>本科 物联网工程</b><br>西南科技大学<br>2015/09 - 2019/06<br><b>综合排名专业第四</b></li>\n</ul>\n<h2 id=\"获得荣誉\"><a href=\"#获得荣誉\" class=\"headerlink\" title=\"获得荣誉\"></a>获得荣誉</h2><h3 id=\"2019\"><a href=\"#2019\" class=\"headerlink\" title=\"2019\"></a>2019</h3><ul>\n<li><b>国家励志奖学金</b><br>大四学年</li>\n<li><b>优秀团员</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n<li><b>学习成绩优秀奖</b><br>校级</li>\n</ul>\n<h3 id=\"2018\"><a href=\"#2018\" class=\"headerlink\" title=\"2018\"></a>2018</h3><ul>\n<li><b>国家励志奖学金</b><br>大三学年</li>\n<li><b>道德风尚奖</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n<li><b>学习成绩优秀奖</b><br>校级</li>\n<li><b>优秀学生干部</b><br>校级</li>\n</ul>\n<h3 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h3><ul>\n<li><b>国家一等奖</b><br>第十六届全国大学生机器人大赛 Robocon 赛事</li>\n<li><b>国家励志奖学金</b><br>大二学年</li>\n<li><b>国家三等奖</b><br>“数创杯”全国大学生数学建模挑战赛</li>\n<li><b>道德风尚奖</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:3286547557@qq.com\" target=\"_blank\" rel=\"noopener\">3286547557@qq.com</a><br><a href=\"mailto:18281693803@163.com\" target=\"_blank\" rel=\"noopener\">18281693803@163.com</a></li>\n<li><b>地址</b><br>北京市大兴区，邮编106200</li>\n<li><b>QQ 技术交流</b><br>3286547557</li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/12/01/rRvDLHseiCYhAJm.jpg\" alt></p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h2 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h2><ul>\n<li><b>硕士 信息与通信工程</b><br>北京印刷学院<br>2019/09 - 现在</li>\n<li><b>本科 物联网工程</b><br>西南科技大学<br>2015/09 - 2019/06<br><b>综合排名专业第四</b></li>\n</ul>\n<h2 id=\"获得荣誉\"><a href=\"#获得荣誉\" class=\"headerlink\" title=\"获得荣誉\"></a>获得荣誉</h2><h3 id=\"2019\"><a href=\"#2019\" class=\"headerlink\" title=\"2019\"></a>2019</h3><ul>\n<li><b>国家励志奖学金</b><br>大四学年</li>\n<li><b>优秀团员</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n<li><b>学习成绩优秀奖</b><br>校级</li>\n</ul>\n<h3 id=\"2018\"><a href=\"#2018\" class=\"headerlink\" title=\"2018\"></a>2018</h3><ul>\n<li><b>国家励志奖学金</b><br>大三学年</li>\n<li><b>道德风尚奖</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n<li><b>学习成绩优秀奖</b><br>校级</li>\n<li><b>优秀学生干部</b><br>校级</li>\n</ul>\n<h3 id=\"2017\"><a href=\"#2017\" class=\"headerlink\" title=\"2017\"></a>2017</h3><ul>\n<li><b>国家一等奖</b><br>第十六届全国大学生机器人大赛 Robocon 赛事</li>\n<li><b>国家励志奖学金</b><br>大二学年</li>\n<li><b>国家三等奖</b><br>“数创杯”全国大学生数学建模挑战赛</li>\n<li><b>道德风尚奖</b><br>校级</li>\n<li><b>三好学生</b><br>校级</li>\n</ul>\n<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:3286547557@qq.com\" target=\"_blank\" rel=\"noopener\">3286547557@qq.com</a><br><a href=\"mailto:18281693803@163.com\" target=\"_blank\" rel=\"noopener\">18281693803@163.com</a></li>\n<li><b>地址</b><br>北京市大兴区，邮编106200</li>\n<li><b>QQ 技术交流</b><br>3286547557</li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/12/01/rRvDLHseiCYhAJm.jpg\" alt></p>\n"},{"title":"friends","date":"2019-07-19T08:42:10.000Z","type":"friends","layout":"friends","_content":"\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**gain-wyj\n* **地址：**https://gain-wyj.cn\n* **简介：**公众号【做一个柔情的程序猿】，分享python和matlab算法\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2019-07-19 16:42:10\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**gain-wyj\n* **地址：**https://gain-wyj.cn\n* **简介：**公众号【做一个柔情的程序猿】，分享python和matlab算法\n","updated":"2020-12-01T02:49:55.883Z","path":"friends/index.html","comments":1,"_id":"ckipp1hso000eksvbb87spkzs","content":"<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>gain-wyj</li>\n<li><strong>地址：</strong><a href=\"https://gain-wyj.cn\">https://gain-wyj.cn</a></li>\n<li><strong>简介：</strong>公众号【做一个柔情的程序猿】，分享python和matlab算法</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>gain-wyj</li>\n<li><strong>地址：</strong><a href=\"https://gain-wyj.cn\">https://gain-wyj.cn</a></li>\n<li><strong>简介：</strong>公众号【做一个柔情的程序猿】，分享python和matlab算法</li>\n</ul>\n"},{"title":"contact","date":"2019-07-26T09:17:02.000Z","type":"contact","layout":"contact","_content":"\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加 QQ 技术交流【群号：3286547557】。\n\n我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**gain-wyj\n* **地址：**https://gain-wyj.cn\n* **简介：**公众号【做一个柔情的程序猿】，分享python和matlab算法\n","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2019-07-26 17:17:02\ntype: \"contact\"\nlayout: \"contact\"\n---\n\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加 QQ 技术交流【群号：3286547557】。\n\n我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**gain-wyj\n* **地址：**https://gain-wyj.cn\n* **简介：**公众号【做一个柔情的程序猿】，分享python和matlab算法\n","updated":"2020-12-01T02:49:19.620Z","path":"contact/index.html","comments":1,"_id":"ckipp1hsr000gksvb8k35d0xd","content":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加 QQ 技术交流【群号：3286547557】。</p>\n<p>我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。</p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>gain-wyj</li>\n<li><strong>地址：</strong><a href=\"https://gain-wyj.cn\">https://gain-wyj.cn</a></li>\n<li><strong>简介：</strong>公众号【做一个柔情的程序猿】，分享python和matlab算法</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加 QQ 技术交流【群号：3286547557】。</p>\n<p>我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。</p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>gain-wyj</li>\n<li><strong>地址：</strong><a href=\"https://gain-wyj.cn\">https://gain-wyj.cn</a></li>\n<li><strong>简介：</strong>公众号【做一个柔情的程序猿】，分享python和matlab算法</li>\n</ul>\n"}],"Post":[{"title":"国粹——中国象棋震撼来袭，python的赶紧上车！","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-13T07:22:31.000Z","password":null,"summary":"利用 python 将中国国粹——中国象棋展示出来。","_content":"\n> **阅读博客前，先点赞，养成习惯，顺便来个关注，这对我是最大的鼓励！！！**\n\n中国象棋相必大家都玩过，突发奇想，想着怎么用python把中国国粹的中国象棋做出来呢？？？？？？\n\n首先老样子看看用python做出来的效果：\n![](https://img-blog.csdnimg.cn/20200712205642693.gif#pic_center)\n\n# 第一步：导入资源包\n这次利用到的还是`海龟turtle`\n\n```python\nimport turtle\n```\n# 第二步：初始化\n初始化过程中首先获得海龟的钢笔，接着设置窗口的大小、标题和背景。\n\n```python\n# 初始化\npen = turtle.Pen()# 获取海龟的画笔\nturtle.setup(714,800)# 设置窗口的大小\nturtle.title(\"中国象棋\")# 设置窗口的标题\nturtle.bgcolor(\"#F4C79E\")# 设置窗口的背景\npen.hideturtle()\nturtle.tracer(False)\n```\n# 第三步：定义棋子名称与坐标\n\n中国象棋中由車、馬、相（象）、士（仕）、炮、卒、将、帥（帅）组成，各个棋子有相应的坐标。这个可供参考，如果有问题可以自行设置相应的坐标。\n\n```python\narray = [\n    # A方棋子\n    {\n        \"text\": \"車\",\n        \"role\": \"A\",\n        \"pix\": (-330, 369)\n\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"A\",\n        \"pix\": (-247.0, 369.0)\n    },\n    {\n        \"text\": \"象\",\n        \"role\": \"A\",\n        \"pix\": (-166.0, 369.0)\n    },\n    {\n        \"text\": \"士\",\n        \"role\": \"A\",\n        \"pix\": (-86.0, 368.0)\n    },\n    {\n        \"text\": \"将\",\n        \"role\": \"A\",\n        \"pix\": (-5.0, 369.0)\n    },\n    {\n        \"text\": \"士\",\n        \"role\": \"A\",\n        \"pix\": (79.0, 368.0)\n    },\n    {\n        \"text\": \"象\",\n        \"role\": \"A\",\n        \"pix\": (159.0, 368.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"A\",\n        \"pix\": (239.0, 367.0)\n    },\n    {\n        \"text\": \"車\",\n        \"role\": \"A\",\n        \"pix\": (318.0, 369.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-329.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-167.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-6.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (156.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (319.0, 126.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"A\",\n        \"pix\": (-248.0, 209.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"A\",\n        \"pix\": (239.0, 208.0)\n    },\n\n    # B方棋子\n    {\n        \"text\": \"車\",\n        \"role\": \"B\",\n        \"pix\": (-330.0, -359.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"B\",\n        \"pix\": (-247.0, -359.0)\n    },\n    {\n        \"text\": \"相\",\n        \"role\": \"B\",\n        \"pix\": (-166.0, -359.0)\n    },\n    {\n        \"text\": \"仕\",\n        \"role\": \"B\",\n        \"pix\": (-86.0, -359.0)\n    },\n    {\n        \"text\": \"帥\",\n        \"role\": \"B\",\n        \"pix\": (-5.0, -359.0)\n    },\n    {\n        \"text\": \"仕\",\n        \"role\": \"B\",\n        \"pix\": (79.0, -359.0)\n    },\n    {\n        \"text\": \"相\",\n        \"role\": \"B\",\n        \"pix\": (159.0, -359.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"B\",\n        \"pix\": (239.0, -359.0)\n    },\n    {\n        \"text\": \"車\",\n        \"role\": \"B\",\n        \"pix\": (318.0, -359.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-329.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-167.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-6.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (156.0, -117.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (319.0, -117.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"B\",\n        \"pix\": (-248.0, -199.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"B\",\n        \"pix\": (239.0, -199.0)\n    },\n]\n```\n# 第四步：绘制棋盘\n\n如下图，棋盘是由网格组成，中间有一个“楚河——漢界”。\n\n```python\n# 绘制棋盘函数\ndef draw():\n    # 绘制网格边框\n    pen.penup()\n    pen.setposition(-360, 402)\n    pen.pendown()\n    pen.color(\"#6E3F25\")\n    pen.width(30)\n    for x in range(1,5):\n        if x % 2 != 0:\n            pen.forward(710)\n        else:\n            pen.forward(795)\n        pen.right(90)\n\n    # 绘制网格\n    pen.penup()\n    pen.setposition(-330, 370)\n    pen.width(2)\n    pen.pendown()\n    for x in range(9):\n        pen.forward(650)\n        pen.backward(650)\n        pen.right(90)\n        pen.forward(81)\n        pen.left(90)\n    pen.forward(650)\n\n    pen.left(90)\n    for x in range(8):\n        pen.forward(730)\n        pen.backward(730)\n        pen.left(90)\n        pen.forward(81)\n        pen.right(90)\n\n    pen.penup()\n    pen.setposition(-280, 6)\n    pen.pendown()\n    pen.pencolor(\"#F4C79E\")\n    pen.right(90)\n    pen.width(79)\n    pen.forward(550)\n    pen.width(1)\n\n    pen.penup()\n    pen.setposition(-230, -25)\n    pen.color(\"#6E3F25\")\n    pen.write(\"楚河\", align=\"center\", font=(\"Baoli TC\", 50, \"bold\"))\n\n    pen.penup()\n    pen.forward(450)\n    pen.write(\"漢界\", align=\"center\", font=(\"Baoli TC\", 50, \"bold\"))\n\n    pen.penup()\n    for x in [[-3.0, 290.0], [-4.0, -278.0]]:\n        pen.up()\n        pen.setposition(x)\n        pen.down()\n        pen.setheading(45)\n        pen.pendown()\n        pen.width(2)\n        pen.color(\"#5E3F25\")\n        for x in range(4):\n            pen.forward(114)\n            pen.backward(114)\n            pen.left(90)\n\n    for x in array:\n        if x[\"role\"] == \"A\":\n            chess(x[\"text\"], x[\"pix\"], \"#A46A0C\", \"#2F1500\")\n        else:\n            chess(x[\"text\"], x[\"pix\"], \"#E69772\", \"#AB2A0E\")\n\n    turtle.update()# 刷新图像\n```\n\n![](https://img-blog.csdnimg.cn/20200712205826616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 第五步：定义落子函数\n如下图，我们每一次点击棋子并落下过程中，后台会显示我们点击棋子的状态和是否落子。\n\n```python\n# 落子函数\n\ndef chess(text, pix, bgcolor, textcolor):\n\n    \"\"\"\n    text:     落子显示文本\n    pix:      落子坐标\n    bgcolor:  背景颜色\n    textcolor:落子颜色\n    \"\"\"\n\n    pen.penup()\n    pen.setposition(pix)\n    pen.pendown()\n    pen.color(\"#6E3F25\")\n    pen.dot(70)\n    pen.color(bgcolor)\n    pen.dot(55)\n    pen.color(\"white\")\n    pen.penup()\n    pen.setheading(270)\n    pen.forward(25)\n    pen.color(textcolor)\n    pen.write(text, align=\"center\", font=(\"Baoli TC\", 40, \"bold\"))\n```\n\n落子情况：\n\n![](https://img-blog.csdnimg.cn/20200712205943984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 第六步：鼠标点击事件\n当我们点击棋子时会触发相应的时间，如上图所示，比如当我们点击“卒”时，它会显示我们点击的是哪一方的棋子，棋子的坐标是什么。\n\n```python\ndef click(x, y):\n\n    global priChess\n\n    if priChess == {}:\n        for z in array:\n            if abs(z[\"pix\"][0] - x) <= 35 and abs(z[\"pix\"][1] - y) <= 35:\n                print(\"发现目标：\", z)\n                priChess = z\n                pen.penup()\n                pen.setposition(z[\"pix\"])\n                pen.color(\"white\")\n                pen.penup()\n                pen.setheading(270)\n                pen.forward(25)\n                pen.write(z[\"text\"], align=\"center\", font=(\"Baoli TC\", 40, \"bold\"))\n                break\n    else:\n        print(\"落子\")\n        priChess[\"pix\"] = (x, y)\n        array.append(priChess)\n        priChess = {}\n        pen.reset()\n        draw()\n```\n","source":"_posts/Chinese-chess.md","raw":"---\ntitle: 国粹——中国象棋震撼来袭，python的赶紧上车！\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-13 15:22:31\npassword:\nsummary: 利用 python 将中国国粹——中国象棋展示出来。\ntags: \n- python\n- turtle\ncategories: \n- python\n---\n\n> **阅读博客前，先点赞，养成习惯，顺便来个关注，这对我是最大的鼓励！！！**\n\n中国象棋相必大家都玩过，突发奇想，想着怎么用python把中国国粹的中国象棋做出来呢？？？？？？\n\n首先老样子看看用python做出来的效果：\n![](https://img-blog.csdnimg.cn/20200712205642693.gif#pic_center)\n\n# 第一步：导入资源包\n这次利用到的还是`海龟turtle`\n\n```python\nimport turtle\n```\n# 第二步：初始化\n初始化过程中首先获得海龟的钢笔，接着设置窗口的大小、标题和背景。\n\n```python\n# 初始化\npen = turtle.Pen()# 获取海龟的画笔\nturtle.setup(714,800)# 设置窗口的大小\nturtle.title(\"中国象棋\")# 设置窗口的标题\nturtle.bgcolor(\"#F4C79E\")# 设置窗口的背景\npen.hideturtle()\nturtle.tracer(False)\n```\n# 第三步：定义棋子名称与坐标\n\n中国象棋中由車、馬、相（象）、士（仕）、炮、卒、将、帥（帅）组成，各个棋子有相应的坐标。这个可供参考，如果有问题可以自行设置相应的坐标。\n\n```python\narray = [\n    # A方棋子\n    {\n        \"text\": \"車\",\n        \"role\": \"A\",\n        \"pix\": (-330, 369)\n\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"A\",\n        \"pix\": (-247.0, 369.0)\n    },\n    {\n        \"text\": \"象\",\n        \"role\": \"A\",\n        \"pix\": (-166.0, 369.0)\n    },\n    {\n        \"text\": \"士\",\n        \"role\": \"A\",\n        \"pix\": (-86.0, 368.0)\n    },\n    {\n        \"text\": \"将\",\n        \"role\": \"A\",\n        \"pix\": (-5.0, 369.0)\n    },\n    {\n        \"text\": \"士\",\n        \"role\": \"A\",\n        \"pix\": (79.0, 368.0)\n    },\n    {\n        \"text\": \"象\",\n        \"role\": \"A\",\n        \"pix\": (159.0, 368.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"A\",\n        \"pix\": (239.0, 367.0)\n    },\n    {\n        \"text\": \"車\",\n        \"role\": \"A\",\n        \"pix\": (318.0, 369.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-329.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-167.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (-6.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (156.0, 126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"A\",\n        \"pix\": (319.0, 126.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"A\",\n        \"pix\": (-248.0, 209.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"A\",\n        \"pix\": (239.0, 208.0)\n    },\n\n    # B方棋子\n    {\n        \"text\": \"車\",\n        \"role\": \"B\",\n        \"pix\": (-330.0, -359.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"B\",\n        \"pix\": (-247.0, -359.0)\n    },\n    {\n        \"text\": \"相\",\n        \"role\": \"B\",\n        \"pix\": (-166.0, -359.0)\n    },\n    {\n        \"text\": \"仕\",\n        \"role\": \"B\",\n        \"pix\": (-86.0, -359.0)\n    },\n    {\n        \"text\": \"帥\",\n        \"role\": \"B\",\n        \"pix\": (-5.0, -359.0)\n    },\n    {\n        \"text\": \"仕\",\n        \"role\": \"B\",\n        \"pix\": (79.0, -359.0)\n    },\n    {\n        \"text\": \"相\",\n        \"role\": \"B\",\n        \"pix\": (159.0, -359.0)\n    },\n    {\n        \"text\": \"馬\",\n        \"role\": \"B\",\n        \"pix\": (239.0, -359.0)\n    },\n    {\n        \"text\": \"車\",\n        \"role\": \"B\",\n        \"pix\": (318.0, -359.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-329.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-167.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (-6.0, -126.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (156.0, -117.0)\n    },\n    {\n        \"text\": \"卒\",\n        \"role\": \"B\",\n        \"pix\": (319.0, -117.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"B\",\n        \"pix\": (-248.0, -199.0)\n    },\n    {\n        \"text\": \"炮\",\n        \"role\": \"B\",\n        \"pix\": (239.0, -199.0)\n    },\n]\n```\n# 第四步：绘制棋盘\n\n如下图，棋盘是由网格组成，中间有一个“楚河——漢界”。\n\n```python\n# 绘制棋盘函数\ndef draw():\n    # 绘制网格边框\n    pen.penup()\n    pen.setposition(-360, 402)\n    pen.pendown()\n    pen.color(\"#6E3F25\")\n    pen.width(30)\n    for x in range(1,5):\n        if x % 2 != 0:\n            pen.forward(710)\n        else:\n            pen.forward(795)\n        pen.right(90)\n\n    # 绘制网格\n    pen.penup()\n    pen.setposition(-330, 370)\n    pen.width(2)\n    pen.pendown()\n    for x in range(9):\n        pen.forward(650)\n        pen.backward(650)\n        pen.right(90)\n        pen.forward(81)\n        pen.left(90)\n    pen.forward(650)\n\n    pen.left(90)\n    for x in range(8):\n        pen.forward(730)\n        pen.backward(730)\n        pen.left(90)\n        pen.forward(81)\n        pen.right(90)\n\n    pen.penup()\n    pen.setposition(-280, 6)\n    pen.pendown()\n    pen.pencolor(\"#F4C79E\")\n    pen.right(90)\n    pen.width(79)\n    pen.forward(550)\n    pen.width(1)\n\n    pen.penup()\n    pen.setposition(-230, -25)\n    pen.color(\"#6E3F25\")\n    pen.write(\"楚河\", align=\"center\", font=(\"Baoli TC\", 50, \"bold\"))\n\n    pen.penup()\n    pen.forward(450)\n    pen.write(\"漢界\", align=\"center\", font=(\"Baoli TC\", 50, \"bold\"))\n\n    pen.penup()\n    for x in [[-3.0, 290.0], [-4.0, -278.0]]:\n        pen.up()\n        pen.setposition(x)\n        pen.down()\n        pen.setheading(45)\n        pen.pendown()\n        pen.width(2)\n        pen.color(\"#5E3F25\")\n        for x in range(4):\n            pen.forward(114)\n            pen.backward(114)\n            pen.left(90)\n\n    for x in array:\n        if x[\"role\"] == \"A\":\n            chess(x[\"text\"], x[\"pix\"], \"#A46A0C\", \"#2F1500\")\n        else:\n            chess(x[\"text\"], x[\"pix\"], \"#E69772\", \"#AB2A0E\")\n\n    turtle.update()# 刷新图像\n```\n\n![](https://img-blog.csdnimg.cn/20200712205826616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 第五步：定义落子函数\n如下图，我们每一次点击棋子并落下过程中，后台会显示我们点击棋子的状态和是否落子。\n\n```python\n# 落子函数\n\ndef chess(text, pix, bgcolor, textcolor):\n\n    \"\"\"\n    text:     落子显示文本\n    pix:      落子坐标\n    bgcolor:  背景颜色\n    textcolor:落子颜色\n    \"\"\"\n\n    pen.penup()\n    pen.setposition(pix)\n    pen.pendown()\n    pen.color(\"#6E3F25\")\n    pen.dot(70)\n    pen.color(bgcolor)\n    pen.dot(55)\n    pen.color(\"white\")\n    pen.penup()\n    pen.setheading(270)\n    pen.forward(25)\n    pen.color(textcolor)\n    pen.write(text, align=\"center\", font=(\"Baoli TC\", 40, \"bold\"))\n```\n\n落子情况：\n\n![](https://img-blog.csdnimg.cn/20200712205943984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 第六步：鼠标点击事件\n当我们点击棋子时会触发相应的时间，如上图所示，比如当我们点击“卒”时，它会显示我们点击的是哪一方的棋子，棋子的坐标是什么。\n\n```python\ndef click(x, y):\n\n    global priChess\n\n    if priChess == {}:\n        for z in array:\n            if abs(z[\"pix\"][0] - x) <= 35 and abs(z[\"pix\"][1] - y) <= 35:\n                print(\"发现目标：\", z)\n                priChess = z\n                pen.penup()\n                pen.setposition(z[\"pix\"])\n                pen.color(\"white\")\n                pen.penup()\n                pen.setheading(270)\n                pen.forward(25)\n                pen.write(z[\"text\"], align=\"center\", font=(\"Baoli TC\", 40, \"bold\"))\n                break\n    else:\n        print(\"落子\")\n        priChess[\"pix\"] = (x, y)\n        array.append(priChess)\n        priChess = {}\n        pen.reset()\n        draw()\n```\n","slug":"Chinese-chess","published":1,"updated":"2020-12-13T07:30:33.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hs40001ksvb69eter0i","content":"<blockquote>\n<p><strong>阅读博客前，先点赞，养成习惯，顺便来个关注，这对我是最大的鼓励！！！</strong></p>\n</blockquote>\n<p>中国象棋相必大家都玩过，突发奇想，想着怎么用python把中国国粹的中国象棋做出来呢？？？？？？</p>\n<p>首先老样子看看用python做出来的效果：<br><img src=\"https://img-blog.csdnimg.cn/20200712205642693.gif#pic_center\" alt></p>\n<h1 id=\"第一步：导入资源包\"><a href=\"#第一步：导入资源包\" class=\"headerlink\" title=\"第一步：导入资源包\"></a>第一步：导入资源包</h1><p>这次利用到的还是<code>海龟turtle</code></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> turtle<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"第二步：初始化\"><a href=\"#第二步：初始化\" class=\"headerlink\" title=\"第二步：初始化\"></a>第二步：初始化</h1><p>初始化过程中首先获得海龟的钢笔，接着设置窗口的大小、标题和背景。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 初始化</span>\npen <span class=\"token operator\">=</span> turtle<span class=\"token punctuation\">.</span>Pen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\"># 获取海龟的画笔</span>\nturtle<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">(</span><span class=\"token number\">714</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\"># 设置窗口的大小</span>\nturtle<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"中国象棋\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\"># 设置窗口的标题</span>\nturtle<span class=\"token punctuation\">.</span>bgcolor<span class=\"token punctuation\">(</span><span class=\"token string\">\"#F4C79E\"</span><span class=\"token punctuation\">)</span># 设置窗口的背景\npen<span class=\"token punctuation\">.</span>hideturtle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nturtle<span class=\"token punctuation\">.</span>tracer<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"第三步：定义棋子名称与坐标\"><a href=\"#第三步：定义棋子名称与坐标\" class=\"headerlink\" title=\"第三步：定义棋子名称与坐标\"></a>第三步：定义棋子名称与坐标</h1><p>中国象棋中由車、馬、相（象）、士（仕）、炮、卒、将、帥（帅）组成，各个棋子有相应的坐标。这个可供参考，如果有问题可以自行设置相应的坐标。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\" spellcheck=\"true\"># A方棋子</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"車\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">369</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"馬\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">247.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">369.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"象\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">166.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">369.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"士\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">86.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">368.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"将\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">369.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"士\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">79.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">368.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"象\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">159.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">368.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"馬\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">239.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">367.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"車\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">318.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">369.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">329.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">167.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">156.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">319.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"炮\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">248.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">209.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"炮\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">239.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">208.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># B方棋子</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"車\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">330.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"馬\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">247.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"相\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">166.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"仕\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">86.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"帥\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"仕\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">79.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"相\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">159.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"馬\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">239.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"車\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">318.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">359.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">329.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">167.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">126.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">156.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">117.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"卒\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">319.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">117.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"炮\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">248.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">199.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"炮\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">239.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">199.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"第四步：绘制棋盘\"><a href=\"#第四步：绘制棋盘\" class=\"headerlink\" title=\"第四步：绘制棋盘\"></a>第四步：绘制棋盘</h1><p>如下图，棋盘是由网格组成，中间有一个“楚河——漢界”。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 绘制棋盘函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 绘制网格边框</span>\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span> <span class=\"token number\">402</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>pendown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"#6E3F25\"</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> x <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">710</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">795</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 绘制网格</span>\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">330</span><span class=\"token punctuation\">,</span> <span class=\"token number\">370</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>pendown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">650</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token number\">650</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">81</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">650</span><span class=\"token punctuation\">)</span>\n\n    pen<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">730</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token number\">730</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">81</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>pendown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>pencolor<span class=\"token punctuation\">(</span><span class=\"token string\">\"#F4C79E\"</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">550</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"#6E3F25\"</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"楚河\"</span><span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Baoli TC\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">450</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"漢界\"</span><span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Baoli TC\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">290.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">278.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        pen<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>setheading<span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>pendown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"#5E3F25\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">)</span>\n            pen<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token number\">114</span><span class=\"token punctuation\">)</span>\n            pen<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> array<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">\"role\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span>\n            chess<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#A46A0C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#2F1500\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            chess<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#E69772\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#AB2A0E\"</span><span class=\"token punctuation\">)</span>\n\n    turtle<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\" spellcheck=\"true\"># 刷新图像</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200712205826616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<h1 id=\"第五步：定义落子函数\"><a href=\"#第五步：定义落子函数\" class=\"headerlink\" title=\"第五步：定义落子函数\"></a>第五步：定义落子函数</h1><p>如下图，我们每一次点击棋子并落下过程中，后台会显示我们点击棋子的状态和是否落子。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 落子函数</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">chess</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">,</span> bgcolor<span class=\"token punctuation\">,</span> textcolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    text:     落子显示文本\n    pix:      落子坐标\n    bgcolor:  背景颜色\n    textcolor:落子颜色\n    \"\"\"</span>\n\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>pendown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"#6E3F25\"</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span>bgcolor<span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>setheading<span class=\"token punctuation\">(</span><span class=\"token number\">270</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span>textcolor<span class=\"token punctuation\">)</span>\n    pen<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Baoli TC\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>落子情况：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200712205943984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<h1 id=\"第六步：鼠标点击事件\"><a href=\"#第六步：鼠标点击事件\" class=\"headerlink\" title=\"第六步：鼠标点击事件\"></a>第六步：鼠标点击事件</h1><p>当我们点击棋子时会触发相应的时间，如上图所示，比如当我们点击“卒”时，它会显示我们点击的是哪一方的棋子，棋子的坐标是什么。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">click</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">global</span> priChess\n\n    <span class=\"token keyword\">if</span> priChess <span class=\"token operator\">==</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> z <span class=\"token keyword\">in</span> array<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> abs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">35</span> <span class=\"token operator\">and</span> abs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">35</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发现目标：\"</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span>\n                priChess <span class=\"token operator\">=</span> z\n                pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>setposition<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">(</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>penup<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>setheading<span class=\"token punctuation\">(</span><span class=\"token number\">270</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span>\n                pen<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Baoli TC\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"落子\"</span><span class=\"token punctuation\">)</span>\n        priChess<span class=\"token punctuation\">[</span><span class=\"token string\">\"pix\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n        array<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>priChess<span class=\"token punctuation\">)</span>\n        priChess <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n        pen<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<blockquote>\n<p><strong>阅读博客前，先点赞，养成习惯，顺便来个关注，这对我是最大的鼓励！！！</strong></p>\n</blockquote>\n<p>中国象棋相必大家都玩过，突发奇想，想着怎么用python把中国国粹的中国象棋做出来呢？？？？？？</p>\n<p>首先老样子看看用python做出来的效果：<br><img src=\"https://img-blog.csdnimg.cn/20200712205642693.gif#pic_center\" alt></p>\n<h1 id=\"第一步：导入资源包\"><a href=\"#第一步：导入资源包\" class=\"headerlink\" title=\"第一步：导入资源包\"></a>第一步：导入资源包</h1><p>这次利用到的还是<code>海龟turtle</code></p>\n<pre><code class=\"python\">import turtle</code></pre>\n<h1 id=\"第二步：初始化\"><a href=\"#第二步：初始化\" class=\"headerlink\" title=\"第二步：初始化\"></a>第二步：初始化</h1><p>初始化过程中首先获得海龟的钢笔，接着设置窗口的大小、标题和背景。</p>\n<pre><code class=\"python\"># 初始化\npen = turtle.Pen()# 获取海龟的画笔\nturtle.setup(714,800)# 设置窗口的大小\nturtle.title(&quot;中国象棋&quot;)# 设置窗口的标题\nturtle.bgcolor(&quot;#F4C79E&quot;)# 设置窗口的背景\npen.hideturtle()\nturtle.tracer(False)</code></pre>\n<h1 id=\"第三步：定义棋子名称与坐标\"><a href=\"#第三步：定义棋子名称与坐标\" class=\"headerlink\" title=\"第三步：定义棋子名称与坐标\"></a>第三步：定义棋子名称与坐标</h1><p>中国象棋中由車、馬、相（象）、士（仕）、炮、卒、将、帥（帅）组成，各个棋子有相应的坐标。这个可供参考，如果有问题可以自行设置相应的坐标。</p>\n<pre><code class=\"python\">array = [\n    # A方棋子\n    {\n        &quot;text&quot;: &quot;車&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-330, 369)\n\n    },\n    {\n        &quot;text&quot;: &quot;馬&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-247.0, 369.0)\n    },\n    {\n        &quot;text&quot;: &quot;象&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-166.0, 369.0)\n    },\n    {\n        &quot;text&quot;: &quot;士&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-86.0, 368.0)\n    },\n    {\n        &quot;text&quot;: &quot;将&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-5.0, 369.0)\n    },\n    {\n        &quot;text&quot;: &quot;士&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (79.0, 368.0)\n    },\n    {\n        &quot;text&quot;: &quot;象&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (159.0, 368.0)\n    },\n    {\n        &quot;text&quot;: &quot;馬&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (239.0, 367.0)\n    },\n    {\n        &quot;text&quot;: &quot;車&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (318.0, 369.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-329.0, 126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-167.0, 126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-6.0, 126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (156.0, 126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (319.0, 126.0)\n    },\n    {\n        &quot;text&quot;: &quot;炮&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (-248.0, 209.0)\n    },\n    {\n        &quot;text&quot;: &quot;炮&quot;,\n        &quot;role&quot;: &quot;A&quot;,\n        &quot;pix&quot;: (239.0, 208.0)\n    },\n\n    # B方棋子\n    {\n        &quot;text&quot;: &quot;車&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-330.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;馬&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-247.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;相&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-166.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;仕&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-86.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;帥&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-5.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;仕&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (79.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;相&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (159.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;馬&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (239.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;車&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (318.0, -359.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-329.0, -126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-167.0, -126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-6.0, -126.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (156.0, -117.0)\n    },\n    {\n        &quot;text&quot;: &quot;卒&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (319.0, -117.0)\n    },\n    {\n        &quot;text&quot;: &quot;炮&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (-248.0, -199.0)\n    },\n    {\n        &quot;text&quot;: &quot;炮&quot;,\n        &quot;role&quot;: &quot;B&quot;,\n        &quot;pix&quot;: (239.0, -199.0)\n    },\n]</code></pre>\n<h1 id=\"第四步：绘制棋盘\"><a href=\"#第四步：绘制棋盘\" class=\"headerlink\" title=\"第四步：绘制棋盘\"></a>第四步：绘制棋盘</h1><p>如下图，棋盘是由网格组成，中间有一个“楚河——漢界”。</p>\n<pre><code class=\"python\"># 绘制棋盘函数\ndef draw():\n    # 绘制网格边框\n    pen.penup()\n    pen.setposition(-360, 402)\n    pen.pendown()\n    pen.color(&quot;#6E3F25&quot;)\n    pen.width(30)\n    for x in range(1,5):\n        if x % 2 != 0:\n            pen.forward(710)\n        else:\n            pen.forward(795)\n        pen.right(90)\n\n    # 绘制网格\n    pen.penup()\n    pen.setposition(-330, 370)\n    pen.width(2)\n    pen.pendown()\n    for x in range(9):\n        pen.forward(650)\n        pen.backward(650)\n        pen.right(90)\n        pen.forward(81)\n        pen.left(90)\n    pen.forward(650)\n\n    pen.left(90)\n    for x in range(8):\n        pen.forward(730)\n        pen.backward(730)\n        pen.left(90)\n        pen.forward(81)\n        pen.right(90)\n\n    pen.penup()\n    pen.setposition(-280, 6)\n    pen.pendown()\n    pen.pencolor(&quot;#F4C79E&quot;)\n    pen.right(90)\n    pen.width(79)\n    pen.forward(550)\n    pen.width(1)\n\n    pen.penup()\n    pen.setposition(-230, -25)\n    pen.color(&quot;#6E3F25&quot;)\n    pen.write(&quot;楚河&quot;, align=&quot;center&quot;, font=(&quot;Baoli TC&quot;, 50, &quot;bold&quot;))\n\n    pen.penup()\n    pen.forward(450)\n    pen.write(&quot;漢界&quot;, align=&quot;center&quot;, font=(&quot;Baoli TC&quot;, 50, &quot;bold&quot;))\n\n    pen.penup()\n    for x in [[-3.0, 290.0], [-4.0, -278.0]]:\n        pen.up()\n        pen.setposition(x)\n        pen.down()\n        pen.setheading(45)\n        pen.pendown()\n        pen.width(2)\n        pen.color(&quot;#5E3F25&quot;)\n        for x in range(4):\n            pen.forward(114)\n            pen.backward(114)\n            pen.left(90)\n\n    for x in array:\n        if x[&quot;role&quot;] == &quot;A&quot;:\n            chess(x[&quot;text&quot;], x[&quot;pix&quot;], &quot;#A46A0C&quot;, &quot;#2F1500&quot;)\n        else:\n            chess(x[&quot;text&quot;], x[&quot;pix&quot;], &quot;#E69772&quot;, &quot;#AB2A0E&quot;)\n\n    turtle.update()# 刷新图像</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/20200712205826616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<h1 id=\"第五步：定义落子函数\"><a href=\"#第五步：定义落子函数\" class=\"headerlink\" title=\"第五步：定义落子函数\"></a>第五步：定义落子函数</h1><p>如下图，我们每一次点击棋子并落下过程中，后台会显示我们点击棋子的状态和是否落子。</p>\n<pre><code class=\"python\"># 落子函数\n\ndef chess(text, pix, bgcolor, textcolor):\n\n    &quot;&quot;&quot;\n    text:     落子显示文本\n    pix:      落子坐标\n    bgcolor:  背景颜色\n    textcolor:落子颜色\n    &quot;&quot;&quot;\n\n    pen.penup()\n    pen.setposition(pix)\n    pen.pendown()\n    pen.color(&quot;#6E3F25&quot;)\n    pen.dot(70)\n    pen.color(bgcolor)\n    pen.dot(55)\n    pen.color(&quot;white&quot;)\n    pen.penup()\n    pen.setheading(270)\n    pen.forward(25)\n    pen.color(textcolor)\n    pen.write(text, align=&quot;center&quot;, font=(&quot;Baoli TC&quot;, 40, &quot;bold&quot;))</code></pre>\n<p>落子情况：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200712205943984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<h1 id=\"第六步：鼠标点击事件\"><a href=\"#第六步：鼠标点击事件\" class=\"headerlink\" title=\"第六步：鼠标点击事件\"></a>第六步：鼠标点击事件</h1><p>当我们点击棋子时会触发相应的时间，如上图所示，比如当我们点击“卒”时，它会显示我们点击的是哪一方的棋子，棋子的坐标是什么。</p>\n<pre><code class=\"python\">def click(x, y):\n\n    global priChess\n\n    if priChess == {}:\n        for z in array:\n            if abs(z[&quot;pix&quot;][0] - x) &lt;= 35 and abs(z[&quot;pix&quot;][1] - y) &lt;= 35:\n                print(&quot;发现目标：&quot;, z)\n                priChess = z\n                pen.penup()\n                pen.setposition(z[&quot;pix&quot;])\n                pen.color(&quot;white&quot;)\n                pen.penup()\n                pen.setheading(270)\n                pen.forward(25)\n                pen.write(z[&quot;text&quot;], align=&quot;center&quot;, font=(&quot;Baoli TC&quot;, 40, &quot;bold&quot;))\n                break\n    else:\n        print(&quot;落子&quot;)\n        priChess[&quot;pix&quot;] = (x, y)\n        array.append(priChess)\n        priChess = {}\n        pen.reset()\n        draw()</code></pre>\n"},{"title":"数学分析模型（一）：数据的无量纲处理方法及示例（附完整代码）","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-01T06:27:36.000Z","password":null,"summary":"数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。","_content":"\n\n在对实际问题建模过程中，特别是在建立指标评价体系时，常常会面临不同类型的数据处理及融合。而各个指标之间由于计量单位和数量级的不尽相同，从而使得各指标间不具有可比性。在数据分析之前，通常需要先将数据标准化，利用标准化后的数据进行分析。数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。\n# （1）极值化方法\n可以选择如下的三种方式：\n（A）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113123953.png)即每一个变量除以该变量取值的全距，标准化后的每个变量的取值范围限于[-1,1]。\n(B) ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113147271.png)即每一个变量与变量最小值之差除以该变量取值的全距，标准化后各变量的取值范围限于[0,1]。 \n(C）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113205125.png) ，即每一个变量值除以该变量取值的最大值，标准化后使变量的最大取值为1。\n \n采用极值化方法对变量数据无量纲化是通过变量取值的最大值和最小值将原始数据转换为界于某一特定范围的数据，从而消除量纲和数量级的影响。由于极值化方法对变量无量纲化过程中仅仅对该变量的最大值和最小值这两个极端值有关，而与其他取值无关，这使得该方法在改变各变量权重时过分依赖两个极端取值。\n\n# （2）标准化方法\n利用![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113333257.png)来计算，即每一个变量值与其平均值之差除以该变量的标准差，无量纲化后各变量的平均值为0，标准差为1，从而消除量纲和数量级的影响。虽然该方法在无量纲化过程中利用了所有的数据信息，但是该方法在无量纲化后不仅使得转换后的各变量均值相同，且标准差也相同，即无量纲化的同时还消除了各变量在变异程度上的差异。\n\n# （3）均值化方法\n计算公式为：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113415384.png)，该方法在消除量纲和数量级影响的同时，保留了各变量取值差异程度上的信息。\n（4）标准差化方法\n计算公式为：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113444104.png)。该方法是标准化方法的基础上的一种变形，两者的差别仅在无量纲化后各变量的均值上，标准化方法处理后各变量的均值为0，而标准差化方法处理后各变量均值为原始变量均值与标准差的比值。\n\n综上所述，针对不同类型的数据，可以选择相应的无量纲化方法。如下的示例就是一个典型的评价体系中无量纲化的范例。\n\n# 示例\n\n近年来我国淡水湖水质富营养化的污染日益严重，如何对湖泊水质的富营养化进行综合评价与治理是摆在我们面前的任务，下面两个表格分别为我国5个湖泊的实测数据和湖泊水质评价标准。\n\n表1  全国五个主要湖泊评价参数的实测数据\n![全国五个主要湖泊评价参数的实测数据](https://img-blog.csdnimg.cn/20200501113549269.png)\n表2  湖泊水质评价标准\n![湖泊水质评价标准](https://img-blog.csdnimg.cn/20200501113628784.png)\n## 要求\n（1）试用以上数据，分析总磷，耗氧量，透明度，总氨这4个指标对湖泊水质评价富营养化的作用。\n（2）对这5个湖泊的水质综合评价，确定水质等级。\n\n在进行综合评价之前，首先要对评价的指标进行分析。通常评价指标分成效益型，成本型和固定型指标。效益型指标是指那些数值越大影响力越大的统计指标（也称正向型指标）；成本型指标是指数值越小越好的指标（也称逆向型指标）；而固定型指标是指数值越接近于某个常数越好的指标（也称适度型指标）。如果每个评价指标的属性不一样，则在综合评价时就容易发生偏差，必须先对各评价指标统一属性。\n## 建模步骤\n（ⅰ）建立无量纲化实测数据矩阵和评价标准矩阵，其中实测数据矩阵和等级标准矩阵如下，\n![实测数据矩阵和等级标准矩阵](https://img-blog.csdnimg.cn/20200501113736824.png)\n然后建立无量纲化实测数据矩阵和无量纲化等级标准矩阵，其中\n![a和b](https://img-blog.csdnimg.cn/20200501113756112.png)\n得到\n![A](https://img-blog.csdnimg.cn/20200501114209393.png)\n\n![B](https://img-blog.csdnimg.cn/20200501114201749.png)\n\n（ⅱ）计算各评价指标的权重\n计算矩阵B的各行向量的均值和标准差，\n![均值和标准差](https://img-blog.csdnimg.cn/20200501114144147.png)\n\n然后计算变异系数![变异系数](https://img-blog.csdnimg.cn/20200501114223682.png)\n最后对变异系数归一化得到各指标的权重为\n![指标的权重](https://img-blog.csdnimg.cn/20200501114336124.png)\n（ⅲ）建立各湖泊水质的综合评价模型\n通常可以利用向量之间的距离来衡量两个向量之间的接近程度，在Matlab中，有以下的函数命令来计算向量之间的距离；\ndist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；\nmandist(w,p): 绝对值距离。\n计算中各行向量到中各列向量之间的欧氏距离，\n![各列向量之间的欧氏距离](https://img-blog.csdnimg.cn/20200501114434381.png)\n若![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114446171.png)，则第个湖泊属于第级。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114457329.png)\n这说明杭州西湖，武汉东湖都属于极富营养水质，青海湖属于中营养水质，而巢湖和滇池属于富营养水质。\n\n同时也可以计算中各行向量到中各列向量之间的绝对值距离![在这里插入图片描述](https://img-blog.csdnimg.cn/202005011145144.png)\n若![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114526659.png)，则第个湖泊属于第级。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114535650.png)\n其评价结果与利用欧氏距离得到的评价结果完全一样。\n\n所以，从上面的计算可以看出，尽管欧氏距离和绝对值距离的意义完全不一样，但对湖泊水质的评价等级是一样的，这表明了方法的稳定性。\n\n# 程序\n\n```powershell\nX=[130 10.3 0.35 2.76;\n105 10.7 0.4 2;\n20 1.4 4.5 0.22\n30 6.26 0.25 1.67 ;\n20 10.13 0.5 0.23];\nA1=X(:,1)./130;\nA2=X(:,2)./10.7;\nA3=0.25./X(:,3);\nA4=X(:,4)./2.76;\nA=[A1 A2 A3 A4];\n\nY=[1 4 23 100 660;\n0.09 0.36 1.8 7.1 27.1;\n37 12 2.4 0.55 0.17;\n0.02 0.06 0.31 1.2 4.6];\nB1=Y(1,:)./660;\nB2=Y(2,:)./27.1;\nB3=0.17./Y(3,:);\nB4=Y(4,:)./4.6;\nB=[B1;B2;B3;B4];\n\n% dist是一个欧式距离加权函数，给一个输入使用权值，去获得加权的输入\n% dist(W,P)中：W——S×R的权值矩阵；P——R×Q的矩阵，表示Q个输入（列）向量\n% dist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；\njd=dist(A,B);\njd\n% mandist(w,p): 绝对值距离\nmjd=mandist(A,B);\nmjd\n```\n# 结果\n![运行结果](https://img-blog.csdnimg.cn/20200501161822708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 备注\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！** \n\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！**\n\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！** ","source":"_posts/Dimensionless-processing-of-data.md","raw":"---\ntitle: 数学分析模型（一）：数据的无量纲处理方法及示例（附完整代码）\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-01 14:27:36\npassword:\nsummary: 数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。\ntags: \n- 数学分析模型\n- matlab\ncategories: \n- 数学建模\n---\n\n\n在对实际问题建模过程中，特别是在建立指标评价体系时，常常会面临不同类型的数据处理及融合。而各个指标之间由于计量单位和数量级的不尽相同，从而使得各指标间不具有可比性。在数据分析之前，通常需要先将数据标准化，利用标准化后的数据进行分析。数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。\n# （1）极值化方法\n可以选择如下的三种方式：\n（A）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113123953.png)即每一个变量除以该变量取值的全距，标准化后的每个变量的取值范围限于[-1,1]。\n(B) ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113147271.png)即每一个变量与变量最小值之差除以该变量取值的全距，标准化后各变量的取值范围限于[0,1]。 \n(C）![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113205125.png) ，即每一个变量值除以该变量取值的最大值，标准化后使变量的最大取值为1。\n \n采用极值化方法对变量数据无量纲化是通过变量取值的最大值和最小值将原始数据转换为界于某一特定范围的数据，从而消除量纲和数量级的影响。由于极值化方法对变量无量纲化过程中仅仅对该变量的最大值和最小值这两个极端值有关，而与其他取值无关，这使得该方法在改变各变量权重时过分依赖两个极端取值。\n\n# （2）标准化方法\n利用![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113333257.png)来计算，即每一个变量值与其平均值之差除以该变量的标准差，无量纲化后各变量的平均值为0，标准差为1，从而消除量纲和数量级的影响。虽然该方法在无量纲化过程中利用了所有的数据信息，但是该方法在无量纲化后不仅使得转换后的各变量均值相同，且标准差也相同，即无量纲化的同时还消除了各变量在变异程度上的差异。\n\n# （3）均值化方法\n计算公式为：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113415384.png)，该方法在消除量纲和数量级影响的同时，保留了各变量取值差异程度上的信息。\n（4）标准差化方法\n计算公式为：![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501113444104.png)。该方法是标准化方法的基础上的一种变形，两者的差别仅在无量纲化后各变量的均值上，标准化方法处理后各变量的均值为0，而标准差化方法处理后各变量均值为原始变量均值与标准差的比值。\n\n综上所述，针对不同类型的数据，可以选择相应的无量纲化方法。如下的示例就是一个典型的评价体系中无量纲化的范例。\n\n# 示例\n\n近年来我国淡水湖水质富营养化的污染日益严重，如何对湖泊水质的富营养化进行综合评价与治理是摆在我们面前的任务，下面两个表格分别为我国5个湖泊的实测数据和湖泊水质评价标准。\n\n表1  全国五个主要湖泊评价参数的实测数据\n![全国五个主要湖泊评价参数的实测数据](https://img-blog.csdnimg.cn/20200501113549269.png)\n表2  湖泊水质评价标准\n![湖泊水质评价标准](https://img-blog.csdnimg.cn/20200501113628784.png)\n## 要求\n（1）试用以上数据，分析总磷，耗氧量，透明度，总氨这4个指标对湖泊水质评价富营养化的作用。\n（2）对这5个湖泊的水质综合评价，确定水质等级。\n\n在进行综合评价之前，首先要对评价的指标进行分析。通常评价指标分成效益型，成本型和固定型指标。效益型指标是指那些数值越大影响力越大的统计指标（也称正向型指标）；成本型指标是指数值越小越好的指标（也称逆向型指标）；而固定型指标是指数值越接近于某个常数越好的指标（也称适度型指标）。如果每个评价指标的属性不一样，则在综合评价时就容易发生偏差，必须先对各评价指标统一属性。\n## 建模步骤\n（ⅰ）建立无量纲化实测数据矩阵和评价标准矩阵，其中实测数据矩阵和等级标准矩阵如下，\n![实测数据矩阵和等级标准矩阵](https://img-blog.csdnimg.cn/20200501113736824.png)\n然后建立无量纲化实测数据矩阵和无量纲化等级标准矩阵，其中\n![a和b](https://img-blog.csdnimg.cn/20200501113756112.png)\n得到\n![A](https://img-blog.csdnimg.cn/20200501114209393.png)\n\n![B](https://img-blog.csdnimg.cn/20200501114201749.png)\n\n（ⅱ）计算各评价指标的权重\n计算矩阵B的各行向量的均值和标准差，\n![均值和标准差](https://img-blog.csdnimg.cn/20200501114144147.png)\n\n然后计算变异系数![变异系数](https://img-blog.csdnimg.cn/20200501114223682.png)\n最后对变异系数归一化得到各指标的权重为\n![指标的权重](https://img-blog.csdnimg.cn/20200501114336124.png)\n（ⅲ）建立各湖泊水质的综合评价模型\n通常可以利用向量之间的距离来衡量两个向量之间的接近程度，在Matlab中，有以下的函数命令来计算向量之间的距离；\ndist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；\nmandist(w,p): 绝对值距离。\n计算中各行向量到中各列向量之间的欧氏距离，\n![各列向量之间的欧氏距离](https://img-blog.csdnimg.cn/20200501114434381.png)\n若![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114446171.png)，则第个湖泊属于第级。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114457329.png)\n这说明杭州西湖，武汉东湖都属于极富营养水质，青海湖属于中营养水质，而巢湖和滇池属于富营养水质。\n\n同时也可以计算中各行向量到中各列向量之间的绝对值距离![在这里插入图片描述](https://img-blog.csdnimg.cn/202005011145144.png)\n若![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114526659.png)，则第个湖泊属于第级。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200501114535650.png)\n其评价结果与利用欧氏距离得到的评价结果完全一样。\n\n所以，从上面的计算可以看出，尽管欧氏距离和绝对值距离的意义完全不一样，但对湖泊水质的评价等级是一样的，这表明了方法的稳定性。\n\n# 程序\n\n```powershell\nX=[130 10.3 0.35 2.76;\n105 10.7 0.4 2;\n20 1.4 4.5 0.22\n30 6.26 0.25 1.67 ;\n20 10.13 0.5 0.23];\nA1=X(:,1)./130;\nA2=X(:,2)./10.7;\nA3=0.25./X(:,3);\nA4=X(:,4)./2.76;\nA=[A1 A2 A3 A4];\n\nY=[1 4 23 100 660;\n0.09 0.36 1.8 7.1 27.1;\n37 12 2.4 0.55 0.17;\n0.02 0.06 0.31 1.2 4.6];\nB1=Y(1,:)./660;\nB2=Y(2,:)./27.1;\nB3=0.17./Y(3,:);\nB4=Y(4,:)./4.6;\nB=[B1;B2;B3;B4];\n\n% dist是一个欧式距离加权函数，给一个输入使用权值，去获得加权的输入\n% dist(W,P)中：W——S×R的权值矩阵；P——R×Q的矩阵，表示Q个输入（列）向量\n% dist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；\njd=dist(A,B);\njd\n% mandist(w,p): 绝对值距离\nmjd=mandist(A,B);\nmjd\n```\n# 结果\n![运行结果](https://img-blog.csdnimg.cn/20200501161822708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 备注\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！** \n\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！**\n\n**各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！** ","slug":"Dimensionless-processing-of-data","published":1,"updated":"2020-12-01T07:18:27.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hs90003ksvbjqcfzy6n","content":"<p>在对实际问题建模过程中，特别是在建立指标评价体系时，常常会面临不同类型的数据处理及融合。而各个指标之间由于计量单位和数量级的不尽相同，从而使得各指标间不具有可比性。在数据分析之前，通常需要先将数据标准化，利用标准化后的数据进行分析。数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。</p>\n<h1 id=\"（1）极值化方法\"><a href=\"#（1）极值化方法\" class=\"headerlink\" title=\"（1）极值化方法\"></a>（1）极值化方法</h1><p>可以选择如下的三种方式：<br>（A）<img src=\"https://img-blog.csdnimg.cn/20200501113123953.png\" alt=\"在这里插入图片描述\">即每一个变量除以该变量取值的全距，标准化后的每个变量的取值范围限于[-1,1]。<br>(B) <img src=\"https://img-blog.csdnimg.cn/20200501113147271.png\" alt=\"在这里插入图片描述\">即每一个变量与变量最小值之差除以该变量取值的全距，标准化后各变量的取值范围限于[0,1]。<br>(C）<img src=\"https://img-blog.csdnimg.cn/20200501113205125.png\" alt=\"在这里插入图片描述\"> ，即每一个变量值除以该变量取值的最大值，标准化后使变量的最大取值为1。</p>\n<p>采用极值化方法对变量数据无量纲化是通过变量取值的最大值和最小值将原始数据转换为界于某一特定范围的数据，从而消除量纲和数量级的影响。由于极值化方法对变量无量纲化过程中仅仅对该变量的最大值和最小值这两个极端值有关，而与其他取值无关，这使得该方法在改变各变量权重时过分依赖两个极端取值。</p>\n<h1 id=\"（2）标准化方法\"><a href=\"#（2）标准化方法\" class=\"headerlink\" title=\"（2）标准化方法\"></a>（2）标准化方法</h1><p>利用<img src=\"https://img-blog.csdnimg.cn/20200501113333257.png\" alt=\"在这里插入图片描述\">来计算，即每一个变量值与其平均值之差除以该变量的标准差，无量纲化后各变量的平均值为0，标准差为1，从而消除量纲和数量级的影响。虽然该方法在无量纲化过程中利用了所有的数据信息，但是该方法在无量纲化后不仅使得转换后的各变量均值相同，且标准差也相同，即无量纲化的同时还消除了各变量在变异程度上的差异。</p>\n<h1 id=\"（3）均值化方法\"><a href=\"#（3）均值化方法\" class=\"headerlink\" title=\"（3）均值化方法\"></a>（3）均值化方法</h1><p>计算公式为：<img src=\"https://img-blog.csdnimg.cn/20200501113415384.png\" alt=\"在这里插入图片描述\">，该方法在消除量纲和数量级影响的同时，保留了各变量取值差异程度上的信息。<br>（4）标准差化方法<br>计算公式为：<img src=\"https://img-blog.csdnimg.cn/20200501113444104.png\" alt=\"在这里插入图片描述\">。该方法是标准化方法的基础上的一种变形，两者的差别仅在无量纲化后各变量的均值上，标准化方法处理后各变量的均值为0，而标准差化方法处理后各变量均值为原始变量均值与标准差的比值。</p>\n<p>综上所述，针对不同类型的数据，可以选择相应的无量纲化方法。如下的示例就是一个典型的评价体系中无量纲化的范例。</p>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><p>近年来我国淡水湖水质富营养化的污染日益严重，如何对湖泊水质的富营养化进行综合评价与治理是摆在我们面前的任务，下面两个表格分别为我国5个湖泊的实测数据和湖泊水质评价标准。</p>\n<p>表1  全国五个主要湖泊评价参数的实测数据<br><img src=\"https://img-blog.csdnimg.cn/20200501113549269.png\" alt=\"全国五个主要湖泊评价参数的实测数据\"><br>表2  湖泊水质评价标准<br><img src=\"https://img-blog.csdnimg.cn/20200501113628784.png\" alt=\"湖泊水质评价标准\"></p>\n<h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><p>（1）试用以上数据，分析总磷，耗氧量，透明度，总氨这4个指标对湖泊水质评价富营养化的作用。<br>（2）对这5个湖泊的水质综合评价，确定水质等级。</p>\n<p>在进行综合评价之前，首先要对评价的指标进行分析。通常评价指标分成效益型，成本型和固定型指标。效益型指标是指那些数值越大影响力越大的统计指标（也称正向型指标）；成本型指标是指数值越小越好的指标（也称逆向型指标）；而固定型指标是指数值越接近于某个常数越好的指标（也称适度型指标）。如果每个评价指标的属性不一样，则在综合评价时就容易发生偏差，必须先对各评价指标统一属性。</p>\n<h2 id=\"建模步骤\"><a href=\"#建模步骤\" class=\"headerlink\" title=\"建模步骤\"></a>建模步骤</h2><p>（ⅰ）建立无量纲化实测数据矩阵和评价标准矩阵，其中实测数据矩阵和等级标准矩阵如下，<br><img src=\"https://img-blog.csdnimg.cn/20200501113736824.png\" alt=\"实测数据矩阵和等级标准矩阵\"><br>然后建立无量纲化实测数据矩阵和无量纲化等级标准矩阵，其中<br><img src=\"https://img-blog.csdnimg.cn/20200501113756112.png\" alt=\"a和b\"><br>得到<br><img src=\"https://img-blog.csdnimg.cn/20200501114209393.png\" alt=\"A\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200501114201749.png\" alt=\"B\"></p>\n<p>（ⅱ）计算各评价指标的权重<br>计算矩阵B的各行向量的均值和标准差，<br><img src=\"https://img-blog.csdnimg.cn/20200501114144147.png\" alt=\"均值和标准差\"></p>\n<p>然后计算变异系数<img src=\"https://img-blog.csdnimg.cn/20200501114223682.png\" alt=\"变异系数\"><br>最后对变异系数归一化得到各指标的权重为<br><img src=\"https://img-blog.csdnimg.cn/20200501114336124.png\" alt=\"指标的权重\"><br>（ⅲ）建立各湖泊水质的综合评价模型<br>通常可以利用向量之间的距离来衡量两个向量之间的接近程度，在Matlab中，有以下的函数命令来计算向量之间的距离；<br>dist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；<br>mandist(w,p): 绝对值距离。<br>计算中各行向量到中各列向量之间的欧氏距离，<br><img src=\"https://img-blog.csdnimg.cn/20200501114434381.png\" alt=\"各列向量之间的欧氏距离\"><br>若<img src=\"https://img-blog.csdnimg.cn/20200501114446171.png\" alt=\"在这里插入图片描述\">，则第个湖泊属于第级。<br><img src=\"https://img-blog.csdnimg.cn/20200501114457329.png\" alt=\"在这里插入图片描述\"><br>这说明杭州西湖，武汉东湖都属于极富营养水质，青海湖属于中营养水质，而巢湖和滇池属于富营养水质。</p>\n<p>同时也可以计算中各行向量到中各列向量之间的绝对值距离<img src=\"https://img-blog.csdnimg.cn/202005011145144.png\" alt=\"在这里插入图片描述\"><br>若<img src=\"https://img-blog.csdnimg.cn/20200501114526659.png\" alt=\"在这里插入图片描述\">，则第个湖泊属于第级。<br><img src=\"https://img-blog.csdnimg.cn/20200501114535650.png\" alt=\"在这里插入图片描述\"><br>其评价结果与利用欧氏距离得到的评价结果完全一样。</p>\n<p>所以，从上面的计算可以看出，尽管欧氏距离和绝对值距离的意义完全不一样，但对湖泊水质的评价等级是一样的，这表明了方法的稳定性。</p>\n<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">X=<span class=\"token punctuation\">[</span>130 10<span class=\"token punctuation\">.</span>3 0<span class=\"token punctuation\">.</span>35 2<span class=\"token punctuation\">.</span>76<span class=\"token punctuation\">;</span>\n105 10<span class=\"token punctuation\">.</span>7 0<span class=\"token punctuation\">.</span>4 2<span class=\"token punctuation\">;</span>\n20 1<span class=\"token punctuation\">.</span>4 4<span class=\"token punctuation\">.</span>5 0<span class=\"token punctuation\">.</span>22\n30 6<span class=\"token punctuation\">.</span>26 0<span class=\"token punctuation\">.</span>25 1<span class=\"token punctuation\">.</span>67 <span class=\"token punctuation\">;</span>\n20 10<span class=\"token punctuation\">.</span>13 0<span class=\"token punctuation\">.</span>5 0<span class=\"token punctuation\">.</span>23<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nA1=X<span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">,</span>1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>130<span class=\"token punctuation\">;</span>\nA2=X<span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">,</span>2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>10<span class=\"token punctuation\">.</span>7<span class=\"token punctuation\">;</span>\nA3=0<span class=\"token punctuation\">.</span>25<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>X<span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">,</span>3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nA4=X<span class=\"token punctuation\">(</span>:<span class=\"token punctuation\">,</span>4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>2<span class=\"token punctuation\">.</span>76<span class=\"token punctuation\">;</span>\nA=<span class=\"token namespace\">[A1 A2 A3 A4]</span><span class=\"token punctuation\">;</span>\n\nY=<span class=\"token punctuation\">[</span>1 4 23 100 660<span class=\"token punctuation\">;</span>\n0<span class=\"token punctuation\">.</span>09 0<span class=\"token punctuation\">.</span>36 1<span class=\"token punctuation\">.</span>8 7<span class=\"token punctuation\">.</span>1 27<span class=\"token punctuation\">.</span>1<span class=\"token punctuation\">;</span>\n37 12 2<span class=\"token punctuation\">.</span>4 0<span class=\"token punctuation\">.</span>55 0<span class=\"token punctuation\">.</span>17<span class=\"token punctuation\">;</span>\n0<span class=\"token punctuation\">.</span>02 0<span class=\"token punctuation\">.</span>06 0<span class=\"token punctuation\">.</span>31 1<span class=\"token punctuation\">.</span>2 4<span class=\"token punctuation\">.</span>6<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nB1=Y<span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span>:<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>660<span class=\"token punctuation\">;</span>\nB2=Y<span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">,</span>:<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>27<span class=\"token punctuation\">.</span>1<span class=\"token punctuation\">;</span>\nB3=0<span class=\"token punctuation\">.</span>17<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>Y<span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">,</span>:<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nB4=Y<span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">,</span>:<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>4<span class=\"token punctuation\">.</span>6<span class=\"token punctuation\">;</span>\nB=<span class=\"token namespace\">[B1;B2;B3;B4]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">%</span> dist是一个欧式距离加权函数，给一个输入使用权值，去获得加权的输入\n<span class=\"token operator\">%</span> dist<span class=\"token punctuation\">(</span>W<span class=\"token punctuation\">,</span>P<span class=\"token punctuation\">)</span>中：W——S×R的权值矩阵；P——R×Q的矩阵，表示Q个输入（列）向量\n<span class=\"token operator\">%</span> dist<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>: 计算中的每个行向量和中每个列向量之间的欧式距离；\njd=dist<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\njd\n<span class=\"token operator\">%</span> mandist<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span>: 绝对值距离\nmjd=mandist<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmjd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://img-blog.csdnimg.cn/20200501161822708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"运行结果\"></p>\n<h1 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h1><p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong> </p>\n<p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong></p>\n<p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong> </p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<p>在对实际问题建模过程中，特别是在建立指标评价体系时，常常会面临不同类型的数据处理及融合。而各个指标之间由于计量单位和数量级的不尽相同，从而使得各指标间不具有可比性。在数据分析之前，通常需要先将数据标准化，利用标准化后的数据进行分析。数据标准化处理主要包括同趋化处理和无量纲化处理两个方面。数据的同趋化处理主要解决不同性质的数据问题，对不同性质指标直接累加不能正确反应不同作用力的综合结果，须先考虑改变逆指标数据性质，使所有指标对评价体系的作用力同趋化。数据无量纲化主要解决数据的不可比性，在此处主要介绍几种数据的无量纲化的处理方式。</p>\n<h1 id=\"（1）极值化方法\"><a href=\"#（1）极值化方法\" class=\"headerlink\" title=\"（1）极值化方法\"></a>（1）极值化方法</h1><p>可以选择如下的三种方式：<br>（A）<img src=\"https://img-blog.csdnimg.cn/20200501113123953.png\" alt=\"在这里插入图片描述\">即每一个变量除以该变量取值的全距，标准化后的每个变量的取值范围限于[-1,1]。<br>(B) <img src=\"https://img-blog.csdnimg.cn/20200501113147271.png\" alt=\"在这里插入图片描述\">即每一个变量与变量最小值之差除以该变量取值的全距，标准化后各变量的取值范围限于[0,1]。<br>(C）<img src=\"https://img-blog.csdnimg.cn/20200501113205125.png\" alt=\"在这里插入图片描述\"> ，即每一个变量值除以该变量取值的最大值，标准化后使变量的最大取值为1。</p>\n<p>采用极值化方法对变量数据无量纲化是通过变量取值的最大值和最小值将原始数据转换为界于某一特定范围的数据，从而消除量纲和数量级的影响。由于极值化方法对变量无量纲化过程中仅仅对该变量的最大值和最小值这两个极端值有关，而与其他取值无关，这使得该方法在改变各变量权重时过分依赖两个极端取值。</p>\n<h1 id=\"（2）标准化方法\"><a href=\"#（2）标准化方法\" class=\"headerlink\" title=\"（2）标准化方法\"></a>（2）标准化方法</h1><p>利用<img src=\"https://img-blog.csdnimg.cn/20200501113333257.png\" alt=\"在这里插入图片描述\">来计算，即每一个变量值与其平均值之差除以该变量的标准差，无量纲化后各变量的平均值为0，标准差为1，从而消除量纲和数量级的影响。虽然该方法在无量纲化过程中利用了所有的数据信息，但是该方法在无量纲化后不仅使得转换后的各变量均值相同，且标准差也相同，即无量纲化的同时还消除了各变量在变异程度上的差异。</p>\n<h1 id=\"（3）均值化方法\"><a href=\"#（3）均值化方法\" class=\"headerlink\" title=\"（3）均值化方法\"></a>（3）均值化方法</h1><p>计算公式为：<img src=\"https://img-blog.csdnimg.cn/20200501113415384.png\" alt=\"在这里插入图片描述\">，该方法在消除量纲和数量级影响的同时，保留了各变量取值差异程度上的信息。<br>（4）标准差化方法<br>计算公式为：<img src=\"https://img-blog.csdnimg.cn/20200501113444104.png\" alt=\"在这里插入图片描述\">。该方法是标准化方法的基础上的一种变形，两者的差别仅在无量纲化后各变量的均值上，标准化方法处理后各变量的均值为0，而标准差化方法处理后各变量均值为原始变量均值与标准差的比值。</p>\n<p>综上所述，针对不同类型的数据，可以选择相应的无量纲化方法。如下的示例就是一个典型的评价体系中无量纲化的范例。</p>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><p>近年来我国淡水湖水质富营养化的污染日益严重，如何对湖泊水质的富营养化进行综合评价与治理是摆在我们面前的任务，下面两个表格分别为我国5个湖泊的实测数据和湖泊水质评价标准。</p>\n<p>表1  全国五个主要湖泊评价参数的实测数据<br><img src=\"https://img-blog.csdnimg.cn/20200501113549269.png\" alt=\"全国五个主要湖泊评价参数的实测数据\"><br>表2  湖泊水质评价标准<br><img src=\"https://img-blog.csdnimg.cn/20200501113628784.png\" alt=\"湖泊水质评价标准\"></p>\n<h2 id=\"要求\"><a href=\"#要求\" class=\"headerlink\" title=\"要求\"></a>要求</h2><p>（1）试用以上数据，分析总磷，耗氧量，透明度，总氨这4个指标对湖泊水质评价富营养化的作用。<br>（2）对这5个湖泊的水质综合评价，确定水质等级。</p>\n<p>在进行综合评价之前，首先要对评价的指标进行分析。通常评价指标分成效益型，成本型和固定型指标。效益型指标是指那些数值越大影响力越大的统计指标（也称正向型指标）；成本型指标是指数值越小越好的指标（也称逆向型指标）；而固定型指标是指数值越接近于某个常数越好的指标（也称适度型指标）。如果每个评价指标的属性不一样，则在综合评价时就容易发生偏差，必须先对各评价指标统一属性。</p>\n<h2 id=\"建模步骤\"><a href=\"#建模步骤\" class=\"headerlink\" title=\"建模步骤\"></a>建模步骤</h2><p>（ⅰ）建立无量纲化实测数据矩阵和评价标准矩阵，其中实测数据矩阵和等级标准矩阵如下，<br><img src=\"https://img-blog.csdnimg.cn/20200501113736824.png\" alt=\"实测数据矩阵和等级标准矩阵\"><br>然后建立无量纲化实测数据矩阵和无量纲化等级标准矩阵，其中<br><img src=\"https://img-blog.csdnimg.cn/20200501113756112.png\" alt=\"a和b\"><br>得到<br><img src=\"https://img-blog.csdnimg.cn/20200501114209393.png\" alt=\"A\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200501114201749.png\" alt=\"B\"></p>\n<p>（ⅱ）计算各评价指标的权重<br>计算矩阵B的各行向量的均值和标准差，<br><img src=\"https://img-blog.csdnimg.cn/20200501114144147.png\" alt=\"均值和标准差\"></p>\n<p>然后计算变异系数<img src=\"https://img-blog.csdnimg.cn/20200501114223682.png\" alt=\"变异系数\"><br>最后对变异系数归一化得到各指标的权重为<br><img src=\"https://img-blog.csdnimg.cn/20200501114336124.png\" alt=\"指标的权重\"><br>（ⅲ）建立各湖泊水质的综合评价模型<br>通常可以利用向量之间的距离来衡量两个向量之间的接近程度，在Matlab中，有以下的函数命令来计算向量之间的距离；<br>dist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；<br>mandist(w,p): 绝对值距离。<br>计算中各行向量到中各列向量之间的欧氏距离，<br><img src=\"https://img-blog.csdnimg.cn/20200501114434381.png\" alt=\"各列向量之间的欧氏距离\"><br>若<img src=\"https://img-blog.csdnimg.cn/20200501114446171.png\" alt=\"在这里插入图片描述\">，则第个湖泊属于第级。<br><img src=\"https://img-blog.csdnimg.cn/20200501114457329.png\" alt=\"在这里插入图片描述\"><br>这说明杭州西湖，武汉东湖都属于极富营养水质，青海湖属于中营养水质，而巢湖和滇池属于富营养水质。</p>\n<p>同时也可以计算中各行向量到中各列向量之间的绝对值距离<img src=\"https://img-blog.csdnimg.cn/202005011145144.png\" alt=\"在这里插入图片描述\"><br>若<img src=\"https://img-blog.csdnimg.cn/20200501114526659.png\" alt=\"在这里插入图片描述\">，则第个湖泊属于第级。<br><img src=\"https://img-blog.csdnimg.cn/20200501114535650.png\" alt=\"在这里插入图片描述\"><br>其评价结果与利用欧氏距离得到的评价结果完全一样。</p>\n<p>所以，从上面的计算可以看出，尽管欧氏距离和绝对值距离的意义完全不一样，但对湖泊水质的评价等级是一样的，这表明了方法的稳定性。</p>\n<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><pre><code class=\"powershell\">X=[130 10.3 0.35 2.76;\n105 10.7 0.4 2;\n20 1.4 4.5 0.22\n30 6.26 0.25 1.67 ;\n20 10.13 0.5 0.23];\nA1=X(:,1)./130;\nA2=X(:,2)./10.7;\nA3=0.25./X(:,3);\nA4=X(:,4)./2.76;\nA=[A1 A2 A3 A4];\n\nY=[1 4 23 100 660;\n0.09 0.36 1.8 7.1 27.1;\n37 12 2.4 0.55 0.17;\n0.02 0.06 0.31 1.2 4.6];\nB1=Y(1,:)./660;\nB2=Y(2,:)./27.1;\nB3=0.17./Y(3,:);\nB4=Y(4,:)./4.6;\nB=[B1;B2;B3;B4];\n\n% dist是一个欧式距离加权函数，给一个输入使用权值，去获得加权的输入\n% dist(W,P)中：W——S×R的权值矩阵；P——R×Q的矩阵，表示Q个输入（列）向量\n% dist(w,p): 计算中的每个行向量和中每个列向量之间的欧式距离；\njd=dist(A,B);\njd\n% mandist(w,p): 绝对值距离\nmjd=mandist(A,B);\nmjd</code></pre>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://img-blog.csdnimg.cn/20200501161822708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"运行结果\"></p>\n<h1 id=\"备注\"><a href=\"#备注\" class=\"headerlink\" title=\"备注\"></a>备注</h1><p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong> </p>\n<p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong></p>\n<p><strong>各位老铁养成习惯，看完点个赞呗，随便也来个关注！！！</strong> </p>\n"},{"title":"数学评价模型（二）：模糊综合评判","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-15T07:32:47.000Z","password":null,"summary":"综合评判就是对受多个因素制约的事物或对象作出一个总的评价，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。","_content":"\n**综合评判就是对受多个因素制约的事物或对象作出一个总的评价**，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。\n\n**模糊综合评判的数学模型可分为一级模型和多级模型。**下面就常用基本的模型进行介绍。\n\n# 1. 一级模糊综合评判\n\n综合评判有三要素:\n(ⅰ) 因素集U={u1,u2,u3,...,un}——被评判对象的各因素组成的集合；\n(ⅱ) 评判集V={v1,v2,v3,...,vn}——评语组成的集合；\n(ⅲ) 建立单因素判断，即对单个因素ui(i=1,2,...,n)的评判，得到V上的模糊集(ri1,ri2,ri3,...,rim)，所以它是从U到V的一个模糊映射：\n\n![](https://i.loli.net/2020/12/15/VfNUsl3QATeip5B.png)\n\n由模糊映射f可以确定一个模糊关系\n\n![](https://i.loli.net/2020/12/15/9kOoZisU7gPuzvW.png)\n\n称为评判矩阵，它是由所有对单因素评判的模糊集组成的。\n\n由于各因素地位未必相等，所以需对各因素加权，用U上的模糊集A=(a1,a2,a3,...,an)表示各因素的权重分配，将它与评判矩阵R进行合成，即得到模糊综合评判集，采用最大隶属度原则对各因素进行综合评判。下面四种综合评判模型则是根据合成运算的不同而得出的。\n\n\n## 模型Ⅰ:  M(∨,∧)\n\n![](https://img-blog.csdnimg.cn/20200410123138352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n这里bj是(ri1,ri2,ri3,...,rim)的函数，也就是评判函数。这种方法通过取小与取大两种运算，因此，称该模型为 M(∨,∧)模型。此模型的特点是一种“**主因素突出法**”的综合评判。**由于权重系数的作用体现较弱，有时会导致评价结果的不理想，这时需要将进行修正并进行归一化处理。**\n\n\n## 模型Ⅱ: M(·,∨)\n\n该模型采用两种运算：\n\n- 一种是普通乘法运算，用·表示；\n- 另一种是取大运算，用∨表示。\n\n利用此模型计算为　\n\n![](https://img-blog.csdnimg.cn/20200410123639237.png)\n\n\n其中乘法运算不会丢失有用的信息，而取大运算会丢失有用信息。**该模型优点是较好地反映了单因素评价结果的重要程度。**\n\n## 模型Ⅲ: M(+,∧)\n该模型采用两种运算：\n\n- 一种是普通加法运算，用+表示；\n- 另一种是取小运算，用∧表示。\n\n利用此模型计算为　\n\n![](https://img-blog.csdnimg.cn/20200410123834743.png)\n\n此模型的特点是对每个评语vj都同时考虑各种因素的综合评判。\n\n## 模型Ⅳ: M(+,·)\n该模型采用两种运算：\n\n- 一种是普通加法运算，用“+”表示；\n- 另一种是乘法运算，用“·”表示。\n\n利用此模型计算为\n\n![](https://img-blog.csdnimg.cn/20200410133216825.png)\n\n此模型的特点是：在确定评语vj对模糊综合评判集的隶属度bj时，考虑了所有因素ui(i=1,2,...,n)的影响；由于同时考虑到所有因素的影响，所以各ai的大小具有刻画各因素重要程度的权系数意义。\n\n在上述各种评价模型中，因为运算的定义不同，所以对同一评价对象求出的评价结果也会不一样。\n\n##【典例】\n\n> 服装评判问题\n\n设U={花色式样，耐穿程度，价格费用}，V={很欢迎，比较欢迎，不太欢迎，不欢迎}，对某一种服装，请若干专门人员进行单因素评价。\n\n\n单考虑花色式样，若有70%的人很欢迎，有20%的人比较欢迎，10%的人不太欢迎便可得出\n\n花色式样→（0.7，0.2，0.1，0）\n类似地，可以得到耐穿程度和价格费用的数值，如下：\n耐穿程度→（0.2，0.3，0.4，0.1）\n价格费用→（0.3，0.4，0.2，0.1）\n将上述的所有单因素评判组成评判矩阵，可以得到模糊综合评判矩阵，如下：\n\n![](https://img-blog.csdnimg.cn/20200410150531628.png)\n\n不同的顾客，由于职业、性别、年龄、爱好、经济状况等等的不同，对服装的三要素所给予的权数也不同。假若设某类顾客所给的权重为：A=（0.5,0.3,0.2），采用模型Ⅳ可得此类顾客对这种服装的综合评判为：\n\n![](https://img-blog.csdnimg.cn/20200410150615883.png)\n\n它表示的评价是：“很欢迎”的程度为47%；“比较欢迎” 的程度为27%；“不太欢迎” 的程度为21%；“不欢迎” 的程度为5%。按最大隶属原则，结论是“很欢迎”。\n这个结果是归一化的。如果采用模型“”，“”Ⅰ的,运算，得出的综合评判结果不一定是归一化的，因此需将结果归一化处理。\n\nMatlab代码实现\n```bash\n%% 模糊评判矩阵\nR = [0.7 0.2 0.1 0 \n     0.2 0.3 0.4 0.1\n     0.3 0.4 0.2 0.1]\n%% 各因素的权重\nA = [0.5 0.3 0.2]\n%% 隶属度计算\nB = A*R\n```\n\n# 2. 多级模糊综合评判\n\n如果评判对象的有关因素很多，很难合理地定出权数分配，即难以真实地反应各因素在整体的地位，这是需采取多级评判。\n\n\n**多因素多层次系统的综合评判方法**是：**首先按最低层次的各因素进行综合评价，然后再按上一层次的各因素进行综合评判；依次向更高一层评判，一直评定到最高层次得出总的评价结果。**\n\n\n下面给出多级模糊综合评判的数学模型的一般描述。\n假设因素集为U={U1,U2,U3,...,Un}，对其中的Ui(i=1,2,...,n)细划分为Ui={Ui1,Ui2,...,Uim}\n\n对其中的Uij(i=1,2,...,n;j=1,2,...,m)再进一步细划分为Uij={Uij1,Uij2,...,Uijp}\n\n如此划分下去，就反映了影响因素的层次性。而评判时，应从最后一次划分最底层的因素开始，一级一级往上评判，直到评定到最高层。\n下图给出三级模糊综合评判模型示意，更多级的评判过程依次类推。\n\n![](https://img-blog.csdnimg.cn/20200410154901525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n##【典例】\n\n> 产品质量的综合评判\n\n\n对同一个产品质量问题先使用单层模糊综合评判，再使用双层模糊综合评判。\n### （1）单层模糊综合评判\n因素集：U={u1,u2,u3,u4,u5,u6,u7}\n评判集：V={v1,v2,v3,v4} 式中v1表一级, v2二级, v3等外, v4表废品。\n权重向量：A=(0.1,0.12,0.07,0.07,0.16,0.1,0.1,0.1,0.18)\n评判矩阵：由专家、客户、质量检查员组成的评判小组，先打分并做简单处理得到如下的综合评判矩阵：\n\n![](https://img-blog.csdnimg.cn/2020041015541676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n利用模型Ⅰ计算综合评判\n\n![](https://img-blog.csdnimg.cn/20200410155431407.png)\n\n结果显示，无论是一级、二级、等外、废品的隶属度都是0.18，对这个具体问题而言模糊变换无法给出答案。可以采用其他方法，例如加权平均，也可以采用双层模糊综合评判。\n\n\n### （2）双层模糊综合评判\n因素集：\n\n![](https://img-blog.csdnimg.cn/20200410155502472.png)\n\n评判集：V={v1,v2,v3,v4}式中v1表一级,  v2二级, v3等外, v4表废品。\n\n第一层权重向量：\n\n![](https://img-blog.csdnimg.cn/20200410155536383.png)\n\n第一层评价矩阵：\n\n![](https://img-blog.csdnimg.cn/20200410155548784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n第一层评判，使用模型Ⅰ，有\n\n![](https://img-blog.csdnimg.cn/20200410155559355.png)\n\n第二层评判矩阵：将一层评判结果组合起来形成二级评判矩阵。\n\n![](https://img-blog.csdnimg.cn/20200410155610939.png)\n\n第二层权重分配：因素集U={U1,U2,U3}的权重分配为A=(0.2,0.35,0.45)。\n第二层评判，仍然使用模型Ⅰ，有\n\n![](https://img-blog.csdnimg.cn/2020041015572129.png)\n\n按最大隶属度原则，此产品属一级品。\n\nMatlab代码实现\n模糊综合评价的函数：fuzzy_zhpp.m\n```bash\nfunction[B]=fuzzy_zhpp(model,A,R) %模糊综合评判\nB=[];\n[m,s1]=size(A);\n[s2,n]=size(R);\nif(s1~=s2)\n     disp('A的列不等于R的行');\nelse\n    if(model==1)                 %主因素决定型\n        for(i=1:m)\n           for(j=1:n)\n               B(i,j)=0;\n               for(k=1:s1)\n                   x=0;\n                   if(A(i,k)<R(k,j))\n                      x=A(i,k);\n                   else\n                      x=R(k,j);\n                   end\n                  if(B(i,j)<x)\n                     B(i,j)=x;\n                  end\n               end\n           end\n       end\n   elseif(model==2)               %主因素突出型\n       for(i=1:m)\n          for(j=1:n)\n              B(i,j)=0;\n              for(k=1:s1)\n                  x=A(i,k)*R(k,j);\n                  if(B(i,j)<x)\n                     B(i,j)=x;\n                  end\n              end\n          end\n       end\n   elseif(model==3)              %加权平均型\n          for(i=1:m)\n             for(j=1:n)\n                B(i,j)=0;\n                for(k=1:s1)\n                    B(i,j)=B(i,j)+A(i,k)*R(k,j);\n                end\n              end\n           end\n    elseif(model==4)             %取小上界和型\n           for(i=1:m)\n               for(j=1:n)\n                   B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                       B(i,j)=min(B(i,j),1);\n               end\n            end\n      elseif(model==5)            %均衡平均型\n            C=[];\n            C=sum(R);\n            for(j=1:n)\n               for(i=1:s2)\n                   R(i,j)=R(i,j)/C(j);\n               end\n            end\n            for(i=1:m)\n                for(j=1:n)\n                    B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                end\n            end\n        else\n            disp('模型赋值不当');\n        end\nend\nend\n```\n\n主函数：main.m\n\n```bash\nfunction main\nA1=[0.30 0.42 0.28];\nA2=[0.20 0.50 0.30];\nA3=[0.30 0.30 0.40];\n\nR=[0.30 0.32 0.26 0.27;\n    0.26 0.36 0.20 0.20;\n    0.40 0.28 0.30 0.20];\nfuzzy_zhpp(1,A1,R)\nfuzzy_zhpp(1,A2,R)\nfuzzy_zhpp(1,A3,R)\nend\n```\n\n有帮助的话各位小伙伴们来个三连击，鼓励鼓励一下我这只小白！！！\n\n# 资源传送门\n\n- 关注【**做一个柔情的程序猿**】公众号\n- 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n# 「❤️ 感谢大家」\n\n- 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n- 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程","source":"_posts/Fuzzy-comprehensive-evaluation.md","raw":"---\ntitle: 数学评价模型（二）：模糊综合评判\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-15 15:32:47\npassword:\nsummary: 综合评判就是对受多个因素制约的事物或对象作出一个总的评价，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。\ntags: \n- matlab\n- 数学评价模型\ncategories: \n- 数学建模\n---\n\n**综合评判就是对受多个因素制约的事物或对象作出一个总的评价**，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。\n\n**模糊综合评判的数学模型可分为一级模型和多级模型。**下面就常用基本的模型进行介绍。\n\n# 1. 一级模糊综合评判\n\n综合评判有三要素:\n(ⅰ) 因素集U={u1,u2,u3,...,un}——被评判对象的各因素组成的集合；\n(ⅱ) 评判集V={v1,v2,v3,...,vn}——评语组成的集合；\n(ⅲ) 建立单因素判断，即对单个因素ui(i=1,2,...,n)的评判，得到V上的模糊集(ri1,ri2,ri3,...,rim)，所以它是从U到V的一个模糊映射：\n\n![](https://i.loli.net/2020/12/15/VfNUsl3QATeip5B.png)\n\n由模糊映射f可以确定一个模糊关系\n\n![](https://i.loli.net/2020/12/15/9kOoZisU7gPuzvW.png)\n\n称为评判矩阵，它是由所有对单因素评判的模糊集组成的。\n\n由于各因素地位未必相等，所以需对各因素加权，用U上的模糊集A=(a1,a2,a3,...,an)表示各因素的权重分配，将它与评判矩阵R进行合成，即得到模糊综合评判集，采用最大隶属度原则对各因素进行综合评判。下面四种综合评判模型则是根据合成运算的不同而得出的。\n\n\n## 模型Ⅰ:  M(∨,∧)\n\n![](https://img-blog.csdnimg.cn/20200410123138352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n这里bj是(ri1,ri2,ri3,...,rim)的函数，也就是评判函数。这种方法通过取小与取大两种运算，因此，称该模型为 M(∨,∧)模型。此模型的特点是一种“**主因素突出法**”的综合评判。**由于权重系数的作用体现较弱，有时会导致评价结果的不理想，这时需要将进行修正并进行归一化处理。**\n\n\n## 模型Ⅱ: M(·,∨)\n\n该模型采用两种运算：\n\n- 一种是普通乘法运算，用·表示；\n- 另一种是取大运算，用∨表示。\n\n利用此模型计算为　\n\n![](https://img-blog.csdnimg.cn/20200410123639237.png)\n\n\n其中乘法运算不会丢失有用的信息，而取大运算会丢失有用信息。**该模型优点是较好地反映了单因素评价结果的重要程度。**\n\n## 模型Ⅲ: M(+,∧)\n该模型采用两种运算：\n\n- 一种是普通加法运算，用+表示；\n- 另一种是取小运算，用∧表示。\n\n利用此模型计算为　\n\n![](https://img-blog.csdnimg.cn/20200410123834743.png)\n\n此模型的特点是对每个评语vj都同时考虑各种因素的综合评判。\n\n## 模型Ⅳ: M(+,·)\n该模型采用两种运算：\n\n- 一种是普通加法运算，用“+”表示；\n- 另一种是乘法运算，用“·”表示。\n\n利用此模型计算为\n\n![](https://img-blog.csdnimg.cn/20200410133216825.png)\n\n此模型的特点是：在确定评语vj对模糊综合评判集的隶属度bj时，考虑了所有因素ui(i=1,2,...,n)的影响；由于同时考虑到所有因素的影响，所以各ai的大小具有刻画各因素重要程度的权系数意义。\n\n在上述各种评价模型中，因为运算的定义不同，所以对同一评价对象求出的评价结果也会不一样。\n\n##【典例】\n\n> 服装评判问题\n\n设U={花色式样，耐穿程度，价格费用}，V={很欢迎，比较欢迎，不太欢迎，不欢迎}，对某一种服装，请若干专门人员进行单因素评价。\n\n\n单考虑花色式样，若有70%的人很欢迎，有20%的人比较欢迎，10%的人不太欢迎便可得出\n\n花色式样→（0.7，0.2，0.1，0）\n类似地，可以得到耐穿程度和价格费用的数值，如下：\n耐穿程度→（0.2，0.3，0.4，0.1）\n价格费用→（0.3，0.4，0.2，0.1）\n将上述的所有单因素评判组成评判矩阵，可以得到模糊综合评判矩阵，如下：\n\n![](https://img-blog.csdnimg.cn/20200410150531628.png)\n\n不同的顾客，由于职业、性别、年龄、爱好、经济状况等等的不同，对服装的三要素所给予的权数也不同。假若设某类顾客所给的权重为：A=（0.5,0.3,0.2），采用模型Ⅳ可得此类顾客对这种服装的综合评判为：\n\n![](https://img-blog.csdnimg.cn/20200410150615883.png)\n\n它表示的评价是：“很欢迎”的程度为47%；“比较欢迎” 的程度为27%；“不太欢迎” 的程度为21%；“不欢迎” 的程度为5%。按最大隶属原则，结论是“很欢迎”。\n这个结果是归一化的。如果采用模型“”，“”Ⅰ的,运算，得出的综合评判结果不一定是归一化的，因此需将结果归一化处理。\n\nMatlab代码实现\n```bash\n%% 模糊评判矩阵\nR = [0.7 0.2 0.1 0 \n     0.2 0.3 0.4 0.1\n     0.3 0.4 0.2 0.1]\n%% 各因素的权重\nA = [0.5 0.3 0.2]\n%% 隶属度计算\nB = A*R\n```\n\n# 2. 多级模糊综合评判\n\n如果评判对象的有关因素很多，很难合理地定出权数分配，即难以真实地反应各因素在整体的地位，这是需采取多级评判。\n\n\n**多因素多层次系统的综合评判方法**是：**首先按最低层次的各因素进行综合评价，然后再按上一层次的各因素进行综合评判；依次向更高一层评判，一直评定到最高层次得出总的评价结果。**\n\n\n下面给出多级模糊综合评判的数学模型的一般描述。\n假设因素集为U={U1,U2,U3,...,Un}，对其中的Ui(i=1,2,...,n)细划分为Ui={Ui1,Ui2,...,Uim}\n\n对其中的Uij(i=1,2,...,n;j=1,2,...,m)再进一步细划分为Uij={Uij1,Uij2,...,Uijp}\n\n如此划分下去，就反映了影响因素的层次性。而评判时，应从最后一次划分最底层的因素开始，一级一级往上评判，直到评定到最高层。\n下图给出三级模糊综合评判模型示意，更多级的评判过程依次类推。\n\n![](https://img-blog.csdnimg.cn/20200410154901525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n##【典例】\n\n> 产品质量的综合评判\n\n\n对同一个产品质量问题先使用单层模糊综合评判，再使用双层模糊综合评判。\n### （1）单层模糊综合评判\n因素集：U={u1,u2,u3,u4,u5,u6,u7}\n评判集：V={v1,v2,v3,v4} 式中v1表一级, v2二级, v3等外, v4表废品。\n权重向量：A=(0.1,0.12,0.07,0.07,0.16,0.1,0.1,0.1,0.18)\n评判矩阵：由专家、客户、质量检查员组成的评判小组，先打分并做简单处理得到如下的综合评判矩阵：\n\n![](https://img-blog.csdnimg.cn/2020041015541676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n利用模型Ⅰ计算综合评判\n\n![](https://img-blog.csdnimg.cn/20200410155431407.png)\n\n结果显示，无论是一级、二级、等外、废品的隶属度都是0.18，对这个具体问题而言模糊变换无法给出答案。可以采用其他方法，例如加权平均，也可以采用双层模糊综合评判。\n\n\n### （2）双层模糊综合评判\n因素集：\n\n![](https://img-blog.csdnimg.cn/20200410155502472.png)\n\n评判集：V={v1,v2,v3,v4}式中v1表一级,  v2二级, v3等外, v4表废品。\n\n第一层权重向量：\n\n![](https://img-blog.csdnimg.cn/20200410155536383.png)\n\n第一层评价矩阵：\n\n![](https://img-blog.csdnimg.cn/20200410155548784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n第一层评判，使用模型Ⅰ，有\n\n![](https://img-blog.csdnimg.cn/20200410155559355.png)\n\n第二层评判矩阵：将一层评判结果组合起来形成二级评判矩阵。\n\n![](https://img-blog.csdnimg.cn/20200410155610939.png)\n\n第二层权重分配：因素集U={U1,U2,U3}的权重分配为A=(0.2,0.35,0.45)。\n第二层评判，仍然使用模型Ⅰ，有\n\n![](https://img-blog.csdnimg.cn/2020041015572129.png)\n\n按最大隶属度原则，此产品属一级品。\n\nMatlab代码实现\n模糊综合评价的函数：fuzzy_zhpp.m\n```bash\nfunction[B]=fuzzy_zhpp(model,A,R) %模糊综合评判\nB=[];\n[m,s1]=size(A);\n[s2,n]=size(R);\nif(s1~=s2)\n     disp('A的列不等于R的行');\nelse\n    if(model==1)                 %主因素决定型\n        for(i=1:m)\n           for(j=1:n)\n               B(i,j)=0;\n               for(k=1:s1)\n                   x=0;\n                   if(A(i,k)<R(k,j))\n                      x=A(i,k);\n                   else\n                      x=R(k,j);\n                   end\n                  if(B(i,j)<x)\n                     B(i,j)=x;\n                  end\n               end\n           end\n       end\n   elseif(model==2)               %主因素突出型\n       for(i=1:m)\n          for(j=1:n)\n              B(i,j)=0;\n              for(k=1:s1)\n                  x=A(i,k)*R(k,j);\n                  if(B(i,j)<x)\n                     B(i,j)=x;\n                  end\n              end\n          end\n       end\n   elseif(model==3)              %加权平均型\n          for(i=1:m)\n             for(j=1:n)\n                B(i,j)=0;\n                for(k=1:s1)\n                    B(i,j)=B(i,j)+A(i,k)*R(k,j);\n                end\n              end\n           end\n    elseif(model==4)             %取小上界和型\n           for(i=1:m)\n               for(j=1:n)\n                   B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                       B(i,j)=min(B(i,j),1);\n               end\n            end\n      elseif(model==5)            %均衡平均型\n            C=[];\n            C=sum(R);\n            for(j=1:n)\n               for(i=1:s2)\n                   R(i,j)=R(i,j)/C(j);\n               end\n            end\n            for(i=1:m)\n                for(j=1:n)\n                    B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                end\n            end\n        else\n            disp('模型赋值不当');\n        end\nend\nend\n```\n\n主函数：main.m\n\n```bash\nfunction main\nA1=[0.30 0.42 0.28];\nA2=[0.20 0.50 0.30];\nA3=[0.30 0.30 0.40];\n\nR=[0.30 0.32 0.26 0.27;\n    0.26 0.36 0.20 0.20;\n    0.40 0.28 0.30 0.20];\nfuzzy_zhpp(1,A1,R)\nfuzzy_zhpp(1,A2,R)\nfuzzy_zhpp(1,A3,R)\nend\n```\n\n有帮助的话各位小伙伴们来个三连击，鼓励鼓励一下我这只小白！！！\n\n# 资源传送门\n\n- 关注【**做一个柔情的程序猿**】公众号\n- 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n# 「❤️ 感谢大家」\n\n- 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n- 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程","slug":"Fuzzy-comprehensive-evaluation","published":1,"updated":"2020-12-15T07:57:49.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hse0007ksvbn7l35xqu","content":"<p><strong>综合评判就是对受多个因素制约的事物或对象作出一个总的评价</strong>，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。</p>\n<p><strong>模糊综合评判的数学模型可分为一级模型和多级模型。</strong>下面就常用基本的模型进行介绍。</p>\n<h1 id=\"1-一级模糊综合评判\"><a href=\"#1-一级模糊综合评判\" class=\"headerlink\" title=\"1. 一级模糊综合评判\"></a>1. 一级模糊综合评判</h1><p>综合评判有三要素:<br>(ⅰ) 因素集U={u1,u2,u3,…,un}——被评判对象的各因素组成的集合；<br>(ⅱ) 评判集V={v1,v2,v3,…,vn}——评语组成的集合；<br>(ⅲ) 建立单因素判断，即对单个因素ui(i=1,2,…,n)的评判，得到V上的模糊集(ri1,ri2,ri3,…,rim)，所以它是从U到V的一个模糊映射：</p>\n<p><img src=\"https://i.loli.net/2020/12/15/VfNUsl3QATeip5B.png\" alt></p>\n<p>由模糊映射f可以确定一个模糊关系</p>\n<p><img src=\"https://i.loli.net/2020/12/15/9kOoZisU7gPuzvW.png\" alt></p>\n<p>称为评判矩阵，它是由所有对单因素评判的模糊集组成的。</p>\n<p>由于各因素地位未必相等，所以需对各因素加权，用U上的模糊集A=(a1,a2,a3,…,an)表示各因素的权重分配，将它与评判矩阵R进行合成，即得到模糊综合评判集，采用最大隶属度原则对各因素进行综合评判。下面四种综合评判模型则是根据合成运算的不同而得出的。</p>\n<h2 id=\"模型Ⅰ-M-∨-∧\"><a href=\"#模型Ⅰ-M-∨-∧\" class=\"headerlink\" title=\"模型Ⅰ:  M(∨,∧)\"></a>模型Ⅰ:  M(∨,∧)</h2><p><img src=\"https://img-blog.csdnimg.cn/20200410123138352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>这里bj是(ri1,ri2,ri3,…,rim)的函数，也就是评判函数。这种方法通过取小与取大两种运算，因此，称该模型为 M(∨,∧)模型。此模型的特点是一种“<strong>主因素突出法</strong>”的综合评判。<strong>由于权重系数的作用体现较弱，有时会导致评价结果的不理想，这时需要将进行修正并进行归一化处理。</strong></p>\n<h2 id=\"模型Ⅱ-M-·-∨\"><a href=\"#模型Ⅱ-M-·-∨\" class=\"headerlink\" title=\"模型Ⅱ: M(·,∨)\"></a>模型Ⅱ: M(·,∨)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通乘法运算，用·表示；</li>\n<li>另一种是取大运算，用∨表示。</li>\n</ul>\n<p>利用此模型计算为　</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410123639237.png\" alt></p>\n<p>其中乘法运算不会丢失有用的信息，而取大运算会丢失有用信息。<strong>该模型优点是较好地反映了单因素评价结果的重要程度。</strong></p>\n<h2 id=\"模型Ⅲ-M-∧\"><a href=\"#模型Ⅲ-M-∧\" class=\"headerlink\" title=\"模型Ⅲ: M(+,∧)\"></a>模型Ⅲ: M(+,∧)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通加法运算，用+表示；</li>\n<li>另一种是取小运算，用∧表示。</li>\n</ul>\n<p>利用此模型计算为　</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410123834743.png\" alt></p>\n<p>此模型的特点是对每个评语vj都同时考虑各种因素的综合评判。</p>\n<h2 id=\"模型Ⅳ-M-·\"><a href=\"#模型Ⅳ-M-·\" class=\"headerlink\" title=\"模型Ⅳ: M(+,·)\"></a>模型Ⅳ: M(+,·)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通加法运算，用“+”表示；</li>\n<li>另一种是乘法运算，用“·”表示。</li>\n</ul>\n<p>利用此模型计算为</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410133216825.png\" alt></p>\n<p>此模型的特点是：在确定评语vj对模糊综合评判集的隶属度bj时，考虑了所有因素ui(i=1,2,…,n)的影响；由于同时考虑到所有因素的影响，所以各ai的大小具有刻画各因素重要程度的权系数意义。</p>\n<p>在上述各种评价模型中，因为运算的定义不同，所以对同一评价对象求出的评价结果也会不一样。</p>\n<p>##【典例】</p>\n<blockquote>\n<p>服装评判问题</p>\n</blockquote>\n<p>设U={花色式样，耐穿程度，价格费用}，V={很欢迎，比较欢迎，不太欢迎，不欢迎}，对某一种服装，请若干专门人员进行单因素评价。</p>\n<p>单考虑花色式样，若有70%的人很欢迎，有20%的人比较欢迎，10%的人不太欢迎便可得出</p>\n<p>花色式样→（0.7，0.2，0.1，0）<br>类似地，可以得到耐穿程度和价格费用的数值，如下：<br>耐穿程度→（0.2，0.3，0.4，0.1）<br>价格费用→（0.3，0.4，0.2，0.1）<br>将上述的所有单因素评判组成评判矩阵，可以得到模糊综合评判矩阵，如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410150531628.png\" alt></p>\n<p>不同的顾客，由于职业、性别、年龄、爱好、经济状况等等的不同，对服装的三要素所给予的权数也不同。假若设某类顾客所给的权重为：A=（0.5,0.3,0.2），采用模型Ⅳ可得此类顾客对这种服装的综合评判为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410150615883.png\" alt></p>\n<p>它表示的评价是：“很欢迎”的程度为47%；“比较欢迎” 的程度为27%；“不太欢迎” 的程度为21%；“不欢迎” 的程度为5%。按最大隶属原则，结论是“很欢迎”。<br>这个结果是归一化的。如果采用模型“”，“”Ⅰ的,运算，得出的综合评判结果不一定是归一化的，因此需将结果归一化处理。</p>\n<p>Matlab代码实现</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">%% 模糊评判矩阵\nR <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>0.7 0.2 0.1 0 \n     0.2 0.3 0.4 0.1\n     0.3 0.4 0.2 0.1<span class=\"token punctuation\">]</span>\n%% 各因素的权重\nA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>0.5 0.3 0.2<span class=\"token punctuation\">]</span>\n%% 隶属度计算\nB <span class=\"token operator\">=</span> A*R<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"2-多级模糊综合评判\"><a href=\"#2-多级模糊综合评判\" class=\"headerlink\" title=\"2. 多级模糊综合评判\"></a>2. 多级模糊综合评判</h1><p>如果评判对象的有关因素很多，很难合理地定出权数分配，即难以真实地反应各因素在整体的地位，这是需采取多级评判。</p>\n<p><strong>多因素多层次系统的综合评判方法</strong>是：<strong>首先按最低层次的各因素进行综合评价，然后再按上一层次的各因素进行综合评判；依次向更高一层评判，一直评定到最高层次得出总的评价结果。</strong></p>\n<p>下面给出多级模糊综合评判的数学模型的一般描述。<br>假设因素集为U={U1,U2,U3,…,Un}，对其中的Ui(i=1,2,…,n)细划分为Ui={Ui1,Ui2,…,Uim}</p>\n<p>对其中的Uij(i=1,2,…,n;j=1,2,…,m)再进一步细划分为Uij={Uij1,Uij2,…,Uijp}</p>\n<p>如此划分下去，就反映了影响因素的层次性。而评判时，应从最后一次划分最底层的因素开始，一级一级往上评判，直到评定到最高层。<br>下图给出三级模糊综合评判模型示意，更多级的评判过程依次类推。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410154901525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>##【典例】</p>\n<blockquote>\n<p>产品质量的综合评判</p>\n</blockquote>\n<p>对同一个产品质量问题先使用单层模糊综合评判，再使用双层模糊综合评判。</p>\n<h3 id=\"（1）单层模糊综合评判\"><a href=\"#（1）单层模糊综合评判\" class=\"headerlink\" title=\"（1）单层模糊综合评判\"></a>（1）单层模糊综合评判</h3><p>因素集：U={u1,u2,u3,u4,u5,u6,u7}<br>评判集：V={v1,v2,v3,v4} 式中v1表一级, v2二级, v3等外, v4表废品。<br>权重向量：A=(0.1,0.12,0.07,0.07,0.16,0.1,0.1,0.1,0.18)<br>评判矩阵：由专家、客户、质量检查员组成的评判小组，先打分并做简单处理得到如下的综合评判矩阵：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020041015541676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>利用模型Ⅰ计算综合评判</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155431407.png\" alt></p>\n<p>结果显示，无论是一级、二级、等外、废品的隶属度都是0.18，对这个具体问题而言模糊变换无法给出答案。可以采用其他方法，例如加权平均，也可以采用双层模糊综合评判。</p>\n<h3 id=\"（2）双层模糊综合评判\"><a href=\"#（2）双层模糊综合评判\" class=\"headerlink\" title=\"（2）双层模糊综合评判\"></a>（2）双层模糊综合评判</h3><p>因素集：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155502472.png\" alt></p>\n<p>评判集：V={v1,v2,v3,v4}式中v1表一级,  v2二级, v3等外, v4表废品。</p>\n<p>第一层权重向量：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155536383.png\" alt></p>\n<p>第一层评价矩阵：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155548784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>第一层评判，使用模型Ⅰ，有</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155559355.png\" alt></p>\n<p>第二层评判矩阵：将一层评判结果组合起来形成二级评判矩阵。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155610939.png\" alt></p>\n<p>第二层权重分配：因素集U={U1,U2,U3}的权重分配为A=(0.2,0.35,0.45)。<br>第二层评判，仍然使用模型Ⅰ，有</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020041015572129.png\" alt></p>\n<p>按最大隶属度原则，此产品属一级品。</p>\n<p>Matlab代码实现<br>模糊综合评价的函数：fuzzy_zhpp.m</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">function<span class=\"token punctuation\">[</span>B<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>fuzzy_zhpp<span class=\"token punctuation\">(</span>model,A,R<span class=\"token punctuation\">)</span> %模糊综合评判\nB<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span>m,s1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>size<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span>s2,n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>size<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nif<span class=\"token punctuation\">(</span>s1~<span class=\"token operator\">=</span>s2<span class=\"token punctuation\">)</span>\n     disp<span class=\"token punctuation\">(</span><span class=\"token string\">'A的列不等于R的行'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">else</span>\n    if<span class=\"token punctuation\">(</span>model<span class=\"token operator\">==</span>1<span class=\"token punctuation\">)</span>                 %主因素决定型\n        for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:m<span class=\"token punctuation\">)</span>\n           for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n               B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n               for<span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span>1:s1<span class=\"token punctuation\">)</span>\n                   x<span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                   if<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">))</span>\n                      x<span class=\"token operator\">=</span>A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token keyword\">else</span>\n                      x<span class=\"token operator\">=</span>R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   end\n                  if<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">)</span>\n                     B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n                  end\n               end\n           end\n       end\n   elseif<span class=\"token punctuation\">(</span>model<span class=\"token operator\">==</span>2<span class=\"token punctuation\">)</span>               %主因素突出型\n       for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:m<span class=\"token punctuation\">)</span>\n          for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n              B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n              for<span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span>1:s1<span class=\"token punctuation\">)</span>\n                  x<span class=\"token operator\">=</span>A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span>*R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                  if<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">)</span>\n                     B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>x<span class=\"token punctuation\">;</span>\n                  end\n              end\n          end\n       end\n   elseif<span class=\"token punctuation\">(</span>model<span class=\"token operator\">==</span>3<span class=\"token punctuation\">)</span>              %加权平均型\n          for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:m<span class=\"token punctuation\">)</span>\n             for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n                B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                for<span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span>1:s1<span class=\"token punctuation\">)</span>\n                    B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span>+A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span>*R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                end\n              end\n           end\n    elseif<span class=\"token punctuation\">(</span>model<span class=\"token operator\">==</span>4<span class=\"token punctuation\">)</span>             %取小上界和型\n           for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:m<span class=\"token punctuation\">)</span>\n               for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n                   B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                   for<span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span>1:s1<span class=\"token punctuation\">)</span>\n                       x<span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                       x<span class=\"token operator\">=</span>min<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span>,R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n                       B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span>+x<span class=\"token punctuation\">;</span>\n                   end\n                       B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>min<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span>,1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               end\n            end\n      elseif<span class=\"token punctuation\">(</span>model<span class=\"token operator\">==</span>5<span class=\"token punctuation\">)</span>            %均衡平均型\n            C<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            C<span class=\"token operator\">=</span>sum<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n               for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:s2<span class=\"token punctuation\">)</span>\n                   R<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>R<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span>/C<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               end\n            end\n            for<span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>1:m<span class=\"token punctuation\">)</span>\n                for<span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>1:n<span class=\"token punctuation\">)</span>\n                    B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                   for<span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span>1:s1<span class=\"token punctuation\">)</span>\n                       x<span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n                       x<span class=\"token operator\">=</span>min<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">(</span>i,k<span class=\"token punctuation\">)</span>,R<span class=\"token punctuation\">(</span>k,j<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\n                       B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>B<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span>+x<span class=\"token punctuation\">;</span>\n                   end\n                end\n            end\n        <span class=\"token keyword\">else</span>\n            disp<span class=\"token punctuation\">(</span><span class=\"token string\">'模型赋值不当'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        end\nend\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>主函数：main.m</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> main\nA1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>0.30 0.42 0.28<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nA2<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>0.20 0.50 0.30<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nA3<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>0.30 0.30 0.40<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nR<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>0.30 0.32 0.26 0.27<span class=\"token punctuation\">;</span>\n    0.26 0.36 0.20 0.20<span class=\"token punctuation\">;</span>\n    0.40 0.28 0.30 0.20<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nfuzzy_zhpp<span class=\"token punctuation\">(</span>1,A1,R<span class=\"token punctuation\">)</span>\nfuzzy_zhpp<span class=\"token punctuation\">(</span>1,A2,R<span class=\"token punctuation\">)</span>\nfuzzy_zhpp<span class=\"token punctuation\">(</span>1,A3,R<span class=\"token punctuation\">)</span>\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>有帮助的话各位小伙伴们来个三连击，鼓励鼓励一下我这只小白！！！</p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li><p>关注【<strong>做一个柔情的程序猿</strong>】公众号</p>\n</li>\n<li><p>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</p>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1></li>\n<li><p>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</p>\n</li>\n<li><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程</p>\n</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<p><strong>综合评判就是对受多个因素制约的事物或对象作出一个总的评价</strong>，这是在日常生活和科研工作中经常遇到的问题，例如对学生的评价应该考虑到各门功课的成绩，但绝不能忽略品行和健康。在歌手大赛中，也不能只考虑艺术水平而忽略了歌手的文化素质。由于从多方面对事物进行评价难免带有模糊性和主观性，采用模糊数学的方法进行综合评判将使结果尽量客观，从而取得更好的实际效果。</p>\n<p><strong>模糊综合评判的数学模型可分为一级模型和多级模型。</strong>下面就常用基本的模型进行介绍。</p>\n<h1 id=\"1-一级模糊综合评判\"><a href=\"#1-一级模糊综合评判\" class=\"headerlink\" title=\"1. 一级模糊综合评判\"></a>1. 一级模糊综合评判</h1><p>综合评判有三要素:<br>(ⅰ) 因素集U={u1,u2,u3,…,un}——被评判对象的各因素组成的集合；<br>(ⅱ) 评判集V={v1,v2,v3,…,vn}——评语组成的集合；<br>(ⅲ) 建立单因素判断，即对单个因素ui(i=1,2,…,n)的评判，得到V上的模糊集(ri1,ri2,ri3,…,rim)，所以它是从U到V的一个模糊映射：</p>\n<p><img src=\"https://i.loli.net/2020/12/15/VfNUsl3QATeip5B.png\" alt></p>\n<p>由模糊映射f可以确定一个模糊关系</p>\n<p><img src=\"https://i.loli.net/2020/12/15/9kOoZisU7gPuzvW.png\" alt></p>\n<p>称为评判矩阵，它是由所有对单因素评判的模糊集组成的。</p>\n<p>由于各因素地位未必相等，所以需对各因素加权，用U上的模糊集A=(a1,a2,a3,…,an)表示各因素的权重分配，将它与评判矩阵R进行合成，即得到模糊综合评判集，采用最大隶属度原则对各因素进行综合评判。下面四种综合评判模型则是根据合成运算的不同而得出的。</p>\n<h2 id=\"模型Ⅰ-M-∨-∧\"><a href=\"#模型Ⅰ-M-∨-∧\" class=\"headerlink\" title=\"模型Ⅰ:  M(∨,∧)\"></a>模型Ⅰ:  M(∨,∧)</h2><p><img src=\"https://img-blog.csdnimg.cn/20200410123138352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>这里bj是(ri1,ri2,ri3,…,rim)的函数，也就是评判函数。这种方法通过取小与取大两种运算，因此，称该模型为 M(∨,∧)模型。此模型的特点是一种“<strong>主因素突出法</strong>”的综合评判。<strong>由于权重系数的作用体现较弱，有时会导致评价结果的不理想，这时需要将进行修正并进行归一化处理。</strong></p>\n<h2 id=\"模型Ⅱ-M-·-∨\"><a href=\"#模型Ⅱ-M-·-∨\" class=\"headerlink\" title=\"模型Ⅱ: M(·,∨)\"></a>模型Ⅱ: M(·,∨)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通乘法运算，用·表示；</li>\n<li>另一种是取大运算，用∨表示。</li>\n</ul>\n<p>利用此模型计算为　</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410123639237.png\" alt></p>\n<p>其中乘法运算不会丢失有用的信息，而取大运算会丢失有用信息。<strong>该模型优点是较好地反映了单因素评价结果的重要程度。</strong></p>\n<h2 id=\"模型Ⅲ-M-∧\"><a href=\"#模型Ⅲ-M-∧\" class=\"headerlink\" title=\"模型Ⅲ: M(+,∧)\"></a>模型Ⅲ: M(+,∧)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通加法运算，用+表示；</li>\n<li>另一种是取小运算，用∧表示。</li>\n</ul>\n<p>利用此模型计算为　</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410123834743.png\" alt></p>\n<p>此模型的特点是对每个评语vj都同时考虑各种因素的综合评判。</p>\n<h2 id=\"模型Ⅳ-M-·\"><a href=\"#模型Ⅳ-M-·\" class=\"headerlink\" title=\"模型Ⅳ: M(+,·)\"></a>模型Ⅳ: M(+,·)</h2><p>该模型采用两种运算：</p>\n<ul>\n<li>一种是普通加法运算，用“+”表示；</li>\n<li>另一种是乘法运算，用“·”表示。</li>\n</ul>\n<p>利用此模型计算为</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410133216825.png\" alt></p>\n<p>此模型的特点是：在确定评语vj对模糊综合评判集的隶属度bj时，考虑了所有因素ui(i=1,2,…,n)的影响；由于同时考虑到所有因素的影响，所以各ai的大小具有刻画各因素重要程度的权系数意义。</p>\n<p>在上述各种评价模型中，因为运算的定义不同，所以对同一评价对象求出的评价结果也会不一样。</p>\n<p>##【典例】</p>\n<blockquote>\n<p>服装评判问题</p>\n</blockquote>\n<p>设U={花色式样，耐穿程度，价格费用}，V={很欢迎，比较欢迎，不太欢迎，不欢迎}，对某一种服装，请若干专门人员进行单因素评价。</p>\n<p>单考虑花色式样，若有70%的人很欢迎，有20%的人比较欢迎，10%的人不太欢迎便可得出</p>\n<p>花色式样→（0.7，0.2，0.1，0）<br>类似地，可以得到耐穿程度和价格费用的数值，如下：<br>耐穿程度→（0.2，0.3，0.4，0.1）<br>价格费用→（0.3，0.4，0.2，0.1）<br>将上述的所有单因素评判组成评判矩阵，可以得到模糊综合评判矩阵，如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410150531628.png\" alt></p>\n<p>不同的顾客，由于职业、性别、年龄、爱好、经济状况等等的不同，对服装的三要素所给予的权数也不同。假若设某类顾客所给的权重为：A=（0.5,0.3,0.2），采用模型Ⅳ可得此类顾客对这种服装的综合评判为：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410150615883.png\" alt></p>\n<p>它表示的评价是：“很欢迎”的程度为47%；“比较欢迎” 的程度为27%；“不太欢迎” 的程度为21%；“不欢迎” 的程度为5%。按最大隶属原则，结论是“很欢迎”。<br>这个结果是归一化的。如果采用模型“”，“”Ⅰ的,运算，得出的综合评判结果不一定是归一化的，因此需将结果归一化处理。</p>\n<p>Matlab代码实现</p>\n<pre><code class=\"bash\">%% 模糊评判矩阵\nR = [0.7 0.2 0.1 0 \n     0.2 0.3 0.4 0.1\n     0.3 0.4 0.2 0.1]\n%% 各因素的权重\nA = [0.5 0.3 0.2]\n%% 隶属度计算\nB = A*R</code></pre>\n<h1 id=\"2-多级模糊综合评判\"><a href=\"#2-多级模糊综合评判\" class=\"headerlink\" title=\"2. 多级模糊综合评判\"></a>2. 多级模糊综合评判</h1><p>如果评判对象的有关因素很多，很难合理地定出权数分配，即难以真实地反应各因素在整体的地位，这是需采取多级评判。</p>\n<p><strong>多因素多层次系统的综合评判方法</strong>是：<strong>首先按最低层次的各因素进行综合评价，然后再按上一层次的各因素进行综合评判；依次向更高一层评判，一直评定到最高层次得出总的评价结果。</strong></p>\n<p>下面给出多级模糊综合评判的数学模型的一般描述。<br>假设因素集为U={U1,U2,U3,…,Un}，对其中的Ui(i=1,2,…,n)细划分为Ui={Ui1,Ui2,…,Uim}</p>\n<p>对其中的Uij(i=1,2,…,n;j=1,2,…,m)再进一步细划分为Uij={Uij1,Uij2,…,Uijp}</p>\n<p>如此划分下去，就反映了影响因素的层次性。而评判时，应从最后一次划分最底层的因素开始，一级一级往上评判，直到评定到最高层。<br>下图给出三级模糊综合评判模型示意，更多级的评判过程依次类推。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410154901525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>##【典例】</p>\n<blockquote>\n<p>产品质量的综合评判</p>\n</blockquote>\n<p>对同一个产品质量问题先使用单层模糊综合评判，再使用双层模糊综合评判。</p>\n<h3 id=\"（1）单层模糊综合评判\"><a href=\"#（1）单层模糊综合评判\" class=\"headerlink\" title=\"（1）单层模糊综合评判\"></a>（1）单层模糊综合评判</h3><p>因素集：U={u1,u2,u3,u4,u5,u6,u7}<br>评判集：V={v1,v2,v3,v4} 式中v1表一级, v2二级, v3等外, v4表废品。<br>权重向量：A=(0.1,0.12,0.07,0.07,0.16,0.1,0.1,0.1,0.18)<br>评判矩阵：由专家、客户、质量检查员组成的评判小组，先打分并做简单处理得到如下的综合评判矩阵：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020041015541676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>利用模型Ⅰ计算综合评判</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155431407.png\" alt></p>\n<p>结果显示，无论是一级、二级、等外、废品的隶属度都是0.18，对这个具体问题而言模糊变换无法给出答案。可以采用其他方法，例如加权平均，也可以采用双层模糊综合评判。</p>\n<h3 id=\"（2）双层模糊综合评判\"><a href=\"#（2）双层模糊综合评判\" class=\"headerlink\" title=\"（2）双层模糊综合评判\"></a>（2）双层模糊综合评判</h3><p>因素集：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155502472.png\" alt></p>\n<p>评判集：V={v1,v2,v3,v4}式中v1表一级,  v2二级, v3等外, v4表废品。</p>\n<p>第一层权重向量：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155536383.png\" alt></p>\n<p>第一层评价矩阵：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155548784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>第一层评判，使用模型Ⅰ，有</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155559355.png\" alt></p>\n<p>第二层评判矩阵：将一层评判结果组合起来形成二级评判矩阵。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200410155610939.png\" alt></p>\n<p>第二层权重分配：因素集U={U1,U2,U3}的权重分配为A=(0.2,0.35,0.45)。<br>第二层评判，仍然使用模型Ⅰ，有</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020041015572129.png\" alt></p>\n<p>按最大隶属度原则，此产品属一级品。</p>\n<p>Matlab代码实现<br>模糊综合评价的函数：fuzzy_zhpp.m</p>\n<pre><code class=\"bash\">function[B]=fuzzy_zhpp(model,A,R) %模糊综合评判\nB=[];\n[m,s1]=size(A);\n[s2,n]=size(R);\nif(s1~=s2)\n     disp(&#39;A的列不等于R的行&#39;);\nelse\n    if(model==1)                 %主因素决定型\n        for(i=1:m)\n           for(j=1:n)\n               B(i,j)=0;\n               for(k=1:s1)\n                   x=0;\n                   if(A(i,k)&lt;R(k,j))\n                      x=A(i,k);\n                   else\n                      x=R(k,j);\n                   end\n                  if(B(i,j)&lt;x)\n                     B(i,j)=x;\n                  end\n               end\n           end\n       end\n   elseif(model==2)               %主因素突出型\n       for(i=1:m)\n          for(j=1:n)\n              B(i,j)=0;\n              for(k=1:s1)\n                  x=A(i,k)*R(k,j);\n                  if(B(i,j)&lt;x)\n                     B(i,j)=x;\n                  end\n              end\n          end\n       end\n   elseif(model==3)              %加权平均型\n          for(i=1:m)\n             for(j=1:n)\n                B(i,j)=0;\n                for(k=1:s1)\n                    B(i,j)=B(i,j)+A(i,k)*R(k,j);\n                end\n              end\n           end\n    elseif(model==4)             %取小上界和型\n           for(i=1:m)\n               for(j=1:n)\n                   B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                       B(i,j)=min(B(i,j),1);\n               end\n            end\n      elseif(model==5)            %均衡平均型\n            C=[];\n            C=sum(R);\n            for(j=1:n)\n               for(i=1:s2)\n                   R(i,j)=R(i,j)/C(j);\n               end\n            end\n            for(i=1:m)\n                for(j=1:n)\n                    B(i,j)=0;\n                   for(k=1:s1)\n                       x=0;\n                       x=min(A(i,k),R(k,j));\n                       B(i,j)=B(i,j)+x;\n                   end\n                end\n            end\n        else\n            disp(&#39;模型赋值不当&#39;);\n        end\nend\nend</code></pre>\n<p>主函数：main.m</p>\n<pre><code class=\"bash\">function main\nA1=[0.30 0.42 0.28];\nA2=[0.20 0.50 0.30];\nA3=[0.30 0.30 0.40];\n\nR=[0.30 0.32 0.26 0.27;\n    0.26 0.36 0.20 0.20;\n    0.40 0.28 0.30 0.20];\nfuzzy_zhpp(1,A1,R)\nfuzzy_zhpp(1,A2,R)\nfuzzy_zhpp(1,A3,R)\nend</code></pre>\n<p>有帮助的话各位小伙伴们来个三连击，鼓励鼓励一下我这只小白！！！</p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li><p>关注【<strong>做一个柔情的程序猿</strong>】公众号</p>\n</li>\n<li><p>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</p>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1></li>\n<li><p>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</p>\n</li>\n<li><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程</p>\n</li>\n</ul>\n"},{"title":"教你在python中用不同的方式画不同颜色的画布","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-05T07:57:15.000Z","password":null,"summary":"给大家讲解如何分别用`numpy`的方法，与`numpy与cv2结合`的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍`cv2`进行通道分割`cv2.split`与通道合并`cv2.merge`的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。","_content":"\n# 摘要\n在这篇文章中将给大家讲解如何分别用`numpy`的方法，与`numpy与cv2结合`的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍`cv2`进行通道分割`cv2.split`与通道合并`cv2.merge`的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。\n\n# numpy的ndarray数据结构的索引与赋值\n在使用画图工具的时候, 第一件事情就是创建一个新的空白画布，我们可以指定画布的大小和颜色。\n\n> **那我们如何使用opencv来创建一个空白的画布(值相同的图片) ?**\n\n**其实image的数据结构上的图片，本质上就是`numpy`里面的`ndarray的对象`，创建一个画布本质上就是创建一个同等规格的`ndarray`。**\n\n创建一个新的特定尺寸的`ndarray`我们可以使用`np.zeors` 函数，我们将图像的高度(height)，图像的宽度(width)，以及图像的通道数`channel` 以`tuple 类型`传入`np.zeros`。**再次声明是tuple类型**。\n\n另外由于不是所有的`numpy`类型的数值，都可以放到opencv中进行图像处理.\n\n数值取值范围在`0-255`， 我们需要指定数据类型为`uint8` unsigned integer 8-bit\n```python\nnp.zeros((height, width, channels), dtype=\"uint8\")\n```\n举个例子：想创建一个800 x 600 x 3 的图片，一个BGR格式的图像，我们就得这么写：\n\n```python\n# 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((600, 800, 3), dtype=\"uint8\")\n```\n得到的效果如下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006200546404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n> 注意： height写在前面\n>  **为什么Height写在前面？** \n>  就得知道opencv图像的数据结构是numpy，Image的属性,其实就是numpy的ndarray数据格式的属性。\n>  \n我们可以直接获取img对象的诸多属性，例如我们打印lena图的属性，具体如下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006195435156.jpg#pic_center)\n\n```python\n # -*- coding: utf-8 -*- \nimport numpy as np\nimport cv2\n\n# 导入一张图像 模式为彩色图片\nimg = cv2.imread('lena.jpg', cv2.IMREAD_COLOR)\n\nprint(\"================打印图像的属性================\")\nprint(\"图像对象的类型 {}\".format(type(img)))\nprint(img.shape)\nprint(\"图像宽度: {} pixels\".format(img.shape[1]))\nprint(\"图像高度: {} pixels\".format(img.shape[0]))\nprint(\"通道: {}\".format(img.shape[2]))\nprint(\"图像分辨率: {}\".format(img.size))\nprint(\"数据类型: {}\".format(img.dtype))\n```\n\n**输出结果**：\n\n```python\n================打印图像的属性================\n图像对象的类型 <class 'numpy.ndarray'>\n(256, 256, 3)\n图像宽度: 256 pixels\n图像高度: 256 pixels\n通道: 3\n图像分辨率: 196608\n数据类型: uint8\n```\n\n有时候我们也可以偷懒，如果我们想创建与另外一个图像尺寸相同的画布的时候，我们可以使用`np.zeros_like`\n\n```python\ncanvas_black = np.zeros_like(img)\n```\n\n# 创建空白画布\n**创建空白画布的函数**如下：\n\n```python\ndef InitCanvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n```\n调用的时候传入图像的宽度、高度和画布的颜色。例如创建一个800*600 颜色为纯黑色的画布：\n\n```python\ncanvas = InitCanvas(800, 600, color=(255,255,255))\n```\n**创建空白画布的完整代码**如下：\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**效果展示：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006193553314.png#pic_center)\n\n# 初始化白色的画布\n白色的画布， 因为比较简单，而且三个通道的值都相同。\n\n> ps: 其实灰色的图片(GRAY2BGR)，三个通道的值都相同。\n\n那么我们创建一个全都是1的矩阵，然后乘上某个数值，问题是不是就解决了。\n\n我们需要用到`np.ones` 函数\n\n```python\n# 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\n```\n\n接下来, 需要乘上一个整数，255 (你可以填入0-255的任意值)\n\n```python\ncanvas_white *= 255\n```\n这种运算称之为 `全局乘法` 。\n\n**具体代码如下：**\n\n```python\nimport cv2\nimport numpy as np\ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\ncanvas_white *= 255\ncv2.imshow('canvas', canvas_white)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n**创建的白色画布如下**：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006200648233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# 初始化彩色的画布\n## 利用cv2的内置方法merge与split\n我们初始化`BGR`的图片`canvas_white` 之后将原来的图片进行通道分离，之后分别乘上`BGR`三个通道的整数值，然后将三个通道合并在一起，就得到我们想要的彩图纯色背景。\n\n那通道的分离我们需要用到的函数是`cv2.split(img)`.\n\n```python\n# 将原来的三个通道抽离出来， 分别乘上各个通道的值\n(channel_b, channel_g, channel_r) = cv2.split(canvas)\n```\n\n**channel_b 蓝色通道**，**channel_g 绿色通道**，**channel_r 红色通道**，都是二维的ndarray对象。\n\n我们指定一种颜色，例如 `color = (100, 20, 50))`\n\n> 注意：我们这里的**颜色指的BGR格式**\n> \n> 也就是\n> \n> B -> 100 \n> G -> 20 \n> R -> 50\n\n接下来我们分别将其乘上对应的值.\n\n```python\n# 颜色的值与个通道的全1矩阵相乘\nchannel_b *= color[0]\nchannel_g *= color[1]\nchannel_r *= color[2]\n```\n\n接下来我们将三个通道重新合并，需要用到的函数是`cv2.merge`\n\n```python\ncv2.merge([channel_b, channel_g, channel_r])\n```\n\n> 注意：三个通道的矩阵以`list []` 的方式传入`merge`函数.\n\n综合起来，就是我们的第一个**初始化彩色背景的函数**：\n\n```python\n# 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n```\n**具体实现代码如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\n# 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**运行效果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204105226.png#pic_center)\n\n> 注意：此函数使用 `cv2.split` 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n## 利用numpy内置的索引\n使用numpy原生的方法， 性能会比opencv中的要好。我们直接使用`numpy的ndarray的索引`的方法。\n\n例如 `canvas[:,:,0]` 选中的是所有行，所有列，像素元素的第一个值，也就是，所有B通道的值。\n\n然后对其进行赋值：\n\n```python\ncanvas[:,:,0] = color[0]\n```\n\n完整版本的函数如下，B/G/R通道分别进行赋值：\n\n```python\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n```\n**具体实现代码如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**运行实现的效果和第一种方法一样：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204652418.png#pic_center)\n\n实际上我们还有更快的方法, 可以实现这个功能, 这就需要你熟练掌握Numpy的使用技巧.\n\n我们可以直接赋值color\n\n```python\ncanvas[:] = color\n```\n**完整实现过程如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n\n**运行的效果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204920615.png#pic_center)\n\n# 综合实验-初始化背景\n\n在这个综合实验里会分别用上述的方法，创建黑色背景，白色背景，彩色背景。\n\n**具体代码如下：**\n\n```python\n'''\n初始化一个空白的画布\n并指定画布的颜色\n'''\n\nimport cv2\nimport numpy as np\n\n# 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((300, 300, 3), dtype=\"uint8\")\ncv2.imshow(\"canvas_black\", canvas_black)\n\n# 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\ncanvas_white *= 255\n\ncv2.imshow(\"canvas_white\", canvas_white)\n\n'''\n初始化一个彩色的画布 - cv2版本\n此函数使用 cv2.split 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n'''\ndef InitCanvasV1(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\n'''\n初始化一个彩色的画布 - numpy版本\n使用numpy的索引　赋值\n'''\ndef InitCanvasV2(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\n'''\n初始化终极版本\n\n熟练掌握 numpy 才可以提高工作效率哦\n'''\ndef InitCanvasV3(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\n# 初始化一个彩色的画布\ncanvas_color = InitCanvasV2(300, 300, color=(100, 20, 50))\ncv2.imshow(\"canvas_color\", canvas_color)\n\n# 等待e键按下 关闭所有窗口\nwhile cv2.waitKey(0) != ord('e'):\n    continue\ncv2.destroyAllWindows()\n\n```\n\n**运行结果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006205102788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# 资源传送门\n\n - 关注【**做一个柔情的程序猿**】公众号\n - 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n\n# 「❤️ 感谢大家」\n\n 1. **点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）**\n 2. **欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。**","source":"_posts/Different-color-canvas.md","raw":"---\ntitle: 教你在python中用不同的方式画不同颜色的画布\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-05 15:57:15\npassword:\nsummary: 给大家讲解如何分别用`numpy`的方法，与`numpy与cv2结合`的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍`cv2`进行通道分割`cv2.split`与通道合并`cv2.merge`的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。\ntags: \n- python\n- numpy\n- OpenCV\ncategories: \n- python\n---\n\n# 摘要\n在这篇文章中将给大家讲解如何分别用`numpy`的方法，与`numpy与cv2结合`的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍`cv2`进行通道分割`cv2.split`与通道合并`cv2.merge`的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。\n\n# numpy的ndarray数据结构的索引与赋值\n在使用画图工具的时候, 第一件事情就是创建一个新的空白画布，我们可以指定画布的大小和颜色。\n\n> **那我们如何使用opencv来创建一个空白的画布(值相同的图片) ?**\n\n**其实image的数据结构上的图片，本质上就是`numpy`里面的`ndarray的对象`，创建一个画布本质上就是创建一个同等规格的`ndarray`。**\n\n创建一个新的特定尺寸的`ndarray`我们可以使用`np.zeors` 函数，我们将图像的高度(height)，图像的宽度(width)，以及图像的通道数`channel` 以`tuple 类型`传入`np.zeros`。**再次声明是tuple类型**。\n\n另外由于不是所有的`numpy`类型的数值，都可以放到opencv中进行图像处理.\n\n数值取值范围在`0-255`， 我们需要指定数据类型为`uint8` unsigned integer 8-bit\n```python\nnp.zeros((height, width, channels), dtype=\"uint8\")\n```\n举个例子：想创建一个800 x 600 x 3 的图片，一个BGR格式的图像，我们就得这么写：\n\n```python\n# 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((600, 800, 3), dtype=\"uint8\")\n```\n得到的效果如下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006200546404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n> 注意： height写在前面\n>  **为什么Height写在前面？** \n>  就得知道opencv图像的数据结构是numpy，Image的属性,其实就是numpy的ndarray数据格式的属性。\n>  \n我们可以直接获取img对象的诸多属性，例如我们打印lena图的属性，具体如下：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006195435156.jpg#pic_center)\n\n```python\n # -*- coding: utf-8 -*- \nimport numpy as np\nimport cv2\n\n# 导入一张图像 模式为彩色图片\nimg = cv2.imread('lena.jpg', cv2.IMREAD_COLOR)\n\nprint(\"================打印图像的属性================\")\nprint(\"图像对象的类型 {}\".format(type(img)))\nprint(img.shape)\nprint(\"图像宽度: {} pixels\".format(img.shape[1]))\nprint(\"图像高度: {} pixels\".format(img.shape[0]))\nprint(\"通道: {}\".format(img.shape[2]))\nprint(\"图像分辨率: {}\".format(img.size))\nprint(\"数据类型: {}\".format(img.dtype))\n```\n\n**输出结果**：\n\n```python\n================打印图像的属性================\n图像对象的类型 <class 'numpy.ndarray'>\n(256, 256, 3)\n图像宽度: 256 pixels\n图像高度: 256 pixels\n通道: 3\n图像分辨率: 196608\n数据类型: uint8\n```\n\n有时候我们也可以偷懒，如果我们想创建与另外一个图像尺寸相同的画布的时候，我们可以使用`np.zeros_like`\n\n```python\ncanvas_black = np.zeros_like(img)\n```\n\n# 创建空白画布\n**创建空白画布的函数**如下：\n\n```python\ndef InitCanvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n```\n调用的时候传入图像的宽度、高度和画布的颜色。例如创建一个800*600 颜色为纯黑色的画布：\n\n```python\ncanvas = InitCanvas(800, 600, color=(255,255,255))\n```\n**创建空白画布的完整代码**如下：\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**效果展示：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006193553314.png#pic_center)\n\n# 初始化白色的画布\n白色的画布， 因为比较简单，而且三个通道的值都相同。\n\n> ps: 其实灰色的图片(GRAY2BGR)，三个通道的值都相同。\n\n那么我们创建一个全都是1的矩阵，然后乘上某个数值，问题是不是就解决了。\n\n我们需要用到`np.ones` 函数\n\n```python\n# 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\n```\n\n接下来, 需要乘上一个整数，255 (你可以填入0-255的任意值)\n\n```python\ncanvas_white *= 255\n```\n这种运算称之为 `全局乘法` 。\n\n**具体代码如下：**\n\n```python\nimport cv2\nimport numpy as np\ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\ncanvas_white *= 255\ncv2.imshow('canvas', canvas_white)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n**创建的白色画布如下**：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006200648233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# 初始化彩色的画布\n## 利用cv2的内置方法merge与split\n我们初始化`BGR`的图片`canvas_white` 之后将原来的图片进行通道分离，之后分别乘上`BGR`三个通道的整数值，然后将三个通道合并在一起，就得到我们想要的彩图纯色背景。\n\n那通道的分离我们需要用到的函数是`cv2.split(img)`.\n\n```python\n# 将原来的三个通道抽离出来， 分别乘上各个通道的值\n(channel_b, channel_g, channel_r) = cv2.split(canvas)\n```\n\n**channel_b 蓝色通道**，**channel_g 绿色通道**，**channel_r 红色通道**，都是二维的ndarray对象。\n\n我们指定一种颜色，例如 `color = (100, 20, 50))`\n\n> 注意：我们这里的**颜色指的BGR格式**\n> \n> 也就是\n> \n> B -> 100 \n> G -> 20 \n> R -> 50\n\n接下来我们分别将其乘上对应的值.\n\n```python\n# 颜色的值与个通道的全1矩阵相乘\nchannel_b *= color[0]\nchannel_g *= color[1]\nchannel_r *= color[2]\n```\n\n接下来我们将三个通道重新合并，需要用到的函数是`cv2.merge`\n\n```python\ncv2.merge([channel_b, channel_g, channel_r])\n```\n\n> 注意：三个通道的矩阵以`list []` 的方式传入`merge`函数.\n\n综合起来，就是我们的第一个**初始化彩色背景的函数**：\n\n```python\n# 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n```\n**具体实现代码如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\n# 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**运行效果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204105226.png#pic_center)\n\n> 注意：此函数使用 `cv2.split` 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n## 利用numpy内置的索引\n使用numpy原生的方法， 性能会比opencv中的要好。我们直接使用`numpy的ndarray的索引`的方法。\n\n例如 `canvas[:,:,0]` 选中的是所有行，所有列，像素元素的第一个值，也就是，所有B通道的值。\n\n然后对其进行赋值：\n\n```python\ncanvas[:,:,0] = color[0]\n```\n\n完整版本的函数如下，B/G/R通道分别进行赋值：\n\n```python\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n```\n**具体实现代码如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n**运行实现的效果和第一种方法一样：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204652418.png#pic_center)\n\n实际上我们还有更快的方法, 可以实现这个功能, 这就需要你熟练掌握Numpy的使用技巧.\n\n我们可以直接赋值color\n\n```python\ncanvas[:] = color\n```\n**完整实现过程如下：**\n\n```python\n'''\n初始化画布\n'''\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow('canvas', canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()\n```\n\n**运行的效果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006204920615.png#pic_center)\n\n# 综合实验-初始化背景\n\n在这个综合实验里会分别用上述的方法，创建黑色背景，白色背景，彩色背景。\n\n**具体代码如下：**\n\n```python\n'''\n初始化一个空白的画布\n并指定画布的颜色\n'''\n\nimport cv2\nimport numpy as np\n\n# 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((300, 300, 3), dtype=\"uint8\")\ncv2.imshow(\"canvas_black\", canvas_black)\n\n# 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=\"uint8\")\ncanvas_white *= 255\n\ncv2.imshow(\"canvas_white\", canvas_white)\n\n'''\n初始化一个彩色的画布 - cv2版本\n此函数使用 cv2.split 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n'''\ndef InitCanvasV1(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\n'''\n初始化一个彩色的画布 - numpy版本\n使用numpy的索引　赋值\n'''\ndef InitCanvasV2(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\n'''\n初始化终极版本\n\n熟练掌握 numpy 才可以提高工作效率哦\n'''\ndef InitCanvasV3(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=\"uint8\")\n    canvas[:] = color\n    return canvas\n\n# 初始化一个彩色的画布\ncanvas_color = InitCanvasV2(300, 300, color=(100, 20, 50))\ncv2.imshow(\"canvas_color\", canvas_color)\n\n# 等待e键按下 关闭所有窗口\nwhile cv2.waitKey(0) != ord('e'):\n    continue\ncv2.destroyAllWindows()\n\n```\n\n**运行结果：**\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20201006205102788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# 资源传送门\n\n - 关注【**做一个柔情的程序猿**】公众号\n - 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n\n# 「❤️ 感谢大家」\n\n 1. **点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）**\n 2. **欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。**","slug":"Different-color-canvas","published":1,"updated":"2020-12-05T08:39:45.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsh0009ksvb9gnahluy","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>在这篇文章中将给大家讲解如何分别用<code>numpy</code>的方法，与<code>numpy与cv2结合</code>的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍<code>cv2</code>进行通道分割<code>cv2.split</code>与通道合并<code>cv2.merge</code>的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。</p>\n<h1 id=\"numpy的ndarray数据结构的索引与赋值\"><a href=\"#numpy的ndarray数据结构的索引与赋值\" class=\"headerlink\" title=\"numpy的ndarray数据结构的索引与赋值\"></a>numpy的ndarray数据结构的索引与赋值</h1><p>在使用画图工具的时候, 第一件事情就是创建一个新的空白画布，我们可以指定画布的大小和颜色。</p>\n<blockquote>\n<p><strong>那我们如何使用opencv来创建一个空白的画布(值相同的图片) ?</strong></p>\n</blockquote>\n<p><strong>其实image的数据结构上的图片，本质上就是<code>numpy</code>里面的<code>ndarray的对象</code>，创建一个画布本质上就是创建一个同等规格的<code>ndarray</code>。</strong></p>\n<p>创建一个新的特定尺寸的<code>ndarray</code>我们可以使用<code>np.zeors</code> 函数，我们将图像的高度(height)，图像的宽度(width)，以及图像的通道数<code>channel</code> 以<code>tuple 类型</code>传入<code>np.zeros</code>。<strong>再次声明是tuple类型</strong>。</p>\n<p>另外由于不是所有的<code>numpy</code>类型的数值，都可以放到opencv中进行图像处理.</p>\n<p>数值取值范围在<code>0-255</code>， 我们需要指定数据类型为<code>uint8</code> unsigned integer 8-bit</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>举个例子：想创建一个800 x 600 x 3 的图片，一个BGR格式的图像，我们就得这么写：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 初始化一个空画布 300×300 三通道 背景色为黑色 </span>\ncanvas_black <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>得到的效果如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006200546404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意： height写在前面<br> <strong>为什么Height写在前面？</strong><br> 就得知道opencv图像的数据结构是numpy，Image的属性,其实就是numpy的ndarray数据格式的属性。</p>\n<p>我们可以直接获取img对象的诸多属性，例如我们打印lena图的属性，具体如下：</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006195435156.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"> <span class=\"token comment\" spellcheck=\"true\"># -*- coding: utf-8 -*- </span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> cv2\n\n<span class=\"token comment\" spellcheck=\"true\"># 导入一张图像 模式为彩色图片</span>\nimg <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'lena.jpg'</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>IMREAD_COLOR<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"================打印图像的属性================\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图像对象的类型 {}\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图像宽度: {} pixels\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图像高度: {} pixels\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"通道: {}\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图像分辨率: {}\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据类型: {}\"</span><span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>输出结果</strong>：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>打印图像的属性<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n图像对象的类型 <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'numpy.ndarray'</span><span class=\"token operator\">></span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n图像宽度<span class=\"token punctuation\">:</span> <span class=\"token number\">256</span> pixels\n图像高度<span class=\"token punctuation\">:</span> <span class=\"token number\">256</span> pixels\n通道<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n图像分辨率<span class=\"token punctuation\">:</span> <span class=\"token number\">196608</span>\n数据类型<span class=\"token punctuation\">:</span> uint8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>有时候我们也可以偷懒，如果我们想创建与另外一个图像尺寸相同的画布的时候，我们可以使用<code>np.zeros_like</code></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">canvas_black <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros_like<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"创建空白画布\"><a href=\"#创建空白画布\" class=\"headerlink\" title=\"创建空白画布\"></a>创建空白画布</h1><p><strong>创建空白画布的函数</strong>如下：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">InitCanvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color\n    <span class=\"token keyword\">return</span> canvas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>调用的时候传入图像的宽度、高度和画布的颜色。例如创建一个800*600 颜色为纯黑色的画布：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">canvas <span class=\"token operator\">=</span> InitCanvas<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>创建空白画布的完整代码</strong>如下：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n初始化画布\n'''</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color\n    <span class=\"token keyword\">return</span> canvas\n\ncanvas <span class=\"token operator\">=</span> init_canvas<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>效果展示：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006193553314.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"初始化白色的画布\"><a href=\"#初始化白色的画布\" class=\"headerlink\" title=\"初始化白色的画布\"></a>初始化白色的画布</h1><p>白色的画布， 因为比较简单，而且三个通道的值都相同。</p>\n<blockquote>\n<p>ps: 其实灰色的图片(GRAY2BGR)，三个通道的值都相同。</p>\n</blockquote>\n<p>那么我们创建一个全都是1的矩阵，然后乘上某个数值，问题是不是就解决了。</p>\n<p>我们需要用到<code>np.ones</code> 函数</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 初始化一个空画布 300×300 三通道 背景色为白色 </span>\ncanvas_white <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>接下来, 需要乘上一个整数，255 (你可以填入0-255的任意值)</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">canvas_white <span class=\"token operator\">*=</span> <span class=\"token number\">255</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这种运算称之为 <code>全局乘法</code> 。</p>\n<p><strong>具体代码如下：</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\ncanvas_white <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\ncanvas_white <span class=\"token operator\">*=</span> <span class=\"token number\">255</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">,</span> canvas_white<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>创建的白色画布如下</strong>：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006200648233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"初始化彩色的画布\"><a href=\"#初始化彩色的画布\" class=\"headerlink\" title=\"初始化彩色的画布\"></a>初始化彩色的画布</h1><h2 id=\"利用cv2的内置方法merge与split\"><a href=\"#利用cv2的内置方法merge与split\" class=\"headerlink\" title=\"利用cv2的内置方法merge与split\"></a>利用cv2的内置方法merge与split</h2><p>我们初始化<code>BGR</code>的图片<code>canvas_white</code> 之后将原来的图片进行通道分离，之后分别乘上<code>BGR</code>三个通道的整数值，然后将三个通道合并在一起，就得到我们想要的彩图纯色背景。</p>\n<p>那通道的分离我们需要用到的函数是<code>cv2.split(img)</code>.</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 将原来的三个通道抽离出来， 分别乘上各个通道的值</span>\n<span class=\"token punctuation\">(</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>channel_b 蓝色通道</strong>，<strong>channel_g 绿色通道</strong>，<strong>channel_r 红色通道</strong>，都是二维的ndarray对象。</p>\n<p>我们指定一种颜色，例如 <code>color = (100, 20, 50))</code></p>\n<blockquote>\n<p>注意：我们这里的<strong>颜色指的BGR格式</strong></p>\n<p>也就是</p>\n<p>B -&gt; 100<br>G -&gt; 20<br>R -&gt; 50</p>\n</blockquote>\n<p>接下来我们分别将其乘上对应的值.</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 颜色的值与个通道的全1矩阵相乘</span>\nchannel_b <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nchannel_g <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nchannel_r <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来我们将三个通道重新合并，需要用到的函数是<code>cv2.merge</code></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">cv2<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>注意：三个通道的矩阵以<code>list []</code> 的方式传入<code>merge</code>函数.</p>\n</blockquote>\n<p>综合起来，就是我们的第一个<strong>初始化彩色背景的函数</strong>：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># 初始化一个彩色的画布 - cv2版本</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 将原来的三个通道抽离出来， 分别乘上各个通道的值</span>\n    <span class=\"token punctuation\">(</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 颜色的值与个通道的全1矩阵相乘</span>\n    channel_b <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    channel_g <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    channel_r <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># cv.merge 合并三个通道的值</span>\n    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>具体实现代码如下：</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n初始化画布\n'''</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\" spellcheck=\"true\"># 初始化一个彩色的画布 - cv2版本</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 将原来的三个通道抽离出来， 分别乘上各个通道的值</span>\n    <span class=\"token punctuation\">(</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 颜色的值与个通道的全1矩阵相乘</span>\n    channel_b <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    channel_g <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    channel_r <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># cv.merge 合并三个通道的值</span>\n    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ncanvas <span class=\"token operator\">=</span> init_canvas<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行效果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204105226.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：此函数使用 <code>cv2.split</code> 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。</p>\n</blockquote>\n<h2 id=\"利用numpy内置的索引\"><a href=\"#利用numpy内置的索引\" class=\"headerlink\" title=\"利用numpy内置的索引\"></a>利用numpy内置的索引</h2><p>使用numpy原生的方法， 性能会比opencv中的要好。我们直接使用<code>numpy的ndarray的索引</code>的方法。</p>\n<p>例如 <code>canvas[:,:,0]</code> 选中的是所有行，所有列，像素元素的第一个值，也就是，所有B通道的值。</p>\n<p>然后对其进行赋值：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>完整版本的函数如下，B/G/R通道分别进行赋值：</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Blue </span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Green</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Red</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> canvas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>具体实现代码如下：</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n初始化画布\n'''</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Blue </span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Green</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Red</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> canvas\n\ncanvas <span class=\"token operator\">=</span> init_canvas<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行实现的效果和第一种方法一样：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204652418.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>实际上我们还有更快的方法, 可以实现这个功能, 这就需要你熟练掌握Numpy的使用技巧.</p>\n<p>我们可以直接赋值color</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\">canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>完整实现过程如下：</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n初始化画布\n'''</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">init_canvas</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color\n    <span class=\"token keyword\">return</span> canvas\n\ncanvas <span class=\"token operator\">=</span> init_canvas<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行的效果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204920615.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"综合实验-初始化背景\"><a href=\"#综合实验-初始化背景\" class=\"headerlink\" title=\"综合实验-初始化背景\"></a>综合实验-初始化背景</h1><p>在这个综合实验里会分别用上述的方法，创建黑色背景，白色背景，彩色背景。</p>\n<p><strong>具体代码如下：</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\n初始化一个空白的画布\n并指定画布的颜色\n'''</span>\n\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\" spellcheck=\"true\"># 初始化一个空画布 300×300 三通道 背景色为黑色 </span>\ncanvas_black <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas_black\"</span><span class=\"token punctuation\">,</span> canvas_black<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 初始化一个空画布 300×300 三通道 背景色为白色 </span>\ncanvas_white <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\ncanvas_white <span class=\"token operator\">*=</span> <span class=\"token number\">255</span>\n\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas_white\"</span><span class=\"token punctuation\">,</span> canvas_white<span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n初始化一个彩色的画布 - cv2版本\n此函数使用 cv2.split 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">InitCanvasV1</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># 将原来的三个通道抽离出来， 分别乘上各个通道的值</span>\n    <span class=\"token punctuation\">(</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 颜色的值与个通道的全1矩阵相乘</span>\n    channel_b <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    channel_g <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    channel_r <span class=\"token operator\">*=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\" spellcheck=\"true\"># cv.merge 合并三个通道的值</span>\n    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>channel_b<span class=\"token punctuation\">,</span> channel_g<span class=\"token punctuation\">,</span> channel_r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''\n初始化一个彩色的画布 - numpy版本\n使用numpy的索引　赋值\n'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">InitCanvasV2</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Blue </span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Green</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\" spellcheck=\"true\"># Red</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> canvas\n\n<span class=\"token triple-quoted-string string\">'''\n初始化终极版本\n\n熟练掌握 numpy 才可以提高工作效率哦\n'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">InitCanvasV3</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    canvas <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"uint8\"</span><span class=\"token punctuation\">)</span>\n    canvas<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color\n    <span class=\"token keyword\">return</span> canvas\n\n<span class=\"token comment\" spellcheck=\"true\"># 初始化一个彩色的画布</span>\ncanvas_color <span class=\"token operator\">=</span> InitCanvasV2<span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas_color\"</span><span class=\"token punctuation\">,</span> canvas_color<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 等待e键按下 关闭所有窗口</span>\n<span class=\"token keyword\">while</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> ord<span class=\"token punctuation\">(</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">continue</span>\ncv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>运行结果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006205102788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li>关注【<strong>做一个柔情的程序猿</strong>】公众号</li>\n<li>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n</ul>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1><ol>\n<li><strong>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</strong></li>\n<li><strong>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。</strong></li>\n</ol>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><p>在这篇文章中将给大家讲解如何分别用<code>numpy</code>的方法，与<code>numpy与cv2结合</code>的方法创建空白画布，创建白色画布，与创建彩色画布。在讲解过程中还会介绍<code>cv2</code>进行通道分割<code>cv2.split</code>与通道合并<code>cv2.merge</code>的两个函数的具体使用以及深究numpy的ndarray数据结构的索引与赋值。</p>\n<h1 id=\"numpy的ndarray数据结构的索引与赋值\"><a href=\"#numpy的ndarray数据结构的索引与赋值\" class=\"headerlink\" title=\"numpy的ndarray数据结构的索引与赋值\"></a>numpy的ndarray数据结构的索引与赋值</h1><p>在使用画图工具的时候, 第一件事情就是创建一个新的空白画布，我们可以指定画布的大小和颜色。</p>\n<blockquote>\n<p><strong>那我们如何使用opencv来创建一个空白的画布(值相同的图片) ?</strong></p>\n</blockquote>\n<p><strong>其实image的数据结构上的图片，本质上就是<code>numpy</code>里面的<code>ndarray的对象</code>，创建一个画布本质上就是创建一个同等规格的<code>ndarray</code>。</strong></p>\n<p>创建一个新的特定尺寸的<code>ndarray</code>我们可以使用<code>np.zeors</code> 函数，我们将图像的高度(height)，图像的宽度(width)，以及图像的通道数<code>channel</code> 以<code>tuple 类型</code>传入<code>np.zeros</code>。<strong>再次声明是tuple类型</strong>。</p>\n<p>另外由于不是所有的<code>numpy</code>类型的数值，都可以放到opencv中进行图像处理.</p>\n<p>数值取值范围在<code>0-255</code>， 我们需要指定数据类型为<code>uint8</code> unsigned integer 8-bit</p>\n<pre><code class=\"python\">np.zeros((height, width, channels), dtype=&quot;uint8&quot;)</code></pre>\n<p>举个例子：想创建一个800 x 600 x 3 的图片，一个BGR格式的图像，我们就得这么写：</p>\n<pre><code class=\"python\"># 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((600, 800, 3), dtype=&quot;uint8&quot;)</code></pre>\n<p>得到的效果如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006200546404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意： height写在前面<br> <strong>为什么Height写在前面？</strong><br> 就得知道opencv图像的数据结构是numpy，Image的属性,其实就是numpy的ndarray数据格式的属性。</p>\n<p>我们可以直接获取img对象的诸多属性，例如我们打印lena图的属性，具体如下：</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006195435156.jpg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<pre><code class=\"python\"> # -*- coding: utf-8 -*- \nimport numpy as np\nimport cv2\n\n# 导入一张图像 模式为彩色图片\nimg = cv2.imread(&#39;lena.jpg&#39;, cv2.IMREAD_COLOR)\n\nprint(&quot;================打印图像的属性================&quot;)\nprint(&quot;图像对象的类型 {}&quot;.format(type(img)))\nprint(img.shape)\nprint(&quot;图像宽度: {} pixels&quot;.format(img.shape[1]))\nprint(&quot;图像高度: {} pixels&quot;.format(img.shape[0]))\nprint(&quot;通道: {}&quot;.format(img.shape[2]))\nprint(&quot;图像分辨率: {}&quot;.format(img.size))\nprint(&quot;数据类型: {}&quot;.format(img.dtype))</code></pre>\n<p><strong>输出结果</strong>：</p>\n<pre><code class=\"python\">================打印图像的属性================\n图像对象的类型 &lt;class &#39;numpy.ndarray&#39;&gt;\n(256, 256, 3)\n图像宽度: 256 pixels\n图像高度: 256 pixels\n通道: 3\n图像分辨率: 196608\n数据类型: uint8</code></pre>\n<p>有时候我们也可以偷懒，如果我们想创建与另外一个图像尺寸相同的画布的时候，我们可以使用<code>np.zeros_like</code></p>\n<pre><code class=\"python\">canvas_black = np.zeros_like(img)</code></pre>\n<h1 id=\"创建空白画布\"><a href=\"#创建空白画布\" class=\"headerlink\" title=\"创建空白画布\"></a>创建空白画布</h1><p><strong>创建空白画布的函数</strong>如下：</p>\n<pre><code class=\"python\">def InitCanvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    canvas[:] = color\n    return canvas</code></pre>\n<p>调用的时候传入图像的宽度、高度和画布的颜色。例如创建一个800*600 颜色为纯黑色的画布：</p>\n<pre><code class=\"python\">canvas = InitCanvas(800, 600, color=(255,255,255))</code></pre>\n<p><strong>创建空白画布的完整代码</strong>如下：</p>\n<pre><code class=\"python\">&#39;&#39;&#39;\n初始化画布\n&#39;&#39;&#39;\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow(&#39;canvas&#39;, canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()</code></pre>\n<p><strong>效果展示：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006193553314.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"初始化白色的画布\"><a href=\"#初始化白色的画布\" class=\"headerlink\" title=\"初始化白色的画布\"></a>初始化白色的画布</h1><p>白色的画布， 因为比较简单，而且三个通道的值都相同。</p>\n<blockquote>\n<p>ps: 其实灰色的图片(GRAY2BGR)，三个通道的值都相同。</p>\n</blockquote>\n<p>那么我们创建一个全都是1的矩阵，然后乘上某个数值，问题是不是就解决了。</p>\n<p>我们需要用到<code>np.ones</code> 函数</p>\n<pre><code class=\"python\"># 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=&quot;uint8&quot;)</code></pre>\n<p>接下来, 需要乘上一个整数，255 (你可以填入0-255的任意值)</p>\n<pre><code class=\"python\">canvas_white *= 255</code></pre>\n<p>这种运算称之为 <code>全局乘法</code> 。</p>\n<p><strong>具体代码如下：</strong></p>\n<pre><code class=\"python\">import cv2\nimport numpy as np\ncanvas_white = np.ones((300, 300, 3), dtype=&quot;uint8&quot;)\ncanvas_white *= 255\ncv2.imshow(&#39;canvas&#39;, canvas_white)\ncv2.waitKey(0)\ncv2.destroyAllWindows()</code></pre>\n<p><strong>创建的白色画布如下</strong>：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006200648233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"初始化彩色的画布\"><a href=\"#初始化彩色的画布\" class=\"headerlink\" title=\"初始化彩色的画布\"></a>初始化彩色的画布</h1><h2 id=\"利用cv2的内置方法merge与split\"><a href=\"#利用cv2的内置方法merge与split\" class=\"headerlink\" title=\"利用cv2的内置方法merge与split\"></a>利用cv2的内置方法merge与split</h2><p>我们初始化<code>BGR</code>的图片<code>canvas_white</code> 之后将原来的图片进行通道分离，之后分别乘上<code>BGR</code>三个通道的整数值，然后将三个通道合并在一起，就得到我们想要的彩图纯色背景。</p>\n<p>那通道的分离我们需要用到的函数是<code>cv2.split(img)</code>.</p>\n<pre><code class=\"python\"># 将原来的三个通道抽离出来， 分别乘上各个通道的值\n(channel_b, channel_g, channel_r) = cv2.split(canvas)</code></pre>\n<p><strong>channel_b 蓝色通道</strong>，<strong>channel_g 绿色通道</strong>，<strong>channel_r 红色通道</strong>，都是二维的ndarray对象。</p>\n<p>我们指定一种颜色，例如 <code>color = (100, 20, 50))</code></p>\n<blockquote>\n<p>注意：我们这里的<strong>颜色指的BGR格式</strong></p>\n<p>也就是</p>\n<p>B -&gt; 100<br>G -&gt; 20<br>R -&gt; 50</p>\n</blockquote>\n<p>接下来我们分别将其乘上对应的值.</p>\n<pre><code class=\"python\"># 颜色的值与个通道的全1矩阵相乘\nchannel_b *= color[0]\nchannel_g *= color[1]\nchannel_r *= color[2]</code></pre>\n<p>接下来我们将三个通道重新合并，需要用到的函数是<code>cv2.merge</code></p>\n<pre><code class=\"python\">cv2.merge([channel_b, channel_g, channel_r])</code></pre>\n<blockquote>\n<p>注意：三个通道的矩阵以<code>list []</code> 的方式传入<code>merge</code>函数.</p>\n</blockquote>\n<p>综合起来，就是我们的第一个<strong>初始化彩色背景的函数</strong>：</p>\n<pre><code class=\"python\"># 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])</code></pre>\n<p><strong>具体实现代码如下：</strong></p>\n<pre><code class=\"python\">&#39;&#39;&#39;\n初始化画布\n&#39;&#39;&#39;\nimport cv2\nimport numpy as np\n\n# 初始化一个彩色的画布 - cv2版本\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow(&#39;canvas&#39;, canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()</code></pre>\n<p><strong>运行效果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204105226.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>注意：此函数使用 <code>cv2.split</code> 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。</p>\n</blockquote>\n<h2 id=\"利用numpy内置的索引\"><a href=\"#利用numpy内置的索引\" class=\"headerlink\" title=\"利用numpy内置的索引\"></a>利用numpy内置的索引</h2><p>使用numpy原生的方法， 性能会比opencv中的要好。我们直接使用<code>numpy的ndarray的索引</code>的方法。</p>\n<p>例如 <code>canvas[:,:,0]</code> 选中的是所有行，所有列，像素元素的第一个值，也就是，所有B通道的值。</p>\n<p>然后对其进行赋值：</p>\n<pre><code class=\"python\">canvas[:,:,0] = color[0]</code></pre>\n<p>完整版本的函数如下，B/G/R通道分别进行赋值：</p>\n<pre><code class=\"python\">def init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas</code></pre>\n<p><strong>具体实现代码如下：</strong></p>\n<pre><code class=\"python\">&#39;&#39;&#39;\n初始化画布\n&#39;&#39;&#39;\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 100, 255))\n\ncv2.imshow(&#39;canvas&#39;, canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()</code></pre>\n<p><strong>运行实现的效果和第一种方法一样：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204652418.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>实际上我们还有更快的方法, 可以实现这个功能, 这就需要你熟练掌握Numpy的使用技巧.</p>\n<p>我们可以直接赋值color</p>\n<pre><code class=\"python\">canvas[:] = color</code></pre>\n<p><strong>完整实现过程如下：</strong></p>\n<pre><code class=\"python\">&#39;&#39;&#39;\n初始化画布\n&#39;&#39;&#39;\nimport cv2\nimport numpy as np\n\ndef init_canvas(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    canvas[:] = color\n    return canvas\n\ncanvas = init_canvas(200, 200, color=(125, 40, 255))\n\ncv2.imshow(&#39;canvas&#39;, canvas)\ncv2.waitKey(0)\n\ncv2.destroyAllWindows()</code></pre>\n<p><strong>运行的效果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006204920615.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"综合实验-初始化背景\"><a href=\"#综合实验-初始化背景\" class=\"headerlink\" title=\"综合实验-初始化背景\"></a>综合实验-初始化背景</h1><p>在这个综合实验里会分别用上述的方法，创建黑色背景，白色背景，彩色背景。</p>\n<p><strong>具体代码如下：</strong></p>\n<pre><code class=\"python\">&#39;&#39;&#39;\n初始化一个空白的画布\n并指定画布的颜色\n&#39;&#39;&#39;\n\nimport cv2\nimport numpy as np\n\n# 初始化一个空画布 300×300 三通道 背景色为黑色 \ncanvas_black = np.zeros((300, 300, 3), dtype=&quot;uint8&quot;)\ncv2.imshow(&quot;canvas_black&quot;, canvas_black)\n\n# 初始化一个空画布 300×300 三通道 背景色为白色 \ncanvas_white = np.ones((300, 300, 3), dtype=&quot;uint8&quot;)\ncanvas_white *= 255\n\ncv2.imshow(&quot;canvas_white&quot;, canvas_white)\n\n&#39;&#39;&#39;\n初始化一个彩色的画布 - cv2版本\n此函数使用 cv2.split 非常耗时 所以只有在需要的时候才能做到。 否则用Numpy索引。\n\n&#39;&#39;&#39;\ndef InitCanvasV1(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n\n    # 将原来的三个通道抽离出来， 分别乘上各个通道的值\n    (channel_b, channel_g, channel_r) = cv2.split(canvas)\n    # 颜色的值与个通道的全1矩阵相乘\n    channel_b *= color[0]\n    channel_g *= color[1]\n    channel_r *= color[2]\n\n    # cv.merge 合并三个通道的值\n    return cv2.merge([channel_b, channel_g, channel_r])\n\n&#39;&#39;&#39;\n初始化一个彩色的画布 - numpy版本\n使用numpy的索引　赋值\n&#39;&#39;&#39;\ndef InitCanvasV2(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    # Blue \n    canvas[:,:,0] = color[0]\n    # Green\n    canvas[:,:,1] = color[1]\n    # Red\n    canvas[:,:,2] = color[2]\n\n    return canvas\n\n&#39;&#39;&#39;\n初始化终极版本\n\n熟练掌握 numpy 才可以提高工作效率哦\n&#39;&#39;&#39;\ndef InitCanvasV3(width, height, color=(255, 255, 255)):\n    canvas = np.ones((height, width, 3), dtype=&quot;uint8&quot;)\n    canvas[:] = color\n    return canvas\n\n# 初始化一个彩色的画布\ncanvas_color = InitCanvasV2(300, 300, color=(100, 20, 50))\ncv2.imshow(&quot;canvas_color&quot;, canvas_color)\n\n# 等待e键按下 关闭所有窗口\nwhile cv2.waitKey(0) != ord(&#39;e&#39;):\n    continue\ncv2.destroyAllWindows()\n</code></pre>\n<p><strong>运行结果：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20201006205102788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li>关注【<strong>做一个柔情的程序猿</strong>】公众号</li>\n<li>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n</ul>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1><ol>\n<li><strong>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</strong></li>\n<li><strong>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。</strong></li>\n</ol>\n"},{"title":"Python实现树莓派摄像头持续录像并传送到主机","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-03T07:40:22.000Z","password":null,"summary":"关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为Raspberry Pi，此博文教你如何利用Python实现树莓派摄像头持续录像并传送到主机。","_content":"\n关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为`Raspberry Pi`，也就是它的英文读法，树莓派诞生于英国，由“Raspberry Pi 基金会”这个慈善组织注册开发。埃•厄普顿就是该项目的头目。在2012年的3月，英国剑桥大学埃本•阿普顿（Eben Epton）正式发售世界上最小的台式机，又称卡片式电脑，外形只有信用卡大小，却具有电脑的所有基本功能，这就是Raspberry Pi电脑板，中文译名”树莓派”！\n\n树莓派作为一个轻便迷你的小终端很受大众的喜爱！！！\n![树莓派](https://img-blog.csdnimg.cn/20200330190903552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 树莓派的特点\n\n与常见的51单片机和STM32等这类的嵌入式微控制器相比，不仅可以完成相同的IO引脚控制之外，还能运行有相应的操作系统，可以完成更复杂的任务管理与调度，能够支持更上层应用的开发，为了开发者提供了更广阔的应用空间。比如开发语言的选择不仅仅只限于C语言，连接底层硬件与上层应用，可以实现物联网的云控制和云管理，也可以忽略树莓派的IO控制，使用树莓派搭建小型的网络服务器，做一些小型的测试开发和服务。\n\n与一般的PC计算机平台相比，树莓派可以提供的IO引脚，能够直接控制其他底层硬件的功能，这是一般PC计算机做不到的，当然，树莓派体积小，成本低，照常可以完成一些PC任务与应用。\n\n树莓派自带的摄像头拍摄夜空是有先例的，起码可以做到延时摄影。对于实时拍摄没有研究，但是仍然有必要测试。\n树莓派自带的摄像头是500万像素，价格在26-29欧元（人民币200+左右）\n\n# 实时还是事后采集记录结果？\n树莓派上的摄像机，是使用一个`raspivid`命令操作的。 抛开这个命令的其他参数，其**输出数据有2种方式**：\n\n - 将数据保存成文件，储存在SD卡上，以便事后读取;\n - 将数据按照字节流的形式，直接输出到STDOUT标准输出中，可以实时获取。\n\n选择哪种方式，首先要考虑我们能否具有足够的采集数据的能力。\n\n`raspivid`命令可以调节相机模块的输出比特率。输出是以`H264`编码输出的，比特率一般默认是17Mbps，但是这个数字可以调小。 如果按照17Mbps算，就是一秒钟2.12兆字节。 我们记录数据或者获取数据的速度不能低于这个值，否则长时间录像可能造成树莓派的缓存充满，导致树莓派崩溃。\n\n树莓派的网卡是使用了其USB总线，传送速度是100Mb/s或者12.5MB/s。 实际上后文的实验表明，目前能达到的传送速度只有**3MB/s（TCP）** 或者 **6MB/s（UDP）**。\n\n如果使用SD卡存储，这个记录速度也是可以达到的，但是，SD卡有写入寿命，这是要考虑的。 例如，对于32GB的卡，即使我们能利用全部存储空间，以2MB/s的速度录像，也只能记录4.55小时。\n\n# 如何通过网络实时传送数据？\n`raspivid`命令的`-o`选项，就是用来指定输出文件的。 在`Linux`系统中，输出到文件并不等于写入到磁盘（这里是SD卡）。 我们仍然可能使用`RAMDisk`这种技术，让输出只是暂时存储在内存中，并稍后读取，然后删除之。 但是，树莓派的可用内存可能只有280MB，这最多只能记录差不多2分钟的视频。\n\n如果我们有文件形式的摄像记录，那么就似乎可以使用文件传输的协议，例如`sftp, scp`等等登录到树莓派下载文件了。 然而这是不对的。这些协议在传输中使用了加密。\n\n树莓派在向我们的电脑进行数据传送的时候，如果用这些协议，就必须先对发送的数据进行加密。 在互联网上，加密是很好的设计。但是在树莓派和电脑之间只用一根网线连接的时候，就不是了。 树莓派的运算能力是很有限的，使用加密只会让传送速度变慢，所以，不要使用加密！\n\n我们使用最原始而简单的方法：**使用netcat命令**，在笔记本电脑这一端监听数据输入。 在树莓派这一端，我们让raspivid获取一定周期（比如10分钟，也许可以更长）的录像， 将结果设定为直接输出，然后利用Linux的管道机制，直接送进netcat发送。\n\n# 配置由树莓派和笔记本构成的网络\n树莓派和笔记本电脑之间的连接，使用普通网线即可， 因为笔记本和树莓派上的网卡都能自动适应网线，设定正确的模式（正常来说要使用交叉网线）。\n\n重要的一步是，笔记本电脑和树莓派连接后构成的网络中，需要手动为两个设备设定IP地址。 对于笔记本电脑的设定，就比较简单了。 我们将笔记本电脑和树莓派相连的网卡上，将电脑的**IP地址设定为`xxx.xxx.x.xxx`，子网掩码为`255.255.255.0`，网关不要填**。\n\n配置树莓派的方法是，先将树莓派断电，然后取出所用的SD卡，用读卡器插回电脑。 在SD卡的`boot分区`中，有个`cmdline.txt`，这是树莓派开机时所用到的一些参数。\n\n打开这个文件，会发现里面只有一行。这一行中用空格分开了很多设定参数。 我们在这一行的结尾，不添加空行，直接加上空格，然后写上：`ip=xxx.xxx.x.xxx`\n\n当然如果这一行里面已经有了ip=的参数，应该直接修改它。\n\n这样的结果就是，树莓派开机之后，会自己选择这个IP地址作为自己的地址。 \n\n# 实现在笔记本上监听输入\n`netcat命令`，在每收到一个文件的`EOF`（End Of File，表明文件已经到结尾），就会退出。 我们为了让接收能够连续进行，需要用脚本连续运行这个命令。 这样就会为每个新接收到的视频，在笔记本电脑这一端建立一个文件用来存储。\n\n```python\n# -*- coding: utf-8 -*-\n\nimport os\nimport signal\nimport subprocess\nimport sys\nimport uuid\n\n# 获取程序运行的本地目录，和用来存储接收结果的recv文件夹目录\n\nBASEPATH = os.path.realpath(os.path.dirname(sys.argv[0]))\nRECV = os.path.join(BASEPATH, 'recv')\n\n# 如果接收目录不存在，就自动新建\n\nprint \" *** Received files are put into: %s\" % RECV\nif not os.path.isdir(RECV):\n    os.system('mkdir -p %s' % RECV)\n\n# 下面的部分用来记录正在等待接收的文件。这个文件会以一个UUID.tmp的格式命名。\n# 在接收成功后，就会被重命名为UUID。（UUID是一个特定格式的唯一字符串，不会重复）。\n# 如果在接收过程中按下Ctrl+C，就会发送一个终止命令给程序，这样程序会退出，\n# 并删除没有接收完整的那个文件。\n\nworking = False\nfullname = False\n\ndef sigint_handler(signum, frame):\n    global fullname, working\n    print \"\\n\"\n    print \" *** SIGINT detected. End the program.\"\n    if working and fullname != False:\n        print \" *** Unfinished recording deleted.\"\n        os.system('rm -f %s.tmp' % fullname)\n    exit()\nsignal.signal(signal.SIGINT, sigint_handler)\n\n# 使用一个死循环来不断运行netcat(nc)命令。\n\nn = 1\nwhile True:\n    recname = str(uuid.uuid1())\n    print \" [%8d] Listening for file [%s]. Use Ctrl+C to stop this script.\" % (n, recname)\n    fullname = os.path.join(RECV, recname)\n\n    working = True # 标记接收开始\n    # 使用 nc -lp 10401 命令接收数据，表明端口为10401。\n    subprocess.call('nc -lp 10401 > %s.tmp' % fullname, shell=True)\n    os.system('mv %s.tmp %s' % (fullname, fullname))\n    working = False # 标记接收完毕\n\n    n += 1\n```\n上文所述的脚本，在笔记本上运行之后，就会在本地开启10401端口，等待树莓派上传送的文件。 传送的会直接写入一个由UUID（全局唯一ID）标识的文件中，可以供以后处理。\n\n# 在树莓派上摄像并发送摄像结果\n在树莓派上命令拍摄的方法是：\n\n```powershell\n$ raspivid -o - -b 16000000 -t 100000 | nc xxx.xxx.x.xxx 10401\n```\n\n**这条指令的意义如下**：\n\n - -o -，使用-o设定输出，-表示直接输出到标准输出中，不写入文件。\n - -b 16000000，设定输出比特率为16000000 bit/s。这大约是2兆字节每秒。\n - -t 100000，设定录像时间为100000毫秒，亦即100秒。\n - | nc xxx.xxx.x.xxx 10401，使用管道|将结果导入到nc中，nc是发送模式，目标是xxx.xxx.x.xxx计算机上的10401端口。\n","source":"_posts/Raspberry-Pi-camera.md","raw":"---\ntitle: Python实现树莓派摄像头持续录像并传送到主机\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-03 15:40:22\npassword:\nsummary: 关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为Raspberry Pi，此博文教你如何利用Python实现树莓派摄像头持续录像并传送到主机。\ntags: \n- python\n- Raspberry Pi\n- 网络\ncategories: \n- python\n---\n\n关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为`Raspberry Pi`，也就是它的英文读法，树莓派诞生于英国，由“Raspberry Pi 基金会”这个慈善组织注册开发。埃•厄普顿就是该项目的头目。在2012年的3月，英国剑桥大学埃本•阿普顿（Eben Epton）正式发售世界上最小的台式机，又称卡片式电脑，外形只有信用卡大小，却具有电脑的所有基本功能，这就是Raspberry Pi电脑板，中文译名”树莓派”！\n\n树莓派作为一个轻便迷你的小终端很受大众的喜爱！！！\n![树莓派](https://img-blog.csdnimg.cn/20200330190903552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 树莓派的特点\n\n与常见的51单片机和STM32等这类的嵌入式微控制器相比，不仅可以完成相同的IO引脚控制之外，还能运行有相应的操作系统，可以完成更复杂的任务管理与调度，能够支持更上层应用的开发，为了开发者提供了更广阔的应用空间。比如开发语言的选择不仅仅只限于C语言，连接底层硬件与上层应用，可以实现物联网的云控制和云管理，也可以忽略树莓派的IO控制，使用树莓派搭建小型的网络服务器，做一些小型的测试开发和服务。\n\n与一般的PC计算机平台相比，树莓派可以提供的IO引脚，能够直接控制其他底层硬件的功能，这是一般PC计算机做不到的，当然，树莓派体积小，成本低，照常可以完成一些PC任务与应用。\n\n树莓派自带的摄像头拍摄夜空是有先例的，起码可以做到延时摄影。对于实时拍摄没有研究，但是仍然有必要测试。\n树莓派自带的摄像头是500万像素，价格在26-29欧元（人民币200+左右）\n\n# 实时还是事后采集记录结果？\n树莓派上的摄像机，是使用一个`raspivid`命令操作的。 抛开这个命令的其他参数，其**输出数据有2种方式**：\n\n - 将数据保存成文件，储存在SD卡上，以便事后读取;\n - 将数据按照字节流的形式，直接输出到STDOUT标准输出中，可以实时获取。\n\n选择哪种方式，首先要考虑我们能否具有足够的采集数据的能力。\n\n`raspivid`命令可以调节相机模块的输出比特率。输出是以`H264`编码输出的，比特率一般默认是17Mbps，但是这个数字可以调小。 如果按照17Mbps算，就是一秒钟2.12兆字节。 我们记录数据或者获取数据的速度不能低于这个值，否则长时间录像可能造成树莓派的缓存充满，导致树莓派崩溃。\n\n树莓派的网卡是使用了其USB总线，传送速度是100Mb/s或者12.5MB/s。 实际上后文的实验表明，目前能达到的传送速度只有**3MB/s（TCP）** 或者 **6MB/s（UDP）**。\n\n如果使用SD卡存储，这个记录速度也是可以达到的，但是，SD卡有写入寿命，这是要考虑的。 例如，对于32GB的卡，即使我们能利用全部存储空间，以2MB/s的速度录像，也只能记录4.55小时。\n\n# 如何通过网络实时传送数据？\n`raspivid`命令的`-o`选项，就是用来指定输出文件的。 在`Linux`系统中，输出到文件并不等于写入到磁盘（这里是SD卡）。 我们仍然可能使用`RAMDisk`这种技术，让输出只是暂时存储在内存中，并稍后读取，然后删除之。 但是，树莓派的可用内存可能只有280MB，这最多只能记录差不多2分钟的视频。\n\n如果我们有文件形式的摄像记录，那么就似乎可以使用文件传输的协议，例如`sftp, scp`等等登录到树莓派下载文件了。 然而这是不对的。这些协议在传输中使用了加密。\n\n树莓派在向我们的电脑进行数据传送的时候，如果用这些协议，就必须先对发送的数据进行加密。 在互联网上，加密是很好的设计。但是在树莓派和电脑之间只用一根网线连接的时候，就不是了。 树莓派的运算能力是很有限的，使用加密只会让传送速度变慢，所以，不要使用加密！\n\n我们使用最原始而简单的方法：**使用netcat命令**，在笔记本电脑这一端监听数据输入。 在树莓派这一端，我们让raspivid获取一定周期（比如10分钟，也许可以更长）的录像， 将结果设定为直接输出，然后利用Linux的管道机制，直接送进netcat发送。\n\n# 配置由树莓派和笔记本构成的网络\n树莓派和笔记本电脑之间的连接，使用普通网线即可， 因为笔记本和树莓派上的网卡都能自动适应网线，设定正确的模式（正常来说要使用交叉网线）。\n\n重要的一步是，笔记本电脑和树莓派连接后构成的网络中，需要手动为两个设备设定IP地址。 对于笔记本电脑的设定，就比较简单了。 我们将笔记本电脑和树莓派相连的网卡上，将电脑的**IP地址设定为`xxx.xxx.x.xxx`，子网掩码为`255.255.255.0`，网关不要填**。\n\n配置树莓派的方法是，先将树莓派断电，然后取出所用的SD卡，用读卡器插回电脑。 在SD卡的`boot分区`中，有个`cmdline.txt`，这是树莓派开机时所用到的一些参数。\n\n打开这个文件，会发现里面只有一行。这一行中用空格分开了很多设定参数。 我们在这一行的结尾，不添加空行，直接加上空格，然后写上：`ip=xxx.xxx.x.xxx`\n\n当然如果这一行里面已经有了ip=的参数，应该直接修改它。\n\n这样的结果就是，树莓派开机之后，会自己选择这个IP地址作为自己的地址。 \n\n# 实现在笔记本上监听输入\n`netcat命令`，在每收到一个文件的`EOF`（End Of File，表明文件已经到结尾），就会退出。 我们为了让接收能够连续进行，需要用脚本连续运行这个命令。 这样就会为每个新接收到的视频，在笔记本电脑这一端建立一个文件用来存储。\n\n```python\n# -*- coding: utf-8 -*-\n\nimport os\nimport signal\nimport subprocess\nimport sys\nimport uuid\n\n# 获取程序运行的本地目录，和用来存储接收结果的recv文件夹目录\n\nBASEPATH = os.path.realpath(os.path.dirname(sys.argv[0]))\nRECV = os.path.join(BASEPATH, 'recv')\n\n# 如果接收目录不存在，就自动新建\n\nprint \" *** Received files are put into: %s\" % RECV\nif not os.path.isdir(RECV):\n    os.system('mkdir -p %s' % RECV)\n\n# 下面的部分用来记录正在等待接收的文件。这个文件会以一个UUID.tmp的格式命名。\n# 在接收成功后，就会被重命名为UUID。（UUID是一个特定格式的唯一字符串，不会重复）。\n# 如果在接收过程中按下Ctrl+C，就会发送一个终止命令给程序，这样程序会退出，\n# 并删除没有接收完整的那个文件。\n\nworking = False\nfullname = False\n\ndef sigint_handler(signum, frame):\n    global fullname, working\n    print \"\\n\"\n    print \" *** SIGINT detected. End the program.\"\n    if working and fullname != False:\n        print \" *** Unfinished recording deleted.\"\n        os.system('rm -f %s.tmp' % fullname)\n    exit()\nsignal.signal(signal.SIGINT, sigint_handler)\n\n# 使用一个死循环来不断运行netcat(nc)命令。\n\nn = 1\nwhile True:\n    recname = str(uuid.uuid1())\n    print \" [%8d] Listening for file [%s]. Use Ctrl+C to stop this script.\" % (n, recname)\n    fullname = os.path.join(RECV, recname)\n\n    working = True # 标记接收开始\n    # 使用 nc -lp 10401 命令接收数据，表明端口为10401。\n    subprocess.call('nc -lp 10401 > %s.tmp' % fullname, shell=True)\n    os.system('mv %s.tmp %s' % (fullname, fullname))\n    working = False # 标记接收完毕\n\n    n += 1\n```\n上文所述的脚本，在笔记本上运行之后，就会在本地开启10401端口，等待树莓派上传送的文件。 传送的会直接写入一个由UUID（全局唯一ID）标识的文件中，可以供以后处理。\n\n# 在树莓派上摄像并发送摄像结果\n在树莓派上命令拍摄的方法是：\n\n```powershell\n$ raspivid -o - -b 16000000 -t 100000 | nc xxx.xxx.x.xxx 10401\n```\n\n**这条指令的意义如下**：\n\n - -o -，使用-o设定输出，-表示直接输出到标准输出中，不写入文件。\n - -b 16000000，设定输出比特率为16000000 bit/s。这大约是2兆字节每秒。\n - -t 100000，设定录像时间为100000毫秒，亦即100秒。\n - | nc xxx.xxx.x.xxx 10401，使用管道|将结果导入到nc中，nc是发送模式，目标是xxx.xxx.x.xxx计算机上的10401端口。\n","slug":"Raspberry-Pi-camera","published":1,"updated":"2020-12-03T07:47:09.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsn000bksvblc2xtr64","content":"<p>关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为<code>Raspberry Pi</code>，也就是它的英文读法，树莓派诞生于英国，由“Raspberry Pi 基金会”这个慈善组织注册开发。埃•厄普顿就是该项目的头目。在2012年的3月，英国剑桥大学埃本•阿普顿（Eben Epton）正式发售世界上最小的台式机，又称卡片式电脑，外形只有信用卡大小，却具有电脑的所有基本功能，这就是Raspberry Pi电脑板，中文译名”树莓派”！</p>\n<p>树莓派作为一个轻便迷你的小终端很受大众的喜爱！！！<br><img src=\"https://img-blog.csdnimg.cn/20200330190903552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"树莓派\"></p>\n<h1 id=\"树莓派的特点\"><a href=\"#树莓派的特点\" class=\"headerlink\" title=\"树莓派的特点\"></a>树莓派的特点</h1><p>与常见的51单片机和STM32等这类的嵌入式微控制器相比，不仅可以完成相同的IO引脚控制之外，还能运行有相应的操作系统，可以完成更复杂的任务管理与调度，能够支持更上层应用的开发，为了开发者提供了更广阔的应用空间。比如开发语言的选择不仅仅只限于C语言，连接底层硬件与上层应用，可以实现物联网的云控制和云管理，也可以忽略树莓派的IO控制，使用树莓派搭建小型的网络服务器，做一些小型的测试开发和服务。</p>\n<p>与一般的PC计算机平台相比，树莓派可以提供的IO引脚，能够直接控制其他底层硬件的功能，这是一般PC计算机做不到的，当然，树莓派体积小，成本低，照常可以完成一些PC任务与应用。</p>\n<p>树莓派自带的摄像头拍摄夜空是有先例的，起码可以做到延时摄影。对于实时拍摄没有研究，但是仍然有必要测试。<br>树莓派自带的摄像头是500万像素，价格在26-29欧元（人民币200+左右）</p>\n<h1 id=\"实时还是事后采集记录结果？\"><a href=\"#实时还是事后采集记录结果？\" class=\"headerlink\" title=\"实时还是事后采集记录结果？\"></a>实时还是事后采集记录结果？</h1><p>树莓派上的摄像机，是使用一个<code>raspivid</code>命令操作的。 抛开这个命令的其他参数，其<strong>输出数据有2种方式</strong>：</p>\n<ul>\n<li>将数据保存成文件，储存在SD卡上，以便事后读取;</li>\n<li>将数据按照字节流的形式，直接输出到STDOUT标准输出中，可以实时获取。</li>\n</ul>\n<p>选择哪种方式，首先要考虑我们能否具有足够的采集数据的能力。</p>\n<p><code>raspivid</code>命令可以调节相机模块的输出比特率。输出是以<code>H264</code>编码输出的，比特率一般默认是17Mbps，但是这个数字可以调小。 如果按照17Mbps算，就是一秒钟2.12兆字节。 我们记录数据或者获取数据的速度不能低于这个值，否则长时间录像可能造成树莓派的缓存充满，导致树莓派崩溃。</p>\n<p>树莓派的网卡是使用了其USB总线，传送速度是100Mb/s或者12.5MB/s。 实际上后文的实验表明，目前能达到的传送速度只有<strong>3MB/s（TCP）</strong> 或者 <strong>6MB/s（UDP）</strong>。</p>\n<p>如果使用SD卡存储，这个记录速度也是可以达到的，但是，SD卡有写入寿命，这是要考虑的。 例如，对于32GB的卡，即使我们能利用全部存储空间，以2MB/s的速度录像，也只能记录4.55小时。</p>\n<h1 id=\"如何通过网络实时传送数据？\"><a href=\"#如何通过网络实时传送数据？\" class=\"headerlink\" title=\"如何通过网络实时传送数据？\"></a>如何通过网络实时传送数据？</h1><p><code>raspivid</code>命令的<code>-o</code>选项，就是用来指定输出文件的。 在<code>Linux</code>系统中，输出到文件并不等于写入到磁盘（这里是SD卡）。 我们仍然可能使用<code>RAMDisk</code>这种技术，让输出只是暂时存储在内存中，并稍后读取，然后删除之。 但是，树莓派的可用内存可能只有280MB，这最多只能记录差不多2分钟的视频。</p>\n<p>如果我们有文件形式的摄像记录，那么就似乎可以使用文件传输的协议，例如<code>sftp, scp</code>等等登录到树莓派下载文件了。 然而这是不对的。这些协议在传输中使用了加密。</p>\n<p>树莓派在向我们的电脑进行数据传送的时候，如果用这些协议，就必须先对发送的数据进行加密。 在互联网上，加密是很好的设计。但是在树莓派和电脑之间只用一根网线连接的时候，就不是了。 树莓派的运算能力是很有限的，使用加密只会让传送速度变慢，所以，不要使用加密！</p>\n<p>我们使用最原始而简单的方法：<strong>使用netcat命令</strong>，在笔记本电脑这一端监听数据输入。 在树莓派这一端，我们让raspivid获取一定周期（比如10分钟，也许可以更长）的录像， 将结果设定为直接输出，然后利用Linux的管道机制，直接送进netcat发送。</p>\n<h1 id=\"配置由树莓派和笔记本构成的网络\"><a href=\"#配置由树莓派和笔记本构成的网络\" class=\"headerlink\" title=\"配置由树莓派和笔记本构成的网络\"></a>配置由树莓派和笔记本构成的网络</h1><p>树莓派和笔记本电脑之间的连接，使用普通网线即可， 因为笔记本和树莓派上的网卡都能自动适应网线，设定正确的模式（正常来说要使用交叉网线）。</p>\n<p>重要的一步是，笔记本电脑和树莓派连接后构成的网络中，需要手动为两个设备设定IP地址。 对于笔记本电脑的设定，就比较简单了。 我们将笔记本电脑和树莓派相连的网卡上，将电脑的<strong>IP地址设定为<code>xxx.xxx.x.xxx</code>，子网掩码为<code>255.255.255.0</code>，网关不要填</strong>。</p>\n<p>配置树莓派的方法是，先将树莓派断电，然后取出所用的SD卡，用读卡器插回电脑。 在SD卡的<code>boot分区</code>中，有个<code>cmdline.txt</code>，这是树莓派开机时所用到的一些参数。</p>\n<p>打开这个文件，会发现里面只有一行。这一行中用空格分开了很多设定参数。 我们在这一行的结尾，不添加空行，直接加上空格，然后写上：<code>ip=xxx.xxx.x.xxx</code></p>\n<p>当然如果这一行里面已经有了ip=的参数，应该直接修改它。</p>\n<p>这样的结果就是，树莓派开机之后，会自己选择这个IP地址作为自己的地址。 </p>\n<h1 id=\"实现在笔记本上监听输入\"><a href=\"#实现在笔记本上监听输入\" class=\"headerlink\" title=\"实现在笔记本上监听输入\"></a>实现在笔记本上监听输入</h1><p><code>netcat命令</code>，在每收到一个文件的<code>EOF</code>（End Of File，表明文件已经到结尾），就会退出。 我们为了让接收能够连续进行，需要用脚本连续运行这个命令。 这样就会为每个新接收到的视频，在笔记本电脑这一端建立一个文件用来存储。</p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> signal\n<span class=\"token keyword\">import</span> subprocess\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> uuid\n\n<span class=\"token comment\" spellcheck=\"true\"># 获取程序运行的本地目录，和用来存储接收结果的recv文件夹目录</span>\n\nBASEPATH <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nRECV <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>BASEPATH<span class=\"token punctuation\">,</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 如果接收目录不存在，就自动新建</span>\n\n<span class=\"token keyword\">print</span> <span class=\"token string\">\" *** Received files are put into: %s\"</span> <span class=\"token operator\">%</span> RECV\n<span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>RECV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'mkdir -p %s'</span> <span class=\"token operator\">%</span> RECV<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 下面的部分用来记录正在等待接收的文件。这个文件会以一个UUID.tmp的格式命名。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 在接收成功后，就会被重命名为UUID。（UUID是一个特定格式的唯一字符串，不会重复）。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果在接收过程中按下Ctrl+C，就会发送一个终止命令给程序，这样程序会退出，</span>\n<span class=\"token comment\" spellcheck=\"true\"># 并删除没有接收完整的那个文件。</span>\n\nworking <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nfullname <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sigint_handler</span><span class=\"token punctuation\">(</span>signum<span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> fullname<span class=\"token punctuation\">,</span> working\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\"\\n\"</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\" *** SIGINT detected. End the program.\"</span>\n    <span class=\"token keyword\">if</span> working <span class=\"token operator\">and</span> fullname <span class=\"token operator\">!=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span> <span class=\"token string\">\" *** Unfinished recording deleted.\"</span>\n        os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'rm -f %s.tmp'</span> <span class=\"token operator\">%</span> fullname<span class=\"token punctuation\">)</span>\n    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsignal<span class=\"token punctuation\">.</span>signal<span class=\"token punctuation\">(</span>signal<span class=\"token punctuation\">.</span>SIGINT<span class=\"token punctuation\">,</span> sigint_handler<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\"># 使用一个死循环来不断运行netcat(nc)命令。</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    recname <span class=\"token operator\">=</span> str<span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span> <span class=\"token string\">\" [%8d] Listening for file [%s]. Use Ctrl+C to stop this script.\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> recname<span class=\"token punctuation\">)</span>\n    fullname <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>RECV<span class=\"token punctuation\">,</span> recname<span class=\"token punctuation\">)</span>\n\n    working <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\" spellcheck=\"true\"># 标记接收开始</span>\n    <span class=\"token comment\" spellcheck=\"true\"># 使用 nc -lp 10401 命令接收数据，表明端口为10401。</span>\n    subprocess<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token string\">'nc -lp 10401 > %s.tmp'</span> <span class=\"token operator\">%</span> fullname<span class=\"token punctuation\">,</span> shell<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">'mv %s.tmp %s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>fullname<span class=\"token punctuation\">,</span> fullname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    working <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span> <span class=\"token comment\" spellcheck=\"true\"># 标记接收完毕</span>\n\n    n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上文所述的脚本，在笔记本上运行之后，就会在本地开启10401端口，等待树莓派上传送的文件。 传送的会直接写入一个由UUID（全局唯一ID）标识的文件中，可以供以后处理。</p>\n<h1 id=\"在树莓派上摄像并发送摄像结果\"><a href=\"#在树莓派上摄像并发送摄像结果\" class=\"headerlink\" title=\"在树莓派上摄像并发送摄像结果\"></a>在树莓派上摄像并发送摄像结果</h1><p>在树莓派上命令拍摄的方法是：</p>\n<pre class=\"line-numbers language-powershell\"><code class=\"language-powershell\">$ raspivid <span class=\"token operator\">-</span>o <span class=\"token operator\">-</span> <span class=\"token operator\">-</span>b 16000000 <span class=\"token operator\">-</span>t 100000 <span class=\"token punctuation\">|</span> nc xxx<span class=\"token punctuation\">.</span>xxx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span>xxx 10401<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>这条指令的意义如下</strong>：</p>\n<ul>\n<li>-o -，使用-o设定输出，-表示直接输出到标准输出中，不写入文件。</li>\n<li>-b 16000000，设定输出比特率为16000000 bit/s。这大约是2兆字节每秒。</li>\n<li>-t 100000，设定录像时间为100000毫秒，亦即100秒。</li>\n<li>| nc xxx.xxx.x.xxx 10401，使用管道|将结果导入到nc中，nc是发送模式，目标是xxx.xxx.x.xxx计算机上的10401端口。</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<p>关于树莓派，想必从事嵌入式开发的开发者都有听过，树莓派原名为<code>Raspberry Pi</code>，也就是它的英文读法，树莓派诞生于英国，由“Raspberry Pi 基金会”这个慈善组织注册开发。埃•厄普顿就是该项目的头目。在2012年的3月，英国剑桥大学埃本•阿普顿（Eben Epton）正式发售世界上最小的台式机，又称卡片式电脑，外形只有信用卡大小，却具有电脑的所有基本功能，这就是Raspberry Pi电脑板，中文译名”树莓派”！</p>\n<p>树莓派作为一个轻便迷你的小终端很受大众的喜爱！！！<br><img src=\"https://img-blog.csdnimg.cn/20200330190903552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"树莓派\"></p>\n<h1 id=\"树莓派的特点\"><a href=\"#树莓派的特点\" class=\"headerlink\" title=\"树莓派的特点\"></a>树莓派的特点</h1><p>与常见的51单片机和STM32等这类的嵌入式微控制器相比，不仅可以完成相同的IO引脚控制之外，还能运行有相应的操作系统，可以完成更复杂的任务管理与调度，能够支持更上层应用的开发，为了开发者提供了更广阔的应用空间。比如开发语言的选择不仅仅只限于C语言，连接底层硬件与上层应用，可以实现物联网的云控制和云管理，也可以忽略树莓派的IO控制，使用树莓派搭建小型的网络服务器，做一些小型的测试开发和服务。</p>\n<p>与一般的PC计算机平台相比，树莓派可以提供的IO引脚，能够直接控制其他底层硬件的功能，这是一般PC计算机做不到的，当然，树莓派体积小，成本低，照常可以完成一些PC任务与应用。</p>\n<p>树莓派自带的摄像头拍摄夜空是有先例的，起码可以做到延时摄影。对于实时拍摄没有研究，但是仍然有必要测试。<br>树莓派自带的摄像头是500万像素，价格在26-29欧元（人民币200+左右）</p>\n<h1 id=\"实时还是事后采集记录结果？\"><a href=\"#实时还是事后采集记录结果？\" class=\"headerlink\" title=\"实时还是事后采集记录结果？\"></a>实时还是事后采集记录结果？</h1><p>树莓派上的摄像机，是使用一个<code>raspivid</code>命令操作的。 抛开这个命令的其他参数，其<strong>输出数据有2种方式</strong>：</p>\n<ul>\n<li>将数据保存成文件，储存在SD卡上，以便事后读取;</li>\n<li>将数据按照字节流的形式，直接输出到STDOUT标准输出中，可以实时获取。</li>\n</ul>\n<p>选择哪种方式，首先要考虑我们能否具有足够的采集数据的能力。</p>\n<p><code>raspivid</code>命令可以调节相机模块的输出比特率。输出是以<code>H264</code>编码输出的，比特率一般默认是17Mbps，但是这个数字可以调小。 如果按照17Mbps算，就是一秒钟2.12兆字节。 我们记录数据或者获取数据的速度不能低于这个值，否则长时间录像可能造成树莓派的缓存充满，导致树莓派崩溃。</p>\n<p>树莓派的网卡是使用了其USB总线，传送速度是100Mb/s或者12.5MB/s。 实际上后文的实验表明，目前能达到的传送速度只有<strong>3MB/s（TCP）</strong> 或者 <strong>6MB/s（UDP）</strong>。</p>\n<p>如果使用SD卡存储，这个记录速度也是可以达到的，但是，SD卡有写入寿命，这是要考虑的。 例如，对于32GB的卡，即使我们能利用全部存储空间，以2MB/s的速度录像，也只能记录4.55小时。</p>\n<h1 id=\"如何通过网络实时传送数据？\"><a href=\"#如何通过网络实时传送数据？\" class=\"headerlink\" title=\"如何通过网络实时传送数据？\"></a>如何通过网络实时传送数据？</h1><p><code>raspivid</code>命令的<code>-o</code>选项，就是用来指定输出文件的。 在<code>Linux</code>系统中，输出到文件并不等于写入到磁盘（这里是SD卡）。 我们仍然可能使用<code>RAMDisk</code>这种技术，让输出只是暂时存储在内存中，并稍后读取，然后删除之。 但是，树莓派的可用内存可能只有280MB，这最多只能记录差不多2分钟的视频。</p>\n<p>如果我们有文件形式的摄像记录，那么就似乎可以使用文件传输的协议，例如<code>sftp, scp</code>等等登录到树莓派下载文件了。 然而这是不对的。这些协议在传输中使用了加密。</p>\n<p>树莓派在向我们的电脑进行数据传送的时候，如果用这些协议，就必须先对发送的数据进行加密。 在互联网上，加密是很好的设计。但是在树莓派和电脑之间只用一根网线连接的时候，就不是了。 树莓派的运算能力是很有限的，使用加密只会让传送速度变慢，所以，不要使用加密！</p>\n<p>我们使用最原始而简单的方法：<strong>使用netcat命令</strong>，在笔记本电脑这一端监听数据输入。 在树莓派这一端，我们让raspivid获取一定周期（比如10分钟，也许可以更长）的录像， 将结果设定为直接输出，然后利用Linux的管道机制，直接送进netcat发送。</p>\n<h1 id=\"配置由树莓派和笔记本构成的网络\"><a href=\"#配置由树莓派和笔记本构成的网络\" class=\"headerlink\" title=\"配置由树莓派和笔记本构成的网络\"></a>配置由树莓派和笔记本构成的网络</h1><p>树莓派和笔记本电脑之间的连接，使用普通网线即可， 因为笔记本和树莓派上的网卡都能自动适应网线，设定正确的模式（正常来说要使用交叉网线）。</p>\n<p>重要的一步是，笔记本电脑和树莓派连接后构成的网络中，需要手动为两个设备设定IP地址。 对于笔记本电脑的设定，就比较简单了。 我们将笔记本电脑和树莓派相连的网卡上，将电脑的<strong>IP地址设定为<code>xxx.xxx.x.xxx</code>，子网掩码为<code>255.255.255.0</code>，网关不要填</strong>。</p>\n<p>配置树莓派的方法是，先将树莓派断电，然后取出所用的SD卡，用读卡器插回电脑。 在SD卡的<code>boot分区</code>中，有个<code>cmdline.txt</code>，这是树莓派开机时所用到的一些参数。</p>\n<p>打开这个文件，会发现里面只有一行。这一行中用空格分开了很多设定参数。 我们在这一行的结尾，不添加空行，直接加上空格，然后写上：<code>ip=xxx.xxx.x.xxx</code></p>\n<p>当然如果这一行里面已经有了ip=的参数，应该直接修改它。</p>\n<p>这样的结果就是，树莓派开机之后，会自己选择这个IP地址作为自己的地址。 </p>\n<h1 id=\"实现在笔记本上监听输入\"><a href=\"#实现在笔记本上监听输入\" class=\"headerlink\" title=\"实现在笔记本上监听输入\"></a>实现在笔记本上监听输入</h1><p><code>netcat命令</code>，在每收到一个文件的<code>EOF</code>（End Of File，表明文件已经到结尾），就会退出。 我们为了让接收能够连续进行，需要用脚本连续运行这个命令。 这样就会为每个新接收到的视频，在笔记本电脑这一端建立一个文件用来存储。</p>\n<pre><code class=\"python\"># -*- coding: utf-8 -*-\n\nimport os\nimport signal\nimport subprocess\nimport sys\nimport uuid\n\n# 获取程序运行的本地目录，和用来存储接收结果的recv文件夹目录\n\nBASEPATH = os.path.realpath(os.path.dirname(sys.argv[0]))\nRECV = os.path.join(BASEPATH, &#39;recv&#39;)\n\n# 如果接收目录不存在，就自动新建\n\nprint &quot; *** Received files are put into: %s&quot; % RECV\nif not os.path.isdir(RECV):\n    os.system(&#39;mkdir -p %s&#39; % RECV)\n\n# 下面的部分用来记录正在等待接收的文件。这个文件会以一个UUID.tmp的格式命名。\n# 在接收成功后，就会被重命名为UUID。（UUID是一个特定格式的唯一字符串，不会重复）。\n# 如果在接收过程中按下Ctrl+C，就会发送一个终止命令给程序，这样程序会退出，\n# 并删除没有接收完整的那个文件。\n\nworking = False\nfullname = False\n\ndef sigint_handler(signum, frame):\n    global fullname, working\n    print &quot;\\n&quot;\n    print &quot; *** SIGINT detected. End the program.&quot;\n    if working and fullname != False:\n        print &quot; *** Unfinished recording deleted.&quot;\n        os.system(&#39;rm -f %s.tmp&#39; % fullname)\n    exit()\nsignal.signal(signal.SIGINT, sigint_handler)\n\n# 使用一个死循环来不断运行netcat(nc)命令。\n\nn = 1\nwhile True:\n    recname = str(uuid.uuid1())\n    print &quot; [%8d] Listening for file [%s]. Use Ctrl+C to stop this script.&quot; % (n, recname)\n    fullname = os.path.join(RECV, recname)\n\n    working = True # 标记接收开始\n    # 使用 nc -lp 10401 命令接收数据，表明端口为10401。\n    subprocess.call(&#39;nc -lp 10401 &gt; %s.tmp&#39; % fullname, shell=True)\n    os.system(&#39;mv %s.tmp %s&#39; % (fullname, fullname))\n    working = False # 标记接收完毕\n\n    n += 1</code></pre>\n<p>上文所述的脚本，在笔记本上运行之后，就会在本地开启10401端口，等待树莓派上传送的文件。 传送的会直接写入一个由UUID（全局唯一ID）标识的文件中，可以供以后处理。</p>\n<h1 id=\"在树莓派上摄像并发送摄像结果\"><a href=\"#在树莓派上摄像并发送摄像结果\" class=\"headerlink\" title=\"在树莓派上摄像并发送摄像结果\"></a>在树莓派上摄像并发送摄像结果</h1><p>在树莓派上命令拍摄的方法是：</p>\n<pre><code class=\"powershell\">$ raspivid -o - -b 16000000 -t 100000 | nc xxx.xxx.x.xxx 10401</code></pre>\n<p><strong>这条指令的意义如下</strong>：</p>\n<ul>\n<li>-o -，使用-o设定输出，-表示直接输出到标准输出中，不写入文件。</li>\n<li>-b 16000000，设定输出比特率为16000000 bit/s。这大约是2兆字节每秒。</li>\n<li>-t 100000，设定录像时间为100000毫秒，亦即100秒。</li>\n<li>| nc xxx.xxx.x.xxx 10401，使用管道|将结果导入到nc中，nc是发送模式，目标是xxx.xxx.x.xxx计算机上的10401端口。</li>\n</ul>\n"},{"title":"Matlab串联矩阵函数【horzcat】详细解析","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-07T00:43:26.000Z","password":null,"summary":"本博客主要讲解如何利用Matlab中的串联矩阵函数【horzcat】对相应矩阵进行连接，以满足我们实际应用需求。","_content":"\n# 语法\n```bash\nC = horzcat(A,B)\nC = horzcat(A1,A2,…,An)\n```\n# 输入参数\n## A - 第一个输入\n标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表\n**第一个输入，指定为标量、向量、矩阵、多维数组、表或时间表。**\n\n## B - 第二个输入\n标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表\n**第二个输入，指定为标量、向量、矩阵、多维数组、表或时间表。**\n\nB 的元素沿第二个维度串联到第一个输入的末尾。输入参数的大小必须兼容。例如，如果第一个输入是大小为 3×2 的矩阵，则 B 必须有 3 行。\n\n所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。\n\n所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。\n\n## A1,A2,…,An - 输入列表\n逗号分隔的列表\n\n**输入的列表，指定为以逗号分隔的列表，列表元素将按其在列表中的顺序串联。**\n\n输入必须具有兼容的大小。例如，如果 A1 是长度为 m 的列向量，则其余输入必须各有 m 行才能水平串联。\n\n所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。\n\n所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。\n# 说明\n当 A 和 B 具有兼容的大小时（除第二个维度以外，其余维度的长度均需匹配），`C = horzcat(A,B)` 将 B 水平串联到 A 的末尾。\n\n`C = horzcat(A1,A2,…,An)` 水平串联 A1、A2、…、An。\n\nhorzcat 等效于使用方括号水平串联数组。例如，当 A 和 B 是兼容数组时，[A,B] 或 [A B] 等于 horzcat(A,B)。\n\n# 实例\n## 两个矩阵\n创建两个矩阵并水平串联它们 - 首先使用方括号表示法串联，然后使用 horzcat 串联。\n\n```bash\n>> A=magic(5);\n>> A(4:5,:)=[]\n\nA =\n\n    17    24     1     8    15\n    23     5     7    14    16\n     4     6    13    20    22\n\n>> B=magic(3)*100\n\nB =\n\n   800   100   600\n   300   500   700\n   400   900   200\n\n>> C=[A,B]\n\nC =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n>> D = horzcat(A,B)\n\nD =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n>> \n```\n## 两个表\n创建一个带有三行和两个变量的表 A。\n\n```bash\n>> A = table([5;6;5],['M';'M';'M'],...\n    'VariableNames',{'Age' 'Gender'},...\n    'RowNames',{'Thomas' 'Gordon' 'Percy'})\n    \nA=3×2 table\n              Age    Gender\n              ___    ______\n\n    Thomas     5       M   \n    Gordon     6       M   \n    Percy      5       M   \n```\n\n创建一个带有三行和三个变量的表 B。\n\n```bash\n>> B = table([45;41;40],[45;32;34],{'NY';'CA';'MA'},...\n    'VariableNames',{'Height' 'Weight' 'Birthplace'},...\n    'RowNames',{'Percy' 'Gordon' 'Thomas'})\n    \nB=3×3 table\n              Height    Weight    Birthplace\n              ______    ______    __________\n\n    Percy       45        45        {'NY'}  \n    Gordon      41        32        {'CA'}  \n    Thomas      40        34        {'MA'}  \n```\n\n然后水平串联 A 和 B。C 中的行顺序与 A 中的顺序相匹配。\n\n```bash\n>> C = horzcat(A,B)\n\nC=3×5 table\n              Age    Gender    Height    Weight    Birthplace\n              ___    ______    ______    ______    __________\n\n    Thomas     5       M         40        34        {'MA'}  \n    Gordon     6       M         41        32        {'CA'}  \n    Percy      5       M         45        45        {'NY'}  \n```\n## 具有不同类型的日期\n\n将日期字符向量、字符串日期和日期时间串联成一个日期行。结果是一个日期时间行向量。\n\n```bash\n>> chardate = '2020-03-24';\n>> strdate = \"2020-04-19\";\n>> t = datetime('2020-05-10','InputFormat','yyyy-MM-dd');\n>> C = horzcat(chardate,strdate,t)\n\nC = 1x3 datetime\n   24-Mar-2020   19-Apr-2020   10-May-2020\n```\n\n## 字符串数组\n\n将三个字符串数组串联成一个数组。\n\n```bash\n>> A1 = [\"str1\"; \"str2\"];\n>> A2 = [\"str3\"; \"str4\"];\n>> A3 = [\"str5\"; \"str6\"];\n>> C = horzcat(A1,A2,A3)\n\nC = 2x3 string\n    \"str1\"    \"str3\"    \"str5\"\n    \"str2\"    \"str4\"    \"str6\"\n```\n\n## 元胞数组中的矩阵\n\n创建一个包含两个矩阵的元胞数组。将元胞数组中的矩阵水平串联成一个矩阵。\n\n```bash\n>> M1 = [1 2; 3 4];\n>> M2 = [5 6 7; 8 9 10];\n>> A1 = {M1,M2};\n>> C = horzcat(A1{:})\n\nC = 2×5\n\n     1     2     5     6     7\n     3     4     8     9    10\n```\n# 提示\n要通过**水平串联字符串、字符向量或字符向量元胞数组来构造文本**，请使用 `strcat` 函数。\n\n要**从字符向量元胞数组或字符串数组构造一段带分隔符的文本**，请使用 `strjoin` 函数。\n\n\n# 资源传送门\n\n 1. 关注【==做一个柔情的程序猿==】公众号\n 2. 在【==做一个柔情的程序猿==】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n 3. \n# 「❤️ 感谢大家」\n 3. 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n 4. 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。","source":"_posts/The-series-matrix-function-horzcat.md","raw":"---\ntitle: Matlab串联矩阵函数【horzcat】详细解析\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-07 08:43:26\npassword:\nsummary: 本博客主要讲解如何利用Matlab中的串联矩阵函数【horzcat】对相应矩阵进行连接，以满足我们实际应用需求。\ntags: \n- matlab\n- 函数\ncategories: \n- matlab\n---\n\n# 语法\n```bash\nC = horzcat(A,B)\nC = horzcat(A1,A2,…,An)\n```\n# 输入参数\n## A - 第一个输入\n标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表\n**第一个输入，指定为标量、向量、矩阵、多维数组、表或时间表。**\n\n## B - 第二个输入\n标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表\n**第二个输入，指定为标量、向量、矩阵、多维数组、表或时间表。**\n\nB 的元素沿第二个维度串联到第一个输入的末尾。输入参数的大小必须兼容。例如，如果第一个输入是大小为 3×2 的矩阵，则 B 必须有 3 行。\n\n所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。\n\n所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。\n\n## A1,A2,…,An - 输入列表\n逗号分隔的列表\n\n**输入的列表，指定为以逗号分隔的列表，列表元素将按其在列表中的顺序串联。**\n\n输入必须具有兼容的大小。例如，如果 A1 是长度为 m 的列向量，则其余输入必须各有 m 行才能水平串联。\n\n所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。\n\n所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。\n# 说明\n当 A 和 B 具有兼容的大小时（除第二个维度以外，其余维度的长度均需匹配），`C = horzcat(A,B)` 将 B 水平串联到 A 的末尾。\n\n`C = horzcat(A1,A2,…,An)` 水平串联 A1、A2、…、An。\n\nhorzcat 等效于使用方括号水平串联数组。例如，当 A 和 B 是兼容数组时，[A,B] 或 [A B] 等于 horzcat(A,B)。\n\n# 实例\n## 两个矩阵\n创建两个矩阵并水平串联它们 - 首先使用方括号表示法串联，然后使用 horzcat 串联。\n\n```bash\n>> A=magic(5);\n>> A(4:5,:)=[]\n\nA =\n\n    17    24     1     8    15\n    23     5     7    14    16\n     4     6    13    20    22\n\n>> B=magic(3)*100\n\nB =\n\n   800   100   600\n   300   500   700\n   400   900   200\n\n>> C=[A,B]\n\nC =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n>> D = horzcat(A,B)\n\nD =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n>> \n```\n## 两个表\n创建一个带有三行和两个变量的表 A。\n\n```bash\n>> A = table([5;6;5],['M';'M';'M'],...\n    'VariableNames',{'Age' 'Gender'},...\n    'RowNames',{'Thomas' 'Gordon' 'Percy'})\n    \nA=3×2 table\n              Age    Gender\n              ___    ______\n\n    Thomas     5       M   \n    Gordon     6       M   \n    Percy      5       M   \n```\n\n创建一个带有三行和三个变量的表 B。\n\n```bash\n>> B = table([45;41;40],[45;32;34],{'NY';'CA';'MA'},...\n    'VariableNames',{'Height' 'Weight' 'Birthplace'},...\n    'RowNames',{'Percy' 'Gordon' 'Thomas'})\n    \nB=3×3 table\n              Height    Weight    Birthplace\n              ______    ______    __________\n\n    Percy       45        45        {'NY'}  \n    Gordon      41        32        {'CA'}  \n    Thomas      40        34        {'MA'}  \n```\n\n然后水平串联 A 和 B。C 中的行顺序与 A 中的顺序相匹配。\n\n```bash\n>> C = horzcat(A,B)\n\nC=3×5 table\n              Age    Gender    Height    Weight    Birthplace\n              ___    ______    ______    ______    __________\n\n    Thomas     5       M         40        34        {'MA'}  \n    Gordon     6       M         41        32        {'CA'}  \n    Percy      5       M         45        45        {'NY'}  \n```\n## 具有不同类型的日期\n\n将日期字符向量、字符串日期和日期时间串联成一个日期行。结果是一个日期时间行向量。\n\n```bash\n>> chardate = '2020-03-24';\n>> strdate = \"2020-04-19\";\n>> t = datetime('2020-05-10','InputFormat','yyyy-MM-dd');\n>> C = horzcat(chardate,strdate,t)\n\nC = 1x3 datetime\n   24-Mar-2020   19-Apr-2020   10-May-2020\n```\n\n## 字符串数组\n\n将三个字符串数组串联成一个数组。\n\n```bash\n>> A1 = [\"str1\"; \"str2\"];\n>> A2 = [\"str3\"; \"str4\"];\n>> A3 = [\"str5\"; \"str6\"];\n>> C = horzcat(A1,A2,A3)\n\nC = 2x3 string\n    \"str1\"    \"str3\"    \"str5\"\n    \"str2\"    \"str4\"    \"str6\"\n```\n\n## 元胞数组中的矩阵\n\n创建一个包含两个矩阵的元胞数组。将元胞数组中的矩阵水平串联成一个矩阵。\n\n```bash\n>> M1 = [1 2; 3 4];\n>> M2 = [5 6 7; 8 9 10];\n>> A1 = {M1,M2};\n>> C = horzcat(A1{:})\n\nC = 2×5\n\n     1     2     5     6     7\n     3     4     8     9    10\n```\n# 提示\n要通过**水平串联字符串、字符向量或字符向量元胞数组来构造文本**，请使用 `strcat` 函数。\n\n要**从字符向量元胞数组或字符串数组构造一段带分隔符的文本**，请使用 `strjoin` 函数。\n\n\n# 资源传送门\n\n 1. 关注【==做一个柔情的程序猿==】公众号\n 2. 在【==做一个柔情的程序猿==】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n 3. \n# 「❤️ 感谢大家」\n 3. 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n 4. 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。","slug":"The-series-matrix-function-horzcat","published":1,"updated":"2020-12-07T00:47:40.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsq000fksvb147rmlq2","content":"<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">C <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A,B<span class=\"token punctuation\">)</span>\nC <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A1,A2,…,An<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"输入参数\"><a href=\"#输入参数\" class=\"headerlink\" title=\"输入参数\"></a>输入参数</h1><h2 id=\"A-第一个输入\"><a href=\"#A-第一个输入\" class=\"headerlink\" title=\"A - 第一个输入\"></a>A - 第一个输入</h2><p>标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表<br><strong>第一个输入，指定为标量、向量、矩阵、多维数组、表或时间表。</strong></p>\n<h2 id=\"B-第二个输入\"><a href=\"#B-第二个输入\" class=\"headerlink\" title=\"B - 第二个输入\"></a>B - 第二个输入</h2><p>标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表<br><strong>第二个输入，指定为标量、向量、矩阵、多维数组、表或时间表。</strong></p>\n<p>B 的元素沿第二个维度串联到第一个输入的末尾。输入参数的大小必须兼容。例如，如果第一个输入是大小为 3×2 的矩阵，则 B 必须有 3 行。</p>\n<p>所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。</p>\n<p>所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。</p>\n<h2 id=\"A1-A2-…-An-输入列表\"><a href=\"#A1-A2-…-An-输入列表\" class=\"headerlink\" title=\"A1,A2,…,An - 输入列表\"></a>A1,A2,…,An - 输入列表</h2><p>逗号分隔的列表</p>\n<p><strong>输入的列表，指定为以逗号分隔的列表，列表元素将按其在列表中的顺序串联。</strong></p>\n<p>输入必须具有兼容的大小。例如，如果 A1 是长度为 m 的列向量，则其余输入必须各有 m 行才能水平串联。</p>\n<p>所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。</p>\n<p>所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。</p>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>当 A 和 B 具有兼容的大小时（除第二个维度以外，其余维度的长度均需匹配），<code>C = horzcat(A,B)</code> 将 B 水平串联到 A 的末尾。</p>\n<p><code>C = horzcat(A1,A2,…,An)</code> 水平串联 A1、A2、…、An。</p>\n<p>horzcat 等效于使用方括号水平串联数组。例如，当 A 和 B 是兼容数组时，[A,B] 或 [A B] 等于 horzcat(A,B)。</p>\n<h1 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h1><h2 id=\"两个矩阵\"><a href=\"#两个矩阵\" class=\"headerlink\" title=\"两个矩阵\"></a>两个矩阵</h2><p>创建两个矩阵并水平串联它们 - 首先使用方括号表示法串联，然后使用 horzcat 串联。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> A<span class=\"token operator\">=</span>magic<span class=\"token punctuation\">(</span>5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> A<span class=\"token punctuation\">(</span>4:5,:<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\nA <span class=\"token operator\">=</span>\n\n    17    24     1     8    15\n    23     5     7    14    16\n     4     6    13    20    22\n\n<span class=\"token operator\">>></span> B<span class=\"token operator\">=</span>magic<span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">)</span>*100\n\nB <span class=\"token operator\">=</span>\n\n   800   100   600\n   300   500   700\n   400   900   200\n\n<span class=\"token operator\">>></span> C<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>A,B<span class=\"token punctuation\">]</span>\n\nC <span class=\"token operator\">=</span>\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n<span class=\"token operator\">>></span> D <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A,B<span class=\"token punctuation\">)</span>\n\nD <span class=\"token operator\">=</span>\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n<span class=\"token operator\">>></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"两个表\"><a href=\"#两个表\" class=\"headerlink\" title=\"两个表\"></a>两个表</h2><p>创建一个带有三行和两个变量的表 A。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> A <span class=\"token operator\">=</span> table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>5<span class=\"token punctuation\">;</span>6<span class=\"token punctuation\">;</span>5<span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">;</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">;</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">..</span>.\n    <span class=\"token string\">'VariableNames'</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">'Age'</span> <span class=\"token string\">'Gender'</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">..</span>.\n    <span class=\"token string\">'RowNames'</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">'Thomas'</span> <span class=\"token string\">'Gordon'</span> <span class=\"token string\">'Percy'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nA<span class=\"token operator\">=</span>3×2 table\n              Age    Gender\n              ___    ______\n\n    Thomas     5       M   \n    Gordon     6       M   \n    Percy      5       M   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>创建一个带有三行和三个变量的表 B。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> B <span class=\"token operator\">=</span> table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>45<span class=\"token punctuation\">;</span>41<span class=\"token punctuation\">;</span>40<span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">[</span>45<span class=\"token punctuation\">;</span>32<span class=\"token punctuation\">;</span>34<span class=\"token punctuation\">]</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">'NY'</span><span class=\"token punctuation\">;</span><span class=\"token string\">'CA'</span><span class=\"token punctuation\">;</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">..</span>.\n    <span class=\"token string\">'VariableNames'</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">'Height'</span> <span class=\"token string\">'Weight'</span> <span class=\"token string\">'Birthplace'</span><span class=\"token punctuation\">}</span>,<span class=\"token punctuation\">..</span>.\n    <span class=\"token string\">'RowNames'</span>,<span class=\"token punctuation\">{</span><span class=\"token string\">'Percy'</span> <span class=\"token string\">'Gordon'</span> <span class=\"token string\">'Thomas'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nB<span class=\"token operator\">=</span>3×3 table\n              Height    Weight    Birthplace\n              ______    ______    __________\n\n    Percy       45        45        <span class=\"token punctuation\">{</span><span class=\"token string\">'NY'</span><span class=\"token punctuation\">}</span>  \n    Gordon      41        32        <span class=\"token punctuation\">{</span><span class=\"token string\">'CA'</span><span class=\"token punctuation\">}</span>  \n    Thomas      40        34        <span class=\"token punctuation\">{</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后水平串联 A 和 B。C 中的行顺序与 A 中的顺序相匹配。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> C <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A,B<span class=\"token punctuation\">)</span>\n\nC<span class=\"token operator\">=</span>3×5 table\n              Age    Gender    Height    Weight    Birthplace\n              ___    ______    ______    ______    __________\n\n    Thomas     5       M         40        34        <span class=\"token punctuation\">{</span><span class=\"token string\">'MA'</span><span class=\"token punctuation\">}</span>  \n    Gordon     6       M         41        32        <span class=\"token punctuation\">{</span><span class=\"token string\">'CA'</span><span class=\"token punctuation\">}</span>  \n    Percy      5       M         45        45        <span class=\"token punctuation\">{</span><span class=\"token string\">'NY'</span><span class=\"token punctuation\">}</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"具有不同类型的日期\"><a href=\"#具有不同类型的日期\" class=\"headerlink\" title=\"具有不同类型的日期\"></a>具有不同类型的日期</h2><p>将日期字符向量、字符串日期和日期时间串联成一个日期行。结果是一个日期时间行向量。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> chardate <span class=\"token operator\">=</span> <span class=\"token string\">'2020-03-24'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> strdate <span class=\"token operator\">=</span> <span class=\"token string\">\"2020-04-19\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> t <span class=\"token operator\">=</span> datetime<span class=\"token punctuation\">(</span><span class=\"token string\">'2020-05-10'</span>,<span class=\"token string\">'InputFormat'</span>,<span class=\"token string\">'yyyy-MM-dd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> C <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>chardate,strdate,t<span class=\"token punctuation\">)</span>\n\nC <span class=\"token operator\">=</span> 1x3 datetime\n   24-Mar-2020   19-Apr-2020   10-May-2020<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"字符串数组\"><a href=\"#字符串数组\" class=\"headerlink\" title=\"字符串数组\"></a>字符串数组</h2><p>将三个字符串数组串联成一个数组。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> A1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"str1\"</span><span class=\"token punctuation\">;</span> <span class=\"token string\">\"str2\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> A2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"str3\"</span><span class=\"token punctuation\">;</span> <span class=\"token string\">\"str4\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> A3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"str5\"</span><span class=\"token punctuation\">;</span> <span class=\"token string\">\"str6\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> C <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A1,A2,A3<span class=\"token punctuation\">)</span>\n\nC <span class=\"token operator\">=</span> 2x3 string\n    <span class=\"token string\">\"str1\"</span>    <span class=\"token string\">\"str3\"</span>    <span class=\"token string\">\"str5\"</span>\n    <span class=\"token string\">\"str2\"</span>    <span class=\"token string\">\"str4\"</span>    <span class=\"token string\">\"str6\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"元胞数组中的矩阵\"><a href=\"#元胞数组中的矩阵\" class=\"headerlink\" title=\"元胞数组中的矩阵\"></a>元胞数组中的矩阵</h2><p>创建一个包含两个矩阵的元胞数组。将元胞数组中的矩阵水平串联成一个矩阵。</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token operator\">>></span> M1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>1 2<span class=\"token punctuation\">;</span> 3 4<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> M2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>5 6 7<span class=\"token punctuation\">;</span> 8 9 10<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> A1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>M1,M2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">>></span> C <span class=\"token operator\">=</span> horzcat<span class=\"token punctuation\">(</span>A1<span class=\"token punctuation\">{</span>:<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nC <span class=\"token operator\">=</span> 2×5\n\n     1     2     5     6     7\n     3     4     8     9    10<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h1><p>要通过<strong>水平串联字符串、字符向量或字符向量元胞数组来构造文本</strong>，请使用 <code>strcat</code> 函数。</p>\n<p>要<strong>从字符向量元胞数组或字符串数组构造一段带分隔符的文本</strong>，请使用 <code>strjoin</code> 函数。</p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ol>\n<li>关注【==做一个柔情的程序猿==】公众号</li>\n<li>在【==做一个柔情的程序猿==】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n<li><h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1></li>\n<li>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</li>\n<li>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。</li>\n</ol>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><pre><code class=\"bash\">C = horzcat(A,B)\nC = horzcat(A1,A2,…,An)</code></pre>\n<h1 id=\"输入参数\"><a href=\"#输入参数\" class=\"headerlink\" title=\"输入参数\"></a>输入参数</h1><h2 id=\"A-第一个输入\"><a href=\"#A-第一个输入\" class=\"headerlink\" title=\"A - 第一个输入\"></a>A - 第一个输入</h2><p>标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表<br><strong>第一个输入，指定为标量、向量、矩阵、多维数组、表或时间表。</strong></p>\n<h2 id=\"B-第二个输入\"><a href=\"#B-第二个输入\" class=\"headerlink\" title=\"B - 第二个输入\"></a>B - 第二个输入</h2><p>标量 | 向量 | 矩阵 | 多维数组 | 表 | 时间表<br><strong>第二个输入，指定为标量、向量、矩阵、多维数组、表或时间表。</strong></p>\n<p>B 的元素沿第二个维度串联到第一个输入的末尾。输入参数的大小必须兼容。例如，如果第一个输入是大小为 3×2 的矩阵，则 B 必须有 3 行。</p>\n<p>所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。</p>\n<p>所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。</p>\n<h2 id=\"A1-A2-…-An-输入列表\"><a href=\"#A1-A2-…-An-输入列表\" class=\"headerlink\" title=\"A1,A2,…,An - 输入列表\"></a>A1,A2,…,An - 输入列表</h2><p>逗号分隔的列表</p>\n<p><strong>输入的列表，指定为以逗号分隔的列表，列表元素将按其在列表中的顺序串联。</strong></p>\n<p>输入必须具有兼容的大小。例如，如果 A1 是长度为 m 的列向量，则其余输入必须各有 m 行才能水平串联。</p>\n<p>所有表输入必须有唯一的变量名称。如果有行名称，则它们必须完全相同（顺序除外）。</p>\n<p>所有时间表输入必须具有相同的行时间，且每个列必须具有不同名称。</p>\n<h1 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h1><p>当 A 和 B 具有兼容的大小时（除第二个维度以外，其余维度的长度均需匹配），<code>C = horzcat(A,B)</code> 将 B 水平串联到 A 的末尾。</p>\n<p><code>C = horzcat(A1,A2,…,An)</code> 水平串联 A1、A2、…、An。</p>\n<p>horzcat 等效于使用方括号水平串联数组。例如，当 A 和 B 是兼容数组时，[A,B] 或 [A B] 等于 horzcat(A,B)。</p>\n<h1 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h1><h2 id=\"两个矩阵\"><a href=\"#两个矩阵\" class=\"headerlink\" title=\"两个矩阵\"></a>两个矩阵</h2><p>创建两个矩阵并水平串联它们 - 首先使用方括号表示法串联，然后使用 horzcat 串联。</p>\n<pre><code class=\"bash\">&gt;&gt; A=magic(5);\n&gt;&gt; A(4:5,:)=[]\n\nA =\n\n    17    24     1     8    15\n    23     5     7    14    16\n     4     6    13    20    22\n\n&gt;&gt; B=magic(3)*100\n\nB =\n\n   800   100   600\n   300   500   700\n   400   900   200\n\n&gt;&gt; C=[A,B]\n\nC =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n&gt;&gt; D = horzcat(A,B)\n\nD =\n\n    17    24     1     8    15   800   100   600\n    23     5     7    14    16   300   500   700\n     4     6    13    20    22   400   900   200\n\n&gt;&gt; </code></pre>\n<h2 id=\"两个表\"><a href=\"#两个表\" class=\"headerlink\" title=\"两个表\"></a>两个表</h2><p>创建一个带有三行和两个变量的表 A。</p>\n<pre><code class=\"bash\">&gt;&gt; A = table([5;6;5],[&#39;M&#39;;&#39;M&#39;;&#39;M&#39;],...\n    &#39;VariableNames&#39;,{&#39;Age&#39; &#39;Gender&#39;},...\n    &#39;RowNames&#39;,{&#39;Thomas&#39; &#39;Gordon&#39; &#39;Percy&#39;})\n\nA=3×2 table\n              Age    Gender\n              ___    ______\n\n    Thomas     5       M   \n    Gordon     6       M   \n    Percy      5       M   </code></pre>\n<p>创建一个带有三行和三个变量的表 B。</p>\n<pre><code class=\"bash\">&gt;&gt; B = table([45;41;40],[45;32;34],{&#39;NY&#39;;&#39;CA&#39;;&#39;MA&#39;},...\n    &#39;VariableNames&#39;,{&#39;Height&#39; &#39;Weight&#39; &#39;Birthplace&#39;},...\n    &#39;RowNames&#39;,{&#39;Percy&#39; &#39;Gordon&#39; &#39;Thomas&#39;})\n\nB=3×3 table\n              Height    Weight    Birthplace\n              ______    ______    __________\n\n    Percy       45        45        {&#39;NY&#39;}  \n    Gordon      41        32        {&#39;CA&#39;}  \n    Thomas      40        34        {&#39;MA&#39;}  </code></pre>\n<p>然后水平串联 A 和 B。C 中的行顺序与 A 中的顺序相匹配。</p>\n<pre><code class=\"bash\">&gt;&gt; C = horzcat(A,B)\n\nC=3×5 table\n              Age    Gender    Height    Weight    Birthplace\n              ___    ______    ______    ______    __________\n\n    Thomas     5       M         40        34        {&#39;MA&#39;}  \n    Gordon     6       M         41        32        {&#39;CA&#39;}  \n    Percy      5       M         45        45        {&#39;NY&#39;}  </code></pre>\n<h2 id=\"具有不同类型的日期\"><a href=\"#具有不同类型的日期\" class=\"headerlink\" title=\"具有不同类型的日期\"></a>具有不同类型的日期</h2><p>将日期字符向量、字符串日期和日期时间串联成一个日期行。结果是一个日期时间行向量。</p>\n<pre><code class=\"bash\">&gt;&gt; chardate = &#39;2020-03-24&#39;;\n&gt;&gt; strdate = &quot;2020-04-19&quot;;\n&gt;&gt; t = datetime(&#39;2020-05-10&#39;,&#39;InputFormat&#39;,&#39;yyyy-MM-dd&#39;);\n&gt;&gt; C = horzcat(chardate,strdate,t)\n\nC = 1x3 datetime\n   24-Mar-2020   19-Apr-2020   10-May-2020</code></pre>\n<h2 id=\"字符串数组\"><a href=\"#字符串数组\" class=\"headerlink\" title=\"字符串数组\"></a>字符串数组</h2><p>将三个字符串数组串联成一个数组。</p>\n<pre><code class=\"bash\">&gt;&gt; A1 = [&quot;str1&quot;; &quot;str2&quot;];\n&gt;&gt; A2 = [&quot;str3&quot;; &quot;str4&quot;];\n&gt;&gt; A3 = [&quot;str5&quot;; &quot;str6&quot;];\n&gt;&gt; C = horzcat(A1,A2,A3)\n\nC = 2x3 string\n    &quot;str1&quot;    &quot;str3&quot;    &quot;str5&quot;\n    &quot;str2&quot;    &quot;str4&quot;    &quot;str6&quot;</code></pre>\n<h2 id=\"元胞数组中的矩阵\"><a href=\"#元胞数组中的矩阵\" class=\"headerlink\" title=\"元胞数组中的矩阵\"></a>元胞数组中的矩阵</h2><p>创建一个包含两个矩阵的元胞数组。将元胞数组中的矩阵水平串联成一个矩阵。</p>\n<pre><code class=\"bash\">&gt;&gt; M1 = [1 2; 3 4];\n&gt;&gt; M2 = [5 6 7; 8 9 10];\n&gt;&gt; A1 = {M1,M2};\n&gt;&gt; C = horzcat(A1{:})\n\nC = 2×5\n\n     1     2     5     6     7\n     3     4     8     9    10</code></pre>\n<h1 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h1><p>要通过<strong>水平串联字符串、字符向量或字符向量元胞数组来构造文本</strong>，请使用 <code>strcat</code> 函数。</p>\n<p>要<strong>从字符向量元胞数组或字符串数组构造一段带分隔符的文本</strong>，请使用 <code>strjoin</code> 函数。</p>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ol>\n<li>关注【==做一个柔情的程序猿==】公众号</li>\n<li>在【==做一个柔情的程序猿==】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n<li><h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1></li>\n<li>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</li>\n<li>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。</li>\n</ol>\n"},{"title":"数学评价模型（一）：层次分析法","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-08T13:31:16.000Z","password":null,"summary":"层次分析法（Analytic Hierarchy Process，简称 AHP）是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。","_content":"\n**层次分析法（Analytic Hierarchy Process，简称 AHP）**是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。\n\n# §1 层次分析法的基本原理与步骤\n人们在进行社会的、经济的以及科学管理领域问题的系统分析中，面临的常常是一个由相互关联、相互制约的众多因素构成的复杂而往往缺少定量数据的系统。层次分析法为这类问题的决策和排序提供了一种新的、简洁而实用的建模方法。\n\n运用层次分析法建模，大体上可按下面四个步骤进行：\n\n- （i）建立递阶层次结构模型；\n- （ii）构造出各层次中的所有判断矩阵；\n- （iii）层次单排序及一致性检验；\n- （iv）层次总排序及一致性检验。\n\n下面分别说明这四个步骤的实现过程。\n\n## 1.1 递阶层次结构的建立与特点\n应用 AHP 分析决策问题时，首先要把问题条理化、层次化，构造出一个有层次的结构模型。在这个模型下，复杂问题被分解为元素的组成部分。这些元素又按其属性及关系形成若干层次。上一层次的元素作为准则对下一层次有关元素起支配作用。\n\n这些层次可以分为三类：\n\n- 最高层：这一层次中只有一个元素，一般它是分析问题的预定目标或理想结果，因此也称为目标层。\n- 中间层：这一层次中包含了为实现目标所涉及的中间环节，它可以由若干个层次组成，包括所需考虑的准则、子准则，因此也称为准则层。\n- 最底层：这一层次包括了为实现目标可供选择的各种措施、决策方案等，因此也称为措施层或方案层。\n\n递阶层次结构中的层次数与问题的复杂程度及需要分析的详尽程度有关，一般地层次数不受限制。每一层次中各元素所支配的元素一般不要超过 9 个。这是因为支配的元素过多会给两两比较判断带来困难。\n\n> 下面结合一个实例来说明递阶层次结构的建立\n\n假期旅游有P1 、P2 、P3 个旅游胜地供你选择，试确定一个最佳地点。在此问题中，你会根据诸如景色、费用、居住、饮食和旅途条件等一些准则去反复比较 3 个侯选地点。可以建立如图 1 的层次结构模型。\n\n![](https://img-blog.csdnimg.cn/2020040518094884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)​​\n\n## 1.2 构造判断矩阵\n\n层次结构反映了因素之间的关系，但准则层中的各准则在目标衡量中所占的比重并不一定相同，在决策者的心目中，它们各占有一定的比例。\n\n在确定影响某因素的诸因子 在该因素中所占的比重时，遇到的主要困难是这些比重常常不易定量化。此外，当影响某因素的因子较多时，直接考虑各因子对该因素有多大程度的影响时，常常会因考虑不周全、顾此失彼而使决策者提出与他实际认为的重要性程度不相一致的数据，甚至有可能提出一组隐含矛盾的数据。\n\n**为看清这一点，可作如下假设：**\n\n将一块重为 1 千克的石块砸成 n 小块，你可以精确称出它们的重量，\n设为w1,w2,...,wn，现在，请人估计这 n 小块的重量占总重量的比例（不能让他知道各小石块的重量），此人不仅很难给出精确的比值，而且完全可能因顾此失彼而提供彼此矛盾的数据。\n\n![](https://i.loli.net/2020/12/09/EMFNe84xcYR9tnJ.png)\n\n*定义 1*  若矩阵![](https://i.loli.net/2020/12/09/7HAEmKg3Twe4Ijz.png)满足\n\n![](https://i.loli.net/2020/12/09/WiIGXFduNUAa5Sf.png)\n\n关于如何确定aij的值，Saaty 等建议引用数字 1~9 及其倒数作为标度。表 1 列出了 1~9 标度的含义：\n\n![](https://img-blog.csdnimg.cn/20200405182514824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n从心理学观点来看，分级太多会超越人们的判断能力，既增加了作判断的难度，又容易因此而提供虚假数据。Saaty 等人还用实验方法比较了在各种不同标度下人们判断结果的正确性，实验结果也表明，采用 1~9 标度最为合适。\n\n最后，应该指出，一般地作n(n-1)/2次两两判断是必要的。有人认为把所有元素都和某个元素比较，即只作n - 1次比较就可以了。这种作法的弊病在于，任何一个判断的失误均可导致不合理的排序，而个别判断的失误对于难以定量的系统往往是难以\n避免的。进行n(n-1)/2次比较可以提供更多的信息，通过各种不同角度的反复比较，从而导出一个合理的排序。\n\n## 1.3 层次单排序及一致性检验\n判断矩阵 A 对应于最大特征值的特征向量 W ，经归一化后即为同一层次相应因素对于上一层次某因素相对重要性的排序权值，这一过程称为层次单排序。上述构造成对比较判断矩阵的办法虽能减少其它因素的干扰，较客观地反映出一对因子影响力的差别。但综合全部比较结果时，其中难免包含一定程度的非一致性。如果比较结果是前后完全一致的，则矩阵 A 的元素还应当满足：\n\n![](https://i.loli.net/2020/12/09/XGfBr92h4c3oaKw.png)                          (1)\n\n*定义 2 * 满足关系式（1）的正互反矩阵称为一致矩阵。\n需要检验构造出来的（正互反）判断矩阵 A 是否严重地非一致，以便确定是否接受 A 。\n\n**定理 1** 正互反矩阵 A 的最大特征根必为正实数，其对应特征向量的所有分量均为正实数。 A 的其余特征值的模均严格小于。\n\n**定理 2**  若 A 为一致矩阵，则\n\n- （i） A 必为正互反矩阵。\n- （ii） A 的转置矩阵AT 也是一致矩阵。\n- （iii） A 的任意两行成比例，比例因子大于零，从而 rank(A) = 1 （同样， A 的任意两列也成比例）。\n- （iv） A 的最大特征值 λmax=n，其中 n 为矩阵 A 的阶。 A 的其余特征根均为零。\n- （v）若 A 的最大特征值λmax对应的特征向量为 \n\n![](https://i.loli.net/2020/12/09/tf1AZIncFTsMqwQ.png)\n\n即\n\n![](https://img-blog.csdnimg.cn/20200405183900857.png)\n\n**定理 3**  n 阶正互反矩阵 A 为一致矩阵当且仅当其最大特征根 λmax=n ，且当正互反矩阵 A 非一致时，必有 λmax>n 。\n\n根据定理 3，我们可以由 λmax 是否等于 n 来检验判断矩阵 A 是否为一致矩阵。由于特征根连续地依赖于 ，故 λmax 比 n 大得越多， A 的非一致性程度也就越严重，λmax 对应的标准化特征向量也就越不能真实地反映出X={x1,x2,...,xn}在对因素 Z的影响中所占的比重。因此，对决策者提供的判断矩阵有必要作一次一致性检验，以决定是否能接受它。\n\n**对判断矩阵的一致性检验的步骤如下：**\n\n（i）计算一致性指标 CI\n\n![](https://i.loli.net/2020/12/09/inFvq9dM7phwUT1.png)\n\n（ii）查找相应的平均随机一致性指标 RI 。对n=1,2,...,9 ，Saaty 给出了 RI 的值，如表 2 所示。\n\n![](https://img-blog.csdnimg.cn/20200405185016252.png)\n\nRI 的值是这样得到的，用随机方法构造 500 个样本矩阵：随机地从 1~9 及其倒数中抽取数字构造正互反矩阵，求得最大特征根的平均值\n\n![](https://i.loli.net/2020/12/09/9KGEbd6ViehrHXq.png)\n\n（ⅲ）计算一致性比例 CR\n\n![](https://i.loli.net/2020/12/09/gyJHE8pfLZ2M3Fj.png)\n\n当 10 . 0 < CR 时，认为判断矩阵的一致性是可以接受的，否则应对判断矩阵作适当修正。\n\n## 1.4 层次总排序及一致性检验\n\n上面我们得到的是一组元素对其上一层中某元素的权重向量。我们最终要得到各元素，特别是最低层中各方案对于目标的排序权重，从而进行方案选择。总排序权重要自上而下地将单准则下的权重进行合成。\n\n![](https://img-blog.csdnimg.cn/2020040518535265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n设上一层次（ A 层）包含 A1,A2,...,Am 共 m 个因素，它们的层次总排序权重分别为 a1,a2,...,am。又设其后的下一层次（ B 层）包含 n 个因素 B1,B2,...,Bn，它们关于 Aj 的层次单排序权重分别为 b1j,b2j,...,bnj（当 Bi 与 Aj 无关联时， bij=0 ）。现求 B 层中各因素关于总目标的权重 b1,b2,...,bn，即求 B 层各因素的层次总排序权重，计算按表 3 所示方式进行，即\n\n![](https://i.loli.net/2020/12/09/JLoDcEHdUkFSx9w.png)\n\n对层次总排序也需作一致性检验，检验仍象层次总排序那样由高层到低层逐层进行。这是因为虽然各层次均已经过层次单排序的一致性检验，各成对比较判断矩阵都已具有较为满意的一致性。但当综合考察时，各层次的非一致性仍有可能积累起来，引起最终分析结果较严重的非一致性。\n\n设 B 层中与 Aj 相关的因素的成对比较判断矩阵在单排序中经一致性检验，求得单排序一致性指标为  CI(j) ,（ j = 1,2,...,m），相应的平均随机一致性指标为 RI(j)(RI(j), CI(j)已在层次单排序时求得），则 B 层总排序随机一致性比例为\n\n![](https://i.loli.net/2020/12/09/VDELIlaMrpStyzX.png)\n\n当 10 . 0 < CR 时，认为层次总排序结果具有较满意的一致性并接受该分析结果。\n\n# §2 层次分析法的应用\n\n在应用层次分析法研究问题时，遇到的主要困难有两个：\n\n- （i）如何根据实际情况抽象出较为贴切的层次结构；\n- （ii）如何将某些定性的量作比较接近实际定量化处理。层次分析法对人们的思维过程进行了加工整理，提出了一套系统分析问题的方法，为科学管理和决策提供了较有说服力的依据。\n\n但层次分析法也有其局限性，主要表现在：\n\n- （i）它在很大程度上依赖于人们的经验，主观因素的影响很大，它至多只能排除思维过程中的严重非一致性，却无法排除决策者个人可能存在的严重片面性。\n- （ii）比较、判断过程较为粗糙，不能用于精度要求较高的决策问题。AHP 至多只能算是一种半定量（或定性与定量结合）的方法。在应用层次分析法时，建立层次结构模型是十分关键的一步。现再分析一个实例，以便说明如何从实际问题中抽象出相应的层次结构。\n\n Matlab 程序如下：\n```bash\nclc,clear\nfid=fopen('txt3.txt','r');\nn1=6;n2=3;\na=[];\nfor i=1:n1\ntmp=str2num(fgetl(fid));\na=[a;tmp]; %读准则层判断矩阵\nend\nfor i=1:n1\nstr1=char(['b',int2str(i),'=[];']);\nstr2=char(['b',int2str(i),'=[b',int2str(i),';tmp];']);\neval(str1);\nfor j=1:n2\ntmp=str2num(fgetl(fid));\neval(str2); %读方案层的判断矩阵\nend\nend\nri=[0,0,0.58,0.90,1.12,1.24,1.32,1.41,1.45]; %一致性指标\n[x,y]=eig(a);\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw0=x(:,num)/sum(x(:,num));\ncr0=(lamda-n1)/(n1-1)/ri(n1)\nfor i=1:n1\n[x,y]=eig(eval(char(['b',int2str(i)])));\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw1(:,i)=x(:,num)/sum(x(:,num));\ncr1(i)=(lamda-n2)/(n2-1)/ri(n2);\nend\ncr1, ts=w1*w0, cr=cr1*w0\n```\n\n纯文本文件txt3.txt中的数据格式如下：\n```bash\n1 1 1 4 1 1/2\n1 1 2 4 1 1/2\n1 1/2 1 5 3 1/2\n1/4 1/4 1/5 1  1/3 1/3\n1 1 1/3 3  1 1\n2 2 2 3 3 1\n1 1/4 1/2\n4 1 3\n2 1/3 1\n1 1/4 1/5\n4 1 1/2\n5 2 1\n1 3 1/3\n1/3 1 1/7\n3 7 1\n1 1/3 5\n3 1 7\n1/5 1/7 1\n1 1 7\n1 1 7\n1/7 1/7 1\n1 7 9\n1/7 1 1\n1/9 1 1\n```","source":"_posts/analytic-hierarchy-process.md","raw":"---\ntitle: 数学评价模型（一）：层次分析法\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-08 21:31:16\npassword:\nsummary: 层次分析法（Analytic Hierarchy Process，简称 AHP）是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。\ntags: \n- matlab\n- 数学评价模型\ncategories: \n- 数学建模\n---\n\n**层次分析法（Analytic Hierarchy Process，简称 AHP）**是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。\n\n# §1 层次分析法的基本原理与步骤\n人们在进行社会的、经济的以及科学管理领域问题的系统分析中，面临的常常是一个由相互关联、相互制约的众多因素构成的复杂而往往缺少定量数据的系统。层次分析法为这类问题的决策和排序提供了一种新的、简洁而实用的建模方法。\n\n运用层次分析法建模，大体上可按下面四个步骤进行：\n\n- （i）建立递阶层次结构模型；\n- （ii）构造出各层次中的所有判断矩阵；\n- （iii）层次单排序及一致性检验；\n- （iv）层次总排序及一致性检验。\n\n下面分别说明这四个步骤的实现过程。\n\n## 1.1 递阶层次结构的建立与特点\n应用 AHP 分析决策问题时，首先要把问题条理化、层次化，构造出一个有层次的结构模型。在这个模型下，复杂问题被分解为元素的组成部分。这些元素又按其属性及关系形成若干层次。上一层次的元素作为准则对下一层次有关元素起支配作用。\n\n这些层次可以分为三类：\n\n- 最高层：这一层次中只有一个元素，一般它是分析问题的预定目标或理想结果，因此也称为目标层。\n- 中间层：这一层次中包含了为实现目标所涉及的中间环节，它可以由若干个层次组成，包括所需考虑的准则、子准则，因此也称为准则层。\n- 最底层：这一层次包括了为实现目标可供选择的各种措施、决策方案等，因此也称为措施层或方案层。\n\n递阶层次结构中的层次数与问题的复杂程度及需要分析的详尽程度有关，一般地层次数不受限制。每一层次中各元素所支配的元素一般不要超过 9 个。这是因为支配的元素过多会给两两比较判断带来困难。\n\n> 下面结合一个实例来说明递阶层次结构的建立\n\n假期旅游有P1 、P2 、P3 个旅游胜地供你选择，试确定一个最佳地点。在此问题中，你会根据诸如景色、费用、居住、饮食和旅途条件等一些准则去反复比较 3 个侯选地点。可以建立如图 1 的层次结构模型。\n\n![](https://img-blog.csdnimg.cn/2020040518094884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)​​\n\n## 1.2 构造判断矩阵\n\n层次结构反映了因素之间的关系，但准则层中的各准则在目标衡量中所占的比重并不一定相同，在决策者的心目中，它们各占有一定的比例。\n\n在确定影响某因素的诸因子 在该因素中所占的比重时，遇到的主要困难是这些比重常常不易定量化。此外，当影响某因素的因子较多时，直接考虑各因子对该因素有多大程度的影响时，常常会因考虑不周全、顾此失彼而使决策者提出与他实际认为的重要性程度不相一致的数据，甚至有可能提出一组隐含矛盾的数据。\n\n**为看清这一点，可作如下假设：**\n\n将一块重为 1 千克的石块砸成 n 小块，你可以精确称出它们的重量，\n设为w1,w2,...,wn，现在，请人估计这 n 小块的重量占总重量的比例（不能让他知道各小石块的重量），此人不仅很难给出精确的比值，而且完全可能因顾此失彼而提供彼此矛盾的数据。\n\n![](https://i.loli.net/2020/12/09/EMFNe84xcYR9tnJ.png)\n\n*定义 1*  若矩阵![](https://i.loli.net/2020/12/09/7HAEmKg3Twe4Ijz.png)满足\n\n![](https://i.loli.net/2020/12/09/WiIGXFduNUAa5Sf.png)\n\n关于如何确定aij的值，Saaty 等建议引用数字 1~9 及其倒数作为标度。表 1 列出了 1~9 标度的含义：\n\n![](https://img-blog.csdnimg.cn/20200405182514824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n从心理学观点来看，分级太多会超越人们的判断能力，既增加了作判断的难度，又容易因此而提供虚假数据。Saaty 等人还用实验方法比较了在各种不同标度下人们判断结果的正确性，实验结果也表明，采用 1~9 标度最为合适。\n\n最后，应该指出，一般地作n(n-1)/2次两两判断是必要的。有人认为把所有元素都和某个元素比较，即只作n - 1次比较就可以了。这种作法的弊病在于，任何一个判断的失误均可导致不合理的排序，而个别判断的失误对于难以定量的系统往往是难以\n避免的。进行n(n-1)/2次比较可以提供更多的信息，通过各种不同角度的反复比较，从而导出一个合理的排序。\n\n## 1.3 层次单排序及一致性检验\n判断矩阵 A 对应于最大特征值的特征向量 W ，经归一化后即为同一层次相应因素对于上一层次某因素相对重要性的排序权值，这一过程称为层次单排序。上述构造成对比较判断矩阵的办法虽能减少其它因素的干扰，较客观地反映出一对因子影响力的差别。但综合全部比较结果时，其中难免包含一定程度的非一致性。如果比较结果是前后完全一致的，则矩阵 A 的元素还应当满足：\n\n![](https://i.loli.net/2020/12/09/XGfBr92h4c3oaKw.png)                          (1)\n\n*定义 2 * 满足关系式（1）的正互反矩阵称为一致矩阵。\n需要检验构造出来的（正互反）判断矩阵 A 是否严重地非一致，以便确定是否接受 A 。\n\n**定理 1** 正互反矩阵 A 的最大特征根必为正实数，其对应特征向量的所有分量均为正实数。 A 的其余特征值的模均严格小于。\n\n**定理 2**  若 A 为一致矩阵，则\n\n- （i） A 必为正互反矩阵。\n- （ii） A 的转置矩阵AT 也是一致矩阵。\n- （iii） A 的任意两行成比例，比例因子大于零，从而 rank(A) = 1 （同样， A 的任意两列也成比例）。\n- （iv） A 的最大特征值 λmax=n，其中 n 为矩阵 A 的阶。 A 的其余特征根均为零。\n- （v）若 A 的最大特征值λmax对应的特征向量为 \n\n![](https://i.loli.net/2020/12/09/tf1AZIncFTsMqwQ.png)\n\n即\n\n![](https://img-blog.csdnimg.cn/20200405183900857.png)\n\n**定理 3**  n 阶正互反矩阵 A 为一致矩阵当且仅当其最大特征根 λmax=n ，且当正互反矩阵 A 非一致时，必有 λmax>n 。\n\n根据定理 3，我们可以由 λmax 是否等于 n 来检验判断矩阵 A 是否为一致矩阵。由于特征根连续地依赖于 ，故 λmax 比 n 大得越多， A 的非一致性程度也就越严重，λmax 对应的标准化特征向量也就越不能真实地反映出X={x1,x2,...,xn}在对因素 Z的影响中所占的比重。因此，对决策者提供的判断矩阵有必要作一次一致性检验，以决定是否能接受它。\n\n**对判断矩阵的一致性检验的步骤如下：**\n\n（i）计算一致性指标 CI\n\n![](https://i.loli.net/2020/12/09/inFvq9dM7phwUT1.png)\n\n（ii）查找相应的平均随机一致性指标 RI 。对n=1,2,...,9 ，Saaty 给出了 RI 的值，如表 2 所示。\n\n![](https://img-blog.csdnimg.cn/20200405185016252.png)\n\nRI 的值是这样得到的，用随机方法构造 500 个样本矩阵：随机地从 1~9 及其倒数中抽取数字构造正互反矩阵，求得最大特征根的平均值\n\n![](https://i.loli.net/2020/12/09/9KGEbd6ViehrHXq.png)\n\n（ⅲ）计算一致性比例 CR\n\n![](https://i.loli.net/2020/12/09/gyJHE8pfLZ2M3Fj.png)\n\n当 10 . 0 < CR 时，认为判断矩阵的一致性是可以接受的，否则应对判断矩阵作适当修正。\n\n## 1.4 层次总排序及一致性检验\n\n上面我们得到的是一组元素对其上一层中某元素的权重向量。我们最终要得到各元素，特别是最低层中各方案对于目标的排序权重，从而进行方案选择。总排序权重要自上而下地将单准则下的权重进行合成。\n\n![](https://img-blog.csdnimg.cn/2020040518535265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n设上一层次（ A 层）包含 A1,A2,...,Am 共 m 个因素，它们的层次总排序权重分别为 a1,a2,...,am。又设其后的下一层次（ B 层）包含 n 个因素 B1,B2,...,Bn，它们关于 Aj 的层次单排序权重分别为 b1j,b2j,...,bnj（当 Bi 与 Aj 无关联时， bij=0 ）。现求 B 层中各因素关于总目标的权重 b1,b2,...,bn，即求 B 层各因素的层次总排序权重，计算按表 3 所示方式进行，即\n\n![](https://i.loli.net/2020/12/09/JLoDcEHdUkFSx9w.png)\n\n对层次总排序也需作一致性检验，检验仍象层次总排序那样由高层到低层逐层进行。这是因为虽然各层次均已经过层次单排序的一致性检验，各成对比较判断矩阵都已具有较为满意的一致性。但当综合考察时，各层次的非一致性仍有可能积累起来，引起最终分析结果较严重的非一致性。\n\n设 B 层中与 Aj 相关的因素的成对比较判断矩阵在单排序中经一致性检验，求得单排序一致性指标为  CI(j) ,（ j = 1,2,...,m），相应的平均随机一致性指标为 RI(j)(RI(j), CI(j)已在层次单排序时求得），则 B 层总排序随机一致性比例为\n\n![](https://i.loli.net/2020/12/09/VDELIlaMrpStyzX.png)\n\n当 10 . 0 < CR 时，认为层次总排序结果具有较满意的一致性并接受该分析结果。\n\n# §2 层次分析法的应用\n\n在应用层次分析法研究问题时，遇到的主要困难有两个：\n\n- （i）如何根据实际情况抽象出较为贴切的层次结构；\n- （ii）如何将某些定性的量作比较接近实际定量化处理。层次分析法对人们的思维过程进行了加工整理，提出了一套系统分析问题的方法，为科学管理和决策提供了较有说服力的依据。\n\n但层次分析法也有其局限性，主要表现在：\n\n- （i）它在很大程度上依赖于人们的经验，主观因素的影响很大，它至多只能排除思维过程中的严重非一致性，却无法排除决策者个人可能存在的严重片面性。\n- （ii）比较、判断过程较为粗糙，不能用于精度要求较高的决策问题。AHP 至多只能算是一种半定量（或定性与定量结合）的方法。在应用层次分析法时，建立层次结构模型是十分关键的一步。现再分析一个实例，以便说明如何从实际问题中抽象出相应的层次结构。\n\n Matlab 程序如下：\n```bash\nclc,clear\nfid=fopen('txt3.txt','r');\nn1=6;n2=3;\na=[];\nfor i=1:n1\ntmp=str2num(fgetl(fid));\na=[a;tmp]; %读准则层判断矩阵\nend\nfor i=1:n1\nstr1=char(['b',int2str(i),'=[];']);\nstr2=char(['b',int2str(i),'=[b',int2str(i),';tmp];']);\neval(str1);\nfor j=1:n2\ntmp=str2num(fgetl(fid));\neval(str2); %读方案层的判断矩阵\nend\nend\nri=[0,0,0.58,0.90,1.12,1.24,1.32,1.41,1.45]; %一致性指标\n[x,y]=eig(a);\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw0=x(:,num)/sum(x(:,num));\ncr0=(lamda-n1)/(n1-1)/ri(n1)\nfor i=1:n1\n[x,y]=eig(eval(char(['b',int2str(i)])));\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw1(:,i)=x(:,num)/sum(x(:,num));\ncr1(i)=(lamda-n2)/(n2-1)/ri(n2);\nend\ncr1, ts=w1*w0, cr=cr1*w0\n```\n\n纯文本文件txt3.txt中的数据格式如下：\n```bash\n1 1 1 4 1 1/2\n1 1 2 4 1 1/2\n1 1/2 1 5 3 1/2\n1/4 1/4 1/5 1  1/3 1/3\n1 1 1/3 3  1 1\n2 2 2 3 3 1\n1 1/4 1/2\n4 1 3\n2 1/3 1\n1 1/4 1/5\n4 1 1/2\n5 2 1\n1 3 1/3\n1/3 1 1/7\n3 7 1\n1 1/3 5\n3 1 7\n1/5 1/7 1\n1 1 7\n1 1 7\n1/7 1/7 1\n1 7 9\n1/7 1 1\n1/9 1 1\n```","slug":"analytic-hierarchy-process","published":1,"updated":"2020-12-09T06:53:30.450Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hss000hksvbzy9yfljk","content":"<p><strong>层次分析法（Analytic Hierarchy Process，简称 AHP）</strong>是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。</p>\n<h1 id=\"§1-层次分析法的基本原理与步骤\"><a href=\"#§1-层次分析法的基本原理与步骤\" class=\"headerlink\" title=\"§1 层次分析法的基本原理与步骤\"></a>§1 层次分析法的基本原理与步骤</h1><p>人们在进行社会的、经济的以及科学管理领域问题的系统分析中，面临的常常是一个由相互关联、相互制约的众多因素构成的复杂而往往缺少定量数据的系统。层次分析法为这类问题的决策和排序提供了一种新的、简洁而实用的建模方法。</p>\n<p>运用层次分析法建模，大体上可按下面四个步骤进行：</p>\n<ul>\n<li>（i）建立递阶层次结构模型；</li>\n<li>（ii）构造出各层次中的所有判断矩阵；</li>\n<li>（iii）层次单排序及一致性检验；</li>\n<li>（iv）层次总排序及一致性检验。</li>\n</ul>\n<p>下面分别说明这四个步骤的实现过程。</p>\n<h2 id=\"1-1-递阶层次结构的建立与特点\"><a href=\"#1-1-递阶层次结构的建立与特点\" class=\"headerlink\" title=\"1.1 递阶层次结构的建立与特点\"></a>1.1 递阶层次结构的建立与特点</h2><p>应用 AHP 分析决策问题时，首先要把问题条理化、层次化，构造出一个有层次的结构模型。在这个模型下，复杂问题被分解为元素的组成部分。这些元素又按其属性及关系形成若干层次。上一层次的元素作为准则对下一层次有关元素起支配作用。</p>\n<p>这些层次可以分为三类：</p>\n<ul>\n<li>最高层：这一层次中只有一个元素，一般它是分析问题的预定目标或理想结果，因此也称为目标层。</li>\n<li>中间层：这一层次中包含了为实现目标所涉及的中间环节，它可以由若干个层次组成，包括所需考虑的准则、子准则，因此也称为准则层。</li>\n<li>最底层：这一层次包括了为实现目标可供选择的各种措施、决策方案等，因此也称为措施层或方案层。</li>\n</ul>\n<p>递阶层次结构中的层次数与问题的复杂程度及需要分析的详尽程度有关，一般地层次数不受限制。每一层次中各元素所支配的元素一般不要超过 9 个。这是因为支配的元素过多会给两两比较判断带来困难。</p>\n<blockquote>\n<p>下面结合一个实例来说明递阶层次结构的建立</p>\n</blockquote>\n<p>假期旅游有P1 、P2 、P3 个旅游胜地供你选择，试确定一个最佳地点。在此问题中，你会根据诸如景色、费用、居住、饮食和旅途条件等一些准则去反复比较 3 个侯选地点。可以建立如图 1 的层次结构模型。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040518094884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt>​​</p>\n<h2 id=\"1-2-构造判断矩阵\"><a href=\"#1-2-构造判断矩阵\" class=\"headerlink\" title=\"1.2 构造判断矩阵\"></a>1.2 构造判断矩阵</h2><p>层次结构反映了因素之间的关系，但准则层中的各准则在目标衡量中所占的比重并不一定相同，在决策者的心目中，它们各占有一定的比例。</p>\n<p>在确定影响某因素的诸因子 在该因素中所占的比重时，遇到的主要困难是这些比重常常不易定量化。此外，当影响某因素的因子较多时，直接考虑各因子对该因素有多大程度的影响时，常常会因考虑不周全、顾此失彼而使决策者提出与他实际认为的重要性程度不相一致的数据，甚至有可能提出一组隐含矛盾的数据。</p>\n<p><strong>为看清这一点，可作如下假设：</strong></p>\n<p>将一块重为 1 千克的石块砸成 n 小块，你可以精确称出它们的重量，<br>设为w1,w2,…,wn，现在，请人估计这 n 小块的重量占总重量的比例（不能让他知道各小石块的重量），此人不仅很难给出精确的比值，而且完全可能因顾此失彼而提供彼此矛盾的数据。</p>\n<p><img src=\"https://i.loli.net/2020/12/09/EMFNe84xcYR9tnJ.png\" alt></p>\n<p><em>定义 1</em>  若矩阵<img src=\"https://i.loli.net/2020/12/09/7HAEmKg3Twe4Ijz.png\" alt>满足</p>\n<p><img src=\"https://i.loli.net/2020/12/09/WiIGXFduNUAa5Sf.png\" alt></p>\n<p>关于如何确定aij的值，Saaty 等建议引用数字 1<del>9 及其倒数作为标度。表 1 列出了 1</del>9 标度的含义：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405182514824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>从心理学观点来看，分级太多会超越人们的判断能力，既增加了作判断的难度，又容易因此而提供虚假数据。Saaty 等人还用实验方法比较了在各种不同标度下人们判断结果的正确性，实验结果也表明，采用 1~9 标度最为合适。</p>\n<p>最后，应该指出，一般地作n(n-1)/2次两两判断是必要的。有人认为把所有元素都和某个元素比较，即只作n - 1次比较就可以了。这种作法的弊病在于，任何一个判断的失误均可导致不合理的排序，而个别判断的失误对于难以定量的系统往往是难以<br>避免的。进行n(n-1)/2次比较可以提供更多的信息，通过各种不同角度的反复比较，从而导出一个合理的排序。</p>\n<h2 id=\"1-3-层次单排序及一致性检验\"><a href=\"#1-3-层次单排序及一致性检验\" class=\"headerlink\" title=\"1.3 层次单排序及一致性检验\"></a>1.3 层次单排序及一致性检验</h2><p>判断矩阵 A 对应于最大特征值的特征向量 W ，经归一化后即为同一层次相应因素对于上一层次某因素相对重要性的排序权值，这一过程称为层次单排序。上述构造成对比较判断矩阵的办法虽能减少其它因素的干扰，较客观地反映出一对因子影响力的差别。但综合全部比较结果时，其中难免包含一定程度的非一致性。如果比较结果是前后完全一致的，则矩阵 A 的元素还应当满足：</p>\n<p><img src=\"https://i.loli.net/2020/12/09/XGfBr92h4c3oaKw.png\" alt>                          (1)</p>\n<p><em>定义 2 </em> 满足关系式（1）的正互反矩阵称为一致矩阵。<br>需要检验构造出来的（正互反）判断矩阵 A 是否严重地非一致，以便确定是否接受 A 。</p>\n<p><strong>定理 1</strong> 正互反矩阵 A 的最大特征根必为正实数，其对应特征向量的所有分量均为正实数。 A 的其余特征值的模均严格小于。</p>\n<p><strong>定理 2</strong>  若 A 为一致矩阵，则</p>\n<ul>\n<li>（i） A 必为正互反矩阵。</li>\n<li>（ii） A 的转置矩阵AT 也是一致矩阵。</li>\n<li>（iii） A 的任意两行成比例，比例因子大于零，从而 rank(A) = 1 （同样， A 的任意两列也成比例）。</li>\n<li>（iv） A 的最大特征值 λmax=n，其中 n 为矩阵 A 的阶。 A 的其余特征根均为零。</li>\n<li>（v）若 A 的最大特征值λmax对应的特征向量为 </li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/12/09/tf1AZIncFTsMqwQ.png\" alt></p>\n<p>即</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405183900857.png\" alt></p>\n<p><strong>定理 3</strong>  n 阶正互反矩阵 A 为一致矩阵当且仅当其最大特征根 λmax=n ，且当正互反矩阵 A 非一致时，必有 λmax&gt;n 。</p>\n<p>根据定理 3，我们可以由 λmax 是否等于 n 来检验判断矩阵 A 是否为一致矩阵。由于特征根连续地依赖于 ，故 λmax 比 n 大得越多， A 的非一致性程度也就越严重，λmax 对应的标准化特征向量也就越不能真实地反映出X={x1,x2,…,xn}在对因素 Z的影响中所占的比重。因此，对决策者提供的判断矩阵有必要作一次一致性检验，以决定是否能接受它。</p>\n<p><strong>对判断矩阵的一致性检验的步骤如下：</strong></p>\n<p>（i）计算一致性指标 CI</p>\n<p><img src=\"https://i.loli.net/2020/12/09/inFvq9dM7phwUT1.png\" alt></p>\n<p>（ii）查找相应的平均随机一致性指标 RI 。对n=1,2,…,9 ，Saaty 给出了 RI 的值，如表 2 所示。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405185016252.png\" alt></p>\n<p>RI 的值是这样得到的，用随机方法构造 500 个样本矩阵：随机地从 1~9 及其倒数中抽取数字构造正互反矩阵，求得最大特征根的平均值</p>\n<p><img src=\"https://i.loli.net/2020/12/09/9KGEbd6ViehrHXq.png\" alt></p>\n<p>（ⅲ）计算一致性比例 CR</p>\n<p><img src=\"https://i.loli.net/2020/12/09/gyJHE8pfLZ2M3Fj.png\" alt></p>\n<p>当 10 . 0 &lt; CR 时，认为判断矩阵的一致性是可以接受的，否则应对判断矩阵作适当修正。</p>\n<h2 id=\"1-4-层次总排序及一致性检验\"><a href=\"#1-4-层次总排序及一致性检验\" class=\"headerlink\" title=\"1.4 层次总排序及一致性检验\"></a>1.4 层次总排序及一致性检验</h2><p>上面我们得到的是一组元素对其上一层中某元素的权重向量。我们最终要得到各元素，特别是最低层中各方案对于目标的排序权重，从而进行方案选择。总排序权重要自上而下地将单准则下的权重进行合成。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040518535265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>设上一层次（ A 层）包含 A1,A2,…,Am 共 m 个因素，它们的层次总排序权重分别为 a1,a2,…,am。又设其后的下一层次（ B 层）包含 n 个因素 B1,B2,…,Bn，它们关于 Aj 的层次单排序权重分别为 b1j,b2j,…,bnj（当 Bi 与 Aj 无关联时， bij=0 ）。现求 B 层中各因素关于总目标的权重 b1,b2,…,bn，即求 B 层各因素的层次总排序权重，计算按表 3 所示方式进行，即</p>\n<p><img src=\"https://i.loli.net/2020/12/09/JLoDcEHdUkFSx9w.png\" alt></p>\n<p>对层次总排序也需作一致性检验，检验仍象层次总排序那样由高层到低层逐层进行。这是因为虽然各层次均已经过层次单排序的一致性检验，各成对比较判断矩阵都已具有较为满意的一致性。但当综合考察时，各层次的非一致性仍有可能积累起来，引起最终分析结果较严重的非一致性。</p>\n<p>设 B 层中与 Aj 相关的因素的成对比较判断矩阵在单排序中经一致性检验，求得单排序一致性指标为  CI(j) ,（ j = 1,2,…,m），相应的平均随机一致性指标为 RI(j)(RI(j), CI(j)已在层次单排序时求得），则 B 层总排序随机一致性比例为</p>\n<p><img src=\"https://i.loli.net/2020/12/09/VDELIlaMrpStyzX.png\" alt></p>\n<p>当 10 . 0 &lt; CR 时，认为层次总排序结果具有较满意的一致性并接受该分析结果。</p>\n<h1 id=\"§2-层次分析法的应用\"><a href=\"#§2-层次分析法的应用\" class=\"headerlink\" title=\"§2 层次分析法的应用\"></a>§2 层次分析法的应用</h1><p>在应用层次分析法研究问题时，遇到的主要困难有两个：</p>\n<ul>\n<li>（i）如何根据实际情况抽象出较为贴切的层次结构；</li>\n<li>（ii）如何将某些定性的量作比较接近实际定量化处理。层次分析法对人们的思维过程进行了加工整理，提出了一套系统分析问题的方法，为科学管理和决策提供了较有说服力的依据。</li>\n</ul>\n<p>但层次分析法也有其局限性，主要表现在：</p>\n<ul>\n<li><p>（i）它在很大程度上依赖于人们的经验，主观因素的影响很大，它至多只能排除思维过程中的严重非一致性，却无法排除决策者个人可能存在的严重片面性。</p>\n</li>\n<li><p>（ii）比较、判断过程较为粗糙，不能用于精度要求较高的决策问题。AHP 至多只能算是一种半定量（或定性与定量结合）的方法。在应用层次分析法时，建立层次结构模型是十分关键的一步。现再分析一个实例，以便说明如何从实际问题中抽象出相应的层次结构。</p>\n<p>Matlab 程序如下：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">clc,clear\nfid<span class=\"token operator\">=</span>fopen<span class=\"token punctuation\">(</span><span class=\"token string\">'txt3.txt'</span>,<span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nn1<span class=\"token operator\">=</span>6<span class=\"token punctuation\">;</span>n2<span class=\"token operator\">=</span>3<span class=\"token punctuation\">;</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span>1:n1\ntmp<span class=\"token operator\">=</span>str2num<span class=\"token punctuation\">(</span>fgetl<span class=\"token punctuation\">(</span>fid<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">;</span>tmp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> %读准则层判断矩阵\nend\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span>1:n1\nstr1<span class=\"token operator\">=</span>char<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span>,int2str<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>,<span class=\"token string\">'=[];'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstr2<span class=\"token operator\">=</span>char<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span>,int2str<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>,<span class=\"token string\">'=[b'</span>,int2str<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>,<span class=\"token string\">';tmp];'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\neval<span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> j<span class=\"token operator\">=</span>1:n2\ntmp<span class=\"token operator\">=</span>str2num<span class=\"token punctuation\">(</span>fgetl<span class=\"token punctuation\">(</span>fid<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\neval<span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> %读方案层的判断矩阵\nend\nend\nri<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>0,0,0.58,0.90,1.12,1.24,1.32,1.41,1.45<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> %一致性指标\n<span class=\"token punctuation\">[</span>x,y<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>eig<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlamda<span class=\"token operator\">=</span>max<span class=\"token punctuation\">(</span>diag<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\nnum<span class=\"token operator\">=</span>find<span class=\"token punctuation\">(</span>diag<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>lamda<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nw0<span class=\"token operator\">=</span>x<span class=\"token punctuation\">(</span>:,num<span class=\"token punctuation\">)</span>/sum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">(</span>:,num<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\ncr0<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>lamda-n1<span class=\"token punctuation\">)</span>/<span class=\"token punctuation\">(</span>n1-1<span class=\"token punctuation\">)</span>/ri<span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span>1:n1\n<span class=\"token punctuation\">[</span>x,y<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>eig<span class=\"token punctuation\">(</span>eval<span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span>,int2str<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlamda<span class=\"token operator\">=</span>max<span class=\"token punctuation\">(</span>diag<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\nnum<span class=\"token operator\">=</span>find<span class=\"token punctuation\">(</span>diag<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>lamda<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nw1<span class=\"token punctuation\">(</span>:,i<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>x<span class=\"token punctuation\">(</span>:,num<span class=\"token punctuation\">)</span>/sum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">(</span>:,num<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\ncr1<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>lamda-n2<span class=\"token punctuation\">)</span>/<span class=\"token punctuation\">(</span>n2-1<span class=\"token punctuation\">)</span>/ri<span class=\"token punctuation\">(</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nend\ncr1, ts<span class=\"token operator\">=</span>w1*w0, cr<span class=\"token operator\">=</span>cr1*w0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<p>纯文本文件txt3.txt中的数据格式如下：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">1 1 1 4 1 1/2\n1 1 2 4 1 1/2\n1 1/2 1 5 3 1/2\n1/4 1/4 1/5 1  1/3 1/3\n1 1 1/3 3  1 1\n2 2 2 3 3 1\n1 1/4 1/2\n4 1 3\n2 1/3 1\n1 1/4 1/5\n4 1 1/2\n5 2 1\n1 3 1/3\n1/3 1 1/7\n3 7 1\n1 1/3 5\n3 1 7\n1/5 1/7 1\n1 1 7\n1 1 7\n1/7 1/7 1\n1 7 9\n1/7 1 1\n1/9 1 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<p><strong>层次分析法（Analytic Hierarchy Process，简称 AHP）</strong>是对一些较为复杂、较为模糊的问题作出决策的简易方法，它特别适用于那些难于完全定量分析的问题。它是美国运筹学家 T. L. Saaty 教授于上世纪 70 年代初期提出的一种简便、灵活而又实用的多准则决策方法。</p>\n<h1 id=\"§1-层次分析法的基本原理与步骤\"><a href=\"#§1-层次分析法的基本原理与步骤\" class=\"headerlink\" title=\"§1 层次分析法的基本原理与步骤\"></a>§1 层次分析法的基本原理与步骤</h1><p>人们在进行社会的、经济的以及科学管理领域问题的系统分析中，面临的常常是一个由相互关联、相互制约的众多因素构成的复杂而往往缺少定量数据的系统。层次分析法为这类问题的决策和排序提供了一种新的、简洁而实用的建模方法。</p>\n<p>运用层次分析法建模，大体上可按下面四个步骤进行：</p>\n<ul>\n<li>（i）建立递阶层次结构模型；</li>\n<li>（ii）构造出各层次中的所有判断矩阵；</li>\n<li>（iii）层次单排序及一致性检验；</li>\n<li>（iv）层次总排序及一致性检验。</li>\n</ul>\n<p>下面分别说明这四个步骤的实现过程。</p>\n<h2 id=\"1-1-递阶层次结构的建立与特点\"><a href=\"#1-1-递阶层次结构的建立与特点\" class=\"headerlink\" title=\"1.1 递阶层次结构的建立与特点\"></a>1.1 递阶层次结构的建立与特点</h2><p>应用 AHP 分析决策问题时，首先要把问题条理化、层次化，构造出一个有层次的结构模型。在这个模型下，复杂问题被分解为元素的组成部分。这些元素又按其属性及关系形成若干层次。上一层次的元素作为准则对下一层次有关元素起支配作用。</p>\n<p>这些层次可以分为三类：</p>\n<ul>\n<li>最高层：这一层次中只有一个元素，一般它是分析问题的预定目标或理想结果，因此也称为目标层。</li>\n<li>中间层：这一层次中包含了为实现目标所涉及的中间环节，它可以由若干个层次组成，包括所需考虑的准则、子准则，因此也称为准则层。</li>\n<li>最底层：这一层次包括了为实现目标可供选择的各种措施、决策方案等，因此也称为措施层或方案层。</li>\n</ul>\n<p>递阶层次结构中的层次数与问题的复杂程度及需要分析的详尽程度有关，一般地层次数不受限制。每一层次中各元素所支配的元素一般不要超过 9 个。这是因为支配的元素过多会给两两比较判断带来困难。</p>\n<blockquote>\n<p>下面结合一个实例来说明递阶层次结构的建立</p>\n</blockquote>\n<p>假期旅游有P1 、P2 、P3 个旅游胜地供你选择，试确定一个最佳地点。在此问题中，你会根据诸如景色、费用、居住、饮食和旅途条件等一些准则去反复比较 3 个侯选地点。可以建立如图 1 的层次结构模型。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040518094884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt>​​</p>\n<h2 id=\"1-2-构造判断矩阵\"><a href=\"#1-2-构造判断矩阵\" class=\"headerlink\" title=\"1.2 构造判断矩阵\"></a>1.2 构造判断矩阵</h2><p>层次结构反映了因素之间的关系，但准则层中的各准则在目标衡量中所占的比重并不一定相同，在决策者的心目中，它们各占有一定的比例。</p>\n<p>在确定影响某因素的诸因子 在该因素中所占的比重时，遇到的主要困难是这些比重常常不易定量化。此外，当影响某因素的因子较多时，直接考虑各因子对该因素有多大程度的影响时，常常会因考虑不周全、顾此失彼而使决策者提出与他实际认为的重要性程度不相一致的数据，甚至有可能提出一组隐含矛盾的数据。</p>\n<p><strong>为看清这一点，可作如下假设：</strong></p>\n<p>将一块重为 1 千克的石块砸成 n 小块，你可以精确称出它们的重量，<br>设为w1,w2,…,wn，现在，请人估计这 n 小块的重量占总重量的比例（不能让他知道各小石块的重量），此人不仅很难给出精确的比值，而且完全可能因顾此失彼而提供彼此矛盾的数据。</p>\n<p><img src=\"https://i.loli.net/2020/12/09/EMFNe84xcYR9tnJ.png\" alt></p>\n<p><em>定义 1</em>  若矩阵<img src=\"https://i.loli.net/2020/12/09/7HAEmKg3Twe4Ijz.png\" alt>满足</p>\n<p><img src=\"https://i.loli.net/2020/12/09/WiIGXFduNUAa5Sf.png\" alt></p>\n<p>关于如何确定aij的值，Saaty 等建议引用数字 1<del>9 及其倒数作为标度。表 1 列出了 1</del>9 标度的含义：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405182514824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>从心理学观点来看，分级太多会超越人们的判断能力，既增加了作判断的难度，又容易因此而提供虚假数据。Saaty 等人还用实验方法比较了在各种不同标度下人们判断结果的正确性，实验结果也表明，采用 1~9 标度最为合适。</p>\n<p>最后，应该指出，一般地作n(n-1)/2次两两判断是必要的。有人认为把所有元素都和某个元素比较，即只作n - 1次比较就可以了。这种作法的弊病在于，任何一个判断的失误均可导致不合理的排序，而个别判断的失误对于难以定量的系统往往是难以<br>避免的。进行n(n-1)/2次比较可以提供更多的信息，通过各种不同角度的反复比较，从而导出一个合理的排序。</p>\n<h2 id=\"1-3-层次单排序及一致性检验\"><a href=\"#1-3-层次单排序及一致性检验\" class=\"headerlink\" title=\"1.3 层次单排序及一致性检验\"></a>1.3 层次单排序及一致性检验</h2><p>判断矩阵 A 对应于最大特征值的特征向量 W ，经归一化后即为同一层次相应因素对于上一层次某因素相对重要性的排序权值，这一过程称为层次单排序。上述构造成对比较判断矩阵的办法虽能减少其它因素的干扰，较客观地反映出一对因子影响力的差别。但综合全部比较结果时，其中难免包含一定程度的非一致性。如果比较结果是前后完全一致的，则矩阵 A 的元素还应当满足：</p>\n<p><img src=\"https://i.loli.net/2020/12/09/XGfBr92h4c3oaKw.png\" alt>                          (1)</p>\n<p><em>定义 2 </em> 满足关系式（1）的正互反矩阵称为一致矩阵。<br>需要检验构造出来的（正互反）判断矩阵 A 是否严重地非一致，以便确定是否接受 A 。</p>\n<p><strong>定理 1</strong> 正互反矩阵 A 的最大特征根必为正实数，其对应特征向量的所有分量均为正实数。 A 的其余特征值的模均严格小于。</p>\n<p><strong>定理 2</strong>  若 A 为一致矩阵，则</p>\n<ul>\n<li>（i） A 必为正互反矩阵。</li>\n<li>（ii） A 的转置矩阵AT 也是一致矩阵。</li>\n<li>（iii） A 的任意两行成比例，比例因子大于零，从而 rank(A) = 1 （同样， A 的任意两列也成比例）。</li>\n<li>（iv） A 的最大特征值 λmax=n，其中 n 为矩阵 A 的阶。 A 的其余特征根均为零。</li>\n<li>（v）若 A 的最大特征值λmax对应的特征向量为 </li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/12/09/tf1AZIncFTsMqwQ.png\" alt></p>\n<p>即</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405183900857.png\" alt></p>\n<p><strong>定理 3</strong>  n 阶正互反矩阵 A 为一致矩阵当且仅当其最大特征根 λmax=n ，且当正互反矩阵 A 非一致时，必有 λmax&gt;n 。</p>\n<p>根据定理 3，我们可以由 λmax 是否等于 n 来检验判断矩阵 A 是否为一致矩阵。由于特征根连续地依赖于 ，故 λmax 比 n 大得越多， A 的非一致性程度也就越严重，λmax 对应的标准化特征向量也就越不能真实地反映出X={x1,x2,…,xn}在对因素 Z的影响中所占的比重。因此，对决策者提供的判断矩阵有必要作一次一致性检验，以决定是否能接受它。</p>\n<p><strong>对判断矩阵的一致性检验的步骤如下：</strong></p>\n<p>（i）计算一致性指标 CI</p>\n<p><img src=\"https://i.loli.net/2020/12/09/inFvq9dM7phwUT1.png\" alt></p>\n<p>（ii）查找相应的平均随机一致性指标 RI 。对n=1,2,…,9 ，Saaty 给出了 RI 的值，如表 2 所示。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200405185016252.png\" alt></p>\n<p>RI 的值是这样得到的，用随机方法构造 500 个样本矩阵：随机地从 1~9 及其倒数中抽取数字构造正互反矩阵，求得最大特征根的平均值</p>\n<p><img src=\"https://i.loli.net/2020/12/09/9KGEbd6ViehrHXq.png\" alt></p>\n<p>（ⅲ）计算一致性比例 CR</p>\n<p><img src=\"https://i.loli.net/2020/12/09/gyJHE8pfLZ2M3Fj.png\" alt></p>\n<p>当 10 . 0 &lt; CR 时，认为判断矩阵的一致性是可以接受的，否则应对判断矩阵作适当修正。</p>\n<h2 id=\"1-4-层次总排序及一致性检验\"><a href=\"#1-4-层次总排序及一致性检验\" class=\"headerlink\" title=\"1.4 层次总排序及一致性检验\"></a>1.4 层次总排序及一致性检验</h2><p>上面我们得到的是一组元素对其上一层中某元素的权重向量。我们最终要得到各元素，特别是最低层中各方案对于目标的排序权重，从而进行方案选择。总排序权重要自上而下地将单准则下的权重进行合成。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020040518535265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p>设上一层次（ A 层）包含 A1,A2,…,Am 共 m 个因素，它们的层次总排序权重分别为 a1,a2,…,am。又设其后的下一层次（ B 层）包含 n 个因素 B1,B2,…,Bn，它们关于 Aj 的层次单排序权重分别为 b1j,b2j,…,bnj（当 Bi 与 Aj 无关联时， bij=0 ）。现求 B 层中各因素关于总目标的权重 b1,b2,…,bn，即求 B 层各因素的层次总排序权重，计算按表 3 所示方式进行，即</p>\n<p><img src=\"https://i.loli.net/2020/12/09/JLoDcEHdUkFSx9w.png\" alt></p>\n<p>对层次总排序也需作一致性检验，检验仍象层次总排序那样由高层到低层逐层进行。这是因为虽然各层次均已经过层次单排序的一致性检验，各成对比较判断矩阵都已具有较为满意的一致性。但当综合考察时，各层次的非一致性仍有可能积累起来，引起最终分析结果较严重的非一致性。</p>\n<p>设 B 层中与 Aj 相关的因素的成对比较判断矩阵在单排序中经一致性检验，求得单排序一致性指标为  CI(j) ,（ j = 1,2,…,m），相应的平均随机一致性指标为 RI(j)(RI(j), CI(j)已在层次单排序时求得），则 B 层总排序随机一致性比例为</p>\n<p><img src=\"https://i.loli.net/2020/12/09/VDELIlaMrpStyzX.png\" alt></p>\n<p>当 10 . 0 &lt; CR 时，认为层次总排序结果具有较满意的一致性并接受该分析结果。</p>\n<h1 id=\"§2-层次分析法的应用\"><a href=\"#§2-层次分析法的应用\" class=\"headerlink\" title=\"§2 层次分析法的应用\"></a>§2 层次分析法的应用</h1><p>在应用层次分析法研究问题时，遇到的主要困难有两个：</p>\n<ul>\n<li>（i）如何根据实际情况抽象出较为贴切的层次结构；</li>\n<li>（ii）如何将某些定性的量作比较接近实际定量化处理。层次分析法对人们的思维过程进行了加工整理，提出了一套系统分析问题的方法，为科学管理和决策提供了较有说服力的依据。</li>\n</ul>\n<p>但层次分析法也有其局限性，主要表现在：</p>\n<ul>\n<li><p>（i）它在很大程度上依赖于人们的经验，主观因素的影响很大，它至多只能排除思维过程中的严重非一致性，却无法排除决策者个人可能存在的严重片面性。</p>\n</li>\n<li><p>（ii）比较、判断过程较为粗糙，不能用于精度要求较高的决策问题。AHP 至多只能算是一种半定量（或定性与定量结合）的方法。在应用层次分析法时，建立层次结构模型是十分关键的一步。现再分析一个实例，以便说明如何从实际问题中抽象出相应的层次结构。</p>\n<p>Matlab 程序如下：</p>\n<pre><code class=\"bash\">clc,clear\nfid=fopen(&#39;txt3.txt&#39;,&#39;r&#39;);\nn1=6;n2=3;\na=[];\nfor i=1:n1\ntmp=str2num(fgetl(fid));\na=[a;tmp]; %读准则层判断矩阵\nend\nfor i=1:n1\nstr1=char([&#39;b&#39;,int2str(i),&#39;=[];&#39;]);\nstr2=char([&#39;b&#39;,int2str(i),&#39;=[b&#39;,int2str(i),&#39;;tmp];&#39;]);\neval(str1);\nfor j=1:n2\ntmp=str2num(fgetl(fid));\neval(str2); %读方案层的判断矩阵\nend\nend\nri=[0,0,0.58,0.90,1.12,1.24,1.32,1.41,1.45]; %一致性指标\n[x,y]=eig(a);\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw0=x(:,num)/sum(x(:,num));\ncr0=(lamda-n1)/(n1-1)/ri(n1)\nfor i=1:n1\n[x,y]=eig(eval(char([&#39;b&#39;,int2str(i)])));\nlamda=max(diag(y));\nnum=find(diag(y)==lamda);\nw1(:,i)=x(:,num)/sum(x(:,num));\ncr1(i)=(lamda-n2)/(n2-1)/ri(n2);\nend\ncr1, ts=w1*w0, cr=cr1*w0</code></pre>\n</li>\n</ul>\n<p>纯文本文件txt3.txt中的数据格式如下：</p>\n<pre><code class=\"bash\">1 1 1 4 1 1/2\n1 1 2 4 1 1/2\n1 1/2 1 5 3 1/2\n1/4 1/4 1/5 1  1/3 1/3\n1 1 1/3 3  1 1\n2 2 2 3 3 1\n1 1/4 1/2\n4 1 3\n2 1/3 1\n1 1/4 1/5\n4 1 1/2\n5 2 1\n1 3 1/3\n1/3 1 1/7\n3 7 1\n1 1/3 5\n3 1 7\n1/5 1/7 1\n1 1 7\n1 1 7\n1/7 1/7 1\n1 7 9\n1/7 1 1\n1/9 1 1</code></pre>\n"},{"title":"计算机下SSL安全网络通信","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-14T00:21:38.000Z","password":null,"summary":"SSL介于应用层和网络层之间，位于传输层。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。","_content":"\n# SSL安全套接层\n\n**SSL安全套接层（Secure Socket Layer）** 为Netspace所研发，用以保证在Internet上数据传输的完整性和保密性，目前版本为3.0，最新版本为TLS1.2安全传输层协议（Transport Layer Security）。TLS和SSL两者差别极小可以将其理解为SSL的更新版本。\n\n\n# 通信过程\n\n**SSL介于应用层和网络层之间，位于传输层**。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。\n\n通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。\n\n**调用SSL提供的接口流程如下图所示：**\n\n1. 客户端的浏览器向服务器传送其所支持的SSL协议的版本号，加密算法，随机数，已经其他通讯所需的信息；\n\n2. 服务端根据客户端传送的信息选择双方都支持的SSL协议版本，加密算法等信息和自己的证书传送到客户端（该步骤中可能会存在安全隐患，例如伪造客户端可支持的SSL协议版本过低，可能会导致服务端采取安全等级过低的SSL版本来进行通信）；\n\n3. 客户端利用服务器传送过来的信息来验证服务器的合法性，包括证书是否已经过期、证书的颁发机构是否可靠、公钥是否匹配、证书上的域名和服务器端的是否匹配等，如果验证不通过则断开通讯，验证通过则继续通讯；\n\n4. 客户端随机产生一个用于通讯加密的对称密码，通过公钥对其进行加密，然后将加密后的预主密码传给服务器；\n\n5. 服务器通过自己的私钥进行解密来获得通讯加密所使用的预主密码，然后使用一系列算法来产生主通讯密码（客户端也将通过相同的方式来产生相同的主通讯密码）；\n\n6. 客户端向服务器发出信息，指明后续的数据通讯将使用加解密的主密码为上以阶段生成的主通讯密码，同时通知服务端客户端的握手过程结束；\n\n7. 服务端同样想客户端指明通讯密码并确认握手过程结束；\n\n8. 握手过程结束。SSL安全通道数据通讯开始，客户端和服务器开始使用相同的对称秘钥进行数据通讯，同时进行通讯完整性校验。\n\n![调用SSL提供的接口流程](https://img-blog.csdnimg.cn/20201214080900848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70) \n\n# SSL通讯建立后\n\n从上述通讯过程可以看出，在ssl通讯建立起来之后，不考虑ssl版本上的一些漏洞，通信过程是很安全的，可以有效的防止中间人攻击和运营商劫持等问题，通讯数据的保密性和完整性得到了有效保证。所以针对SSL的相关攻击必须建立在其会话的初始化阶段，例如进行中间人攻击必须在会话建立过程中实现，即在通讯过程中攻击者伪造一个证书，对客户端声称该证书就是服务器证书来骗过客户端，使其信任该证书，并使用该证书来进行通讯，这样用户通讯的信息就会被第三监听，通讯保密性和完整性就被破坏。这种攻击方式也有一定的局限，当使用伪造的证书来建立通讯时，一般攻击者不会获得经过官方机构认证的证书，客户端的浏览器就会发过警告，提醒通信不安全，可以参考访问12306时的浏览器的提示（因为12306使用的是其自建的ca颁发的证书，没有经过官方机构的认证，所以浏览器就默认会认为其证书不安全，并提出告警）。\n\n\n\n# 绕过浏览器校验\n\n尽管通过浏览器去检验证书的合法性会提高攻击的成本，但在某些特殊情况下，还是会绕过浏览器的校验。例如：当我们使用fiddler和Charles这一类的抓包工具时，可以手动将他们的证书添加成为可信证书，所以当我们利用这些工具在本地对相关的系统进行逻辑分析时，并不会收到浏览器的告警。而且浏览器的校验仅仅针对的是web端的应用，对于移动端和其他非web端的应用只能通过其他方式来进行防护，一种比较通用的实现方式是使用SSL Pinning即证书绑定。\n\n# SSL的工作原理中包含三个协议\n\n## 1、握手协议\n\n握手协议是客户端和服务器用于与SSL连接通信的第一个子协议。握手协议包括客户端和服务器之间的一系列消息。SSL中最复杂的协议是握手协议。该协议允许服务器和客户端相互进行身份验证，协商加密和MAC算法，以及保密SSL密钥以保护SSL记录中发送的数据。在应用程序的数据传输之前使用握手协议。\n\n## 2、记录协议\n\n在客户端和服务器握手成功之后使用记录协议，即客户端和服务器相互认证并确定安全信息交换使用的算法，并输入SSL记录协议，该协议为SSL提供两种服务连接：\n\n - **(1)保密性**：使用握手协议定义的秘密密钥实现\n - **(2)完整性**：握手协议定义了MAC，用于保证消息完整性\n\n## 3、警报协议\n\n客户机和服务器发现错误时，向对方发送一个警报消息。如果是致命错误，则算法立即关闭SSL连接，双方还会先删除相关的会话号，秘密和密钥。每个警报消息共2个字节，第1个字节表示错误类型，如果是警报，则值为1，如果是致命错误，则值为2;第2个字节制定实际错误类型。\n\n# 证书的工作流程\n\n1. 用户连接到你的Web站点，该Web站点受服务器证书所保护。(可由查看URL的开头是否为\"https:\"来进行辩识，或浏览器会提供你相关的信息)。\n\n2. 你的服务器进行响应，并自动传送你网站的数字证书给用户，用于鉴别你的网站。\n\n3. 用户的网页浏览器程序产生一把唯一的“会话钥匙码，用以跟网站之间所有的通讯过程进行加密。\n\n4. 使用者的浏览器以网站的公钥对交谈钥匙码进行加密，以便只有让你的网站得以阅读此交谈钥匙码。\n\n# 服务器端代码实现\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <openssl/ssl.h>\n#include <openssl/err.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netinet/in.h>\n\n#define CERT_FILE  \"./cert/server.crt\"\n#define KEY_FILE   \"./cert/server.key\"\n\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int listenfd, newfd;\n    struct sockaddr_in ser, cli;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_server_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_certificate_file(ctx, CERT_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_PrivateKey_file(ctx, KEY_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (1 != SSL_CTX_check_private_key(ctx)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = htonl(INADDR_ANY);\n    ser.sin_port = htons(atoi(argv[1]));\n\n    if (-1 == bind(listenfd, (struct sockaddr*)&ser, sizeof(struct sockaddr))) {\n        perror(\"bind\");\n        exit(-1);\n    }\n    if (-1 == listen(listenfd, 5)) {\n        perror(\"listen\");\n        exit(-1);\n    }\n\n    for (;;) {\n        socklen_t size = sizeof(struct sockaddr);\n        if (-1 == (newfd = accept(listenfd, (struct sockaddr*)&cli, &size))) {\n            perror(\"accept\");\n            break;\n        }\n        SSL *ssl = SSL_new(ctx);\n        SSL_set_fd(ssl, newfd);\n        if (-1 == SSL_accept(ssl)) {\n            ERR_print_errors_fp(stderr);\n            close(newfd);\n            break;\n        }\n        {\n            char buf[256]; int len;\n            while ((len = SSL_read(ssl, buf, sizeof(buf))) > 0) {\n                buf[len] = 0;\n                printf(\"%s\", buf);\n                SSL_write(ssl, buf, len);\n            }\n            SSL_shutdown(ssl);\n            SSL_free(ssl);\n            close(newfd);\n        }\n    }\n    SSL_CTX_free(ctx);\n    close(listenfd);\n    return 0;\n}\n```\n# 客服端代码实现\n\n```cpp\n#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netinet/in.h>\n#include <openssl/ssl.h>\n#include <openssl/err.h>\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int sockfd;\n    struct sockaddr_in ser;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_client_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = inet_addr(argv[1]);\n    ser.sin_port = htons(atoi(argv[2]));\n    if (-1 == connect(sockfd, (struct sockaddr*)&ser, sizeof(ser))) {\n        perror(\"connect\");\n        exit(-1);\n    }\n    SSL *ssl = SSL_new(ctx);\n    SSL_set_fd(ssl, sockfd);\n    if (-1 == SSL_connect(ssl)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    {\n        char buf[256]; int len;\n        freopen(\"/etc/passwd\", \"r\", stdin);\n        while (fgets(buf, sizeof(buf), stdin)) {\n            len = strlen(buf);\n            if (SSL_write(ssl, buf, len) > 0) {\n                buf[0] = 0;\n                len = SSL_read(ssl, buf, sizeof(buf));\n                if (len > 0) {\n                    buf[len] = 0;\n                    printf(\"%s\", buf);\n                }\n            }\n        }\n        SSL_shutdown(ssl);\n        SSL_free(ssl);\n    }\n    close(sockfd);\n    SSL_CTX_free(ctx);\n    return 0;\n}\n```\n# 资源传送门\n\n - L关注【**做一个柔情的程序猿**】公众号\n - 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n - 自己搭建的博客地址：[梦魇回生的博客](https://gain-wyj.cn/)\n\n# 「❤️ 感谢大家」\n\n - 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n - 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程","source":"_posts/SSL-secure-network-communication.md","raw":"---\ntitle: 计算机下SSL安全网络通信\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-14 08:21:38\npassword:\nsummary: SSL介于应用层和网络层之间，位于传输层。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。\ntags: \n- SSL\n- 网络通信\n- 安全\ncategories: \n- 计算机\n---\n\n# SSL安全套接层\n\n**SSL安全套接层（Secure Socket Layer）** 为Netspace所研发，用以保证在Internet上数据传输的完整性和保密性，目前版本为3.0，最新版本为TLS1.2安全传输层协议（Transport Layer Security）。TLS和SSL两者差别极小可以将其理解为SSL的更新版本。\n\n\n# 通信过程\n\n**SSL介于应用层和网络层之间，位于传输层**。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。\n\n通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。\n\n**调用SSL提供的接口流程如下图所示：**\n\n1. 客户端的浏览器向服务器传送其所支持的SSL协议的版本号，加密算法，随机数，已经其他通讯所需的信息；\n\n2. 服务端根据客户端传送的信息选择双方都支持的SSL协议版本，加密算法等信息和自己的证书传送到客户端（该步骤中可能会存在安全隐患，例如伪造客户端可支持的SSL协议版本过低，可能会导致服务端采取安全等级过低的SSL版本来进行通信）；\n\n3. 客户端利用服务器传送过来的信息来验证服务器的合法性，包括证书是否已经过期、证书的颁发机构是否可靠、公钥是否匹配、证书上的域名和服务器端的是否匹配等，如果验证不通过则断开通讯，验证通过则继续通讯；\n\n4. 客户端随机产生一个用于通讯加密的对称密码，通过公钥对其进行加密，然后将加密后的预主密码传给服务器；\n\n5. 服务器通过自己的私钥进行解密来获得通讯加密所使用的预主密码，然后使用一系列算法来产生主通讯密码（客户端也将通过相同的方式来产生相同的主通讯密码）；\n\n6. 客户端向服务器发出信息，指明后续的数据通讯将使用加解密的主密码为上以阶段生成的主通讯密码，同时通知服务端客户端的握手过程结束；\n\n7. 服务端同样想客户端指明通讯密码并确认握手过程结束；\n\n8. 握手过程结束。SSL安全通道数据通讯开始，客户端和服务器开始使用相同的对称秘钥进行数据通讯，同时进行通讯完整性校验。\n\n![调用SSL提供的接口流程](https://img-blog.csdnimg.cn/20201214080900848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70) \n\n# SSL通讯建立后\n\n从上述通讯过程可以看出，在ssl通讯建立起来之后，不考虑ssl版本上的一些漏洞，通信过程是很安全的，可以有效的防止中间人攻击和运营商劫持等问题，通讯数据的保密性和完整性得到了有效保证。所以针对SSL的相关攻击必须建立在其会话的初始化阶段，例如进行中间人攻击必须在会话建立过程中实现，即在通讯过程中攻击者伪造一个证书，对客户端声称该证书就是服务器证书来骗过客户端，使其信任该证书，并使用该证书来进行通讯，这样用户通讯的信息就会被第三监听，通讯保密性和完整性就被破坏。这种攻击方式也有一定的局限，当使用伪造的证书来建立通讯时，一般攻击者不会获得经过官方机构认证的证书，客户端的浏览器就会发过警告，提醒通信不安全，可以参考访问12306时的浏览器的提示（因为12306使用的是其自建的ca颁发的证书，没有经过官方机构的认证，所以浏览器就默认会认为其证书不安全，并提出告警）。\n\n\n\n# 绕过浏览器校验\n\n尽管通过浏览器去检验证书的合法性会提高攻击的成本，但在某些特殊情况下，还是会绕过浏览器的校验。例如：当我们使用fiddler和Charles这一类的抓包工具时，可以手动将他们的证书添加成为可信证书，所以当我们利用这些工具在本地对相关的系统进行逻辑分析时，并不会收到浏览器的告警。而且浏览器的校验仅仅针对的是web端的应用，对于移动端和其他非web端的应用只能通过其他方式来进行防护，一种比较通用的实现方式是使用SSL Pinning即证书绑定。\n\n# SSL的工作原理中包含三个协议\n\n## 1、握手协议\n\n握手协议是客户端和服务器用于与SSL连接通信的第一个子协议。握手协议包括客户端和服务器之间的一系列消息。SSL中最复杂的协议是握手协议。该协议允许服务器和客户端相互进行身份验证，协商加密和MAC算法，以及保密SSL密钥以保护SSL记录中发送的数据。在应用程序的数据传输之前使用握手协议。\n\n## 2、记录协议\n\n在客户端和服务器握手成功之后使用记录协议，即客户端和服务器相互认证并确定安全信息交换使用的算法，并输入SSL记录协议，该协议为SSL提供两种服务连接：\n\n - **(1)保密性**：使用握手协议定义的秘密密钥实现\n - **(2)完整性**：握手协议定义了MAC，用于保证消息完整性\n\n## 3、警报协议\n\n客户机和服务器发现错误时，向对方发送一个警报消息。如果是致命错误，则算法立即关闭SSL连接，双方还会先删除相关的会话号，秘密和密钥。每个警报消息共2个字节，第1个字节表示错误类型，如果是警报，则值为1，如果是致命错误，则值为2;第2个字节制定实际错误类型。\n\n# 证书的工作流程\n\n1. 用户连接到你的Web站点，该Web站点受服务器证书所保护。(可由查看URL的开头是否为\"https:\"来进行辩识，或浏览器会提供你相关的信息)。\n\n2. 你的服务器进行响应，并自动传送你网站的数字证书给用户，用于鉴别你的网站。\n\n3. 用户的网页浏览器程序产生一把唯一的“会话钥匙码，用以跟网站之间所有的通讯过程进行加密。\n\n4. 使用者的浏览器以网站的公钥对交谈钥匙码进行加密，以便只有让你的网站得以阅读此交谈钥匙码。\n\n# 服务器端代码实现\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <openssl/ssl.h>\n#include <openssl/err.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netinet/in.h>\n\n#define CERT_FILE  \"./cert/server.crt\"\n#define KEY_FILE   \"./cert/server.key\"\n\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int listenfd, newfd;\n    struct sockaddr_in ser, cli;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_server_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_certificate_file(ctx, CERT_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_PrivateKey_file(ctx, KEY_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (1 != SSL_CTX_check_private_key(ctx)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = htonl(INADDR_ANY);\n    ser.sin_port = htons(atoi(argv[1]));\n\n    if (-1 == bind(listenfd, (struct sockaddr*)&ser, sizeof(struct sockaddr))) {\n        perror(\"bind\");\n        exit(-1);\n    }\n    if (-1 == listen(listenfd, 5)) {\n        perror(\"listen\");\n        exit(-1);\n    }\n\n    for (;;) {\n        socklen_t size = sizeof(struct sockaddr);\n        if (-1 == (newfd = accept(listenfd, (struct sockaddr*)&cli, &size))) {\n            perror(\"accept\");\n            break;\n        }\n        SSL *ssl = SSL_new(ctx);\n        SSL_set_fd(ssl, newfd);\n        if (-1 == SSL_accept(ssl)) {\n            ERR_print_errors_fp(stderr);\n            close(newfd);\n            break;\n        }\n        {\n            char buf[256]; int len;\n            while ((len = SSL_read(ssl, buf, sizeof(buf))) > 0) {\n                buf[len] = 0;\n                printf(\"%s\", buf);\n                SSL_write(ssl, buf, len);\n            }\n            SSL_shutdown(ssl);\n            SSL_free(ssl);\n            close(newfd);\n        }\n    }\n    SSL_CTX_free(ctx);\n    close(listenfd);\n    return 0;\n}\n```\n# 客服端代码实现\n\n```cpp\n#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <arpa/inet.h>\n#include <netinet/in.h>\n#include <openssl/ssl.h>\n#include <openssl/err.h>\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int sockfd;\n    struct sockaddr_in ser;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_client_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = inet_addr(argv[1]);\n    ser.sin_port = htons(atoi(argv[2]));\n    if (-1 == connect(sockfd, (struct sockaddr*)&ser, sizeof(ser))) {\n        perror(\"connect\");\n        exit(-1);\n    }\n    SSL *ssl = SSL_new(ctx);\n    SSL_set_fd(ssl, sockfd);\n    if (-1 == SSL_connect(ssl)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    {\n        char buf[256]; int len;\n        freopen(\"/etc/passwd\", \"r\", stdin);\n        while (fgets(buf, sizeof(buf), stdin)) {\n            len = strlen(buf);\n            if (SSL_write(ssl, buf, len) > 0) {\n                buf[0] = 0;\n                len = SSL_read(ssl, buf, sizeof(buf));\n                if (len > 0) {\n                    buf[len] = 0;\n                    printf(\"%s\", buf);\n                }\n            }\n        }\n        SSL_shutdown(ssl);\n        SSL_free(ssl);\n    }\n    close(sockfd);\n    SSL_CTX_free(ctx);\n    return 0;\n}\n```\n# 资源传送门\n\n - L关注【**做一个柔情的程序猿**】公众号\n - 在【**做一个柔情的程序猿**】公众号后台回复 【**python资料**】【**2020秋招**】 即可获取相应的惊喜哦！\n - 自己搭建的博客地址：[梦魇回生的博客](https://gain-wyj.cn/)\n\n# 「❤️ 感谢大家」\n\n - 点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）\n - 欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程","slug":"SSL-secure-network-communication","published":1,"updated":"2020-12-14T00:24:22.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsw000lksvbjpbil34m","content":"<h1 id=\"SSL安全套接层\"><a href=\"#SSL安全套接层\" class=\"headerlink\" title=\"SSL安全套接层\"></a>SSL安全套接层</h1><p><strong>SSL安全套接层（Secure Socket Layer）</strong> 为Netspace所研发，用以保证在Internet上数据传输的完整性和保密性，目前版本为3.0，最新版本为TLS1.2安全传输层协议（Transport Layer Security）。TLS和SSL两者差别极小可以将其理解为SSL的更新版本。</p>\n<h1 id=\"通信过程\"><a href=\"#通信过程\" class=\"headerlink\" title=\"通信过程\"></a>通信过程</h1><p><strong>SSL介于应用层和网络层之间，位于传输层</strong>。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。</p>\n<p>通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。</p>\n<p><strong>调用SSL提供的接口流程如下图所示：</strong></p>\n<ol>\n<li><p>客户端的浏览器向服务器传送其所支持的SSL协议的版本号，加密算法，随机数，已经其他通讯所需的信息；</p>\n</li>\n<li><p>服务端根据客户端传送的信息选择双方都支持的SSL协议版本，加密算法等信息和自己的证书传送到客户端（该步骤中可能会存在安全隐患，例如伪造客户端可支持的SSL协议版本过低，可能会导致服务端采取安全等级过低的SSL版本来进行通信）；</p>\n</li>\n<li><p>客户端利用服务器传送过来的信息来验证服务器的合法性，包括证书是否已经过期、证书的颁发机构是否可靠、公钥是否匹配、证书上的域名和服务器端的是否匹配等，如果验证不通过则断开通讯，验证通过则继续通讯；</p>\n</li>\n<li><p>客户端随机产生一个用于通讯加密的对称密码，通过公钥对其进行加密，然后将加密后的预主密码传给服务器；</p>\n</li>\n<li><p>服务器通过自己的私钥进行解密来获得通讯加密所使用的预主密码，然后使用一系列算法来产生主通讯密码（客户端也将通过相同的方式来产生相同的主通讯密码）；</p>\n</li>\n<li><p>客户端向服务器发出信息，指明后续的数据通讯将使用加解密的主密码为上以阶段生成的主通讯密码，同时通知服务端客户端的握手过程结束；</p>\n</li>\n<li><p>服务端同样想客户端指明通讯密码并确认握手过程结束；</p>\n</li>\n<li><p>握手过程结束。SSL安全通道数据通讯开始，客户端和服务器开始使用相同的对称秘钥进行数据通讯，同时进行通讯完整性校验。</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201214080900848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"调用SSL提供的接口流程\"> </p>\n<h1 id=\"SSL通讯建立后\"><a href=\"#SSL通讯建立后\" class=\"headerlink\" title=\"SSL通讯建立后\"></a>SSL通讯建立后</h1><p>从上述通讯过程可以看出，在ssl通讯建立起来之后，不考虑ssl版本上的一些漏洞，通信过程是很安全的，可以有效的防止中间人攻击和运营商劫持等问题，通讯数据的保密性和完整性得到了有效保证。所以针对SSL的相关攻击必须建立在其会话的初始化阶段，例如进行中间人攻击必须在会话建立过程中实现，即在通讯过程中攻击者伪造一个证书，对客户端声称该证书就是服务器证书来骗过客户端，使其信任该证书，并使用该证书来进行通讯，这样用户通讯的信息就会被第三监听，通讯保密性和完整性就被破坏。这种攻击方式也有一定的局限，当使用伪造的证书来建立通讯时，一般攻击者不会获得经过官方机构认证的证书，客户端的浏览器就会发过警告，提醒通信不安全，可以参考访问12306时的浏览器的提示（因为12306使用的是其自建的ca颁发的证书，没有经过官方机构的认证，所以浏览器就默认会认为其证书不安全，并提出告警）。</p>\n<h1 id=\"绕过浏览器校验\"><a href=\"#绕过浏览器校验\" class=\"headerlink\" title=\"绕过浏览器校验\"></a>绕过浏览器校验</h1><p>尽管通过浏览器去检验证书的合法性会提高攻击的成本，但在某些特殊情况下，还是会绕过浏览器的校验。例如：当我们使用fiddler和Charles这一类的抓包工具时，可以手动将他们的证书添加成为可信证书，所以当我们利用这些工具在本地对相关的系统进行逻辑分析时，并不会收到浏览器的告警。而且浏览器的校验仅仅针对的是web端的应用，对于移动端和其他非web端的应用只能通过其他方式来进行防护，一种比较通用的实现方式是使用SSL Pinning即证书绑定。</p>\n<h1 id=\"SSL的工作原理中包含三个协议\"><a href=\"#SSL的工作原理中包含三个协议\" class=\"headerlink\" title=\"SSL的工作原理中包含三个协议\"></a>SSL的工作原理中包含三个协议</h1><h2 id=\"1、握手协议\"><a href=\"#1、握手协议\" class=\"headerlink\" title=\"1、握手协议\"></a>1、握手协议</h2><p>握手协议是客户端和服务器用于与SSL连接通信的第一个子协议。握手协议包括客户端和服务器之间的一系列消息。SSL中最复杂的协议是握手协议。该协议允许服务器和客户端相互进行身份验证，协商加密和MAC算法，以及保密SSL密钥以保护SSL记录中发送的数据。在应用程序的数据传输之前使用握手协议。</p>\n<h2 id=\"2、记录协议\"><a href=\"#2、记录协议\" class=\"headerlink\" title=\"2、记录协议\"></a>2、记录协议</h2><p>在客户端和服务器握手成功之后使用记录协议，即客户端和服务器相互认证并确定安全信息交换使用的算法，并输入SSL记录协议，该协议为SSL提供两种服务连接：</p>\n<ul>\n<li><strong>(1)保密性</strong>：使用握手协议定义的秘密密钥实现</li>\n<li><strong>(2)完整性</strong>：握手协议定义了MAC，用于保证消息完整性</li>\n</ul>\n<h2 id=\"3、警报协议\"><a href=\"#3、警报协议\" class=\"headerlink\" title=\"3、警报协议\"></a>3、警报协议</h2><p>客户机和服务器发现错误时，向对方发送一个警报消息。如果是致命错误，则算法立即关闭SSL连接，双方还会先删除相关的会话号，秘密和密钥。每个警报消息共2个字节，第1个字节表示错误类型，如果是警报，则值为1，如果是致命错误，则值为2;第2个字节制定实际错误类型。</p>\n<h1 id=\"证书的工作流程\"><a href=\"#证书的工作流程\" class=\"headerlink\" title=\"证书的工作流程\"></a>证书的工作流程</h1><ol>\n<li><p>用户连接到你的Web站点，该Web站点受服务器证书所保护。(可由查看URL的开头是否为”https:”来进行辩识，或浏览器会提供你相关的信息)。</p>\n</li>\n<li><p>你的服务器进行响应，并自动传送你网站的数字证书给用户，用于鉴别你的网站。</p>\n</li>\n<li><p>用户的网页浏览器程序产生一把唯一的“会话钥匙码，用以跟网站之间所有的通讯过程进行加密。</p>\n</li>\n<li><p>使用者的浏览器以网站的公钥对交谈钥匙码进行加密，以便只有让你的网站得以阅读此交谈钥匙码。</p>\n</li>\n</ol>\n<h1 id=\"服务器端代码实现\"><a href=\"#服务器端代码实现\" class=\"headerlink\" title=\"服务器端代码实现\"></a>服务器端代码实现</h1><pre class=\"line-numbers language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;openssl/ssl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;openssl/err.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/socket.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;arpa/inet.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;netinet/in.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> CERT_FILE  \"./cert/server.crt\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> KEY_FILE   \"./cert/server.key\"</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    SSL_CTX <span class=\"token operator\">*</span>ctx<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> listenfd<span class=\"token punctuation\">,</span> newfd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">struct</span> sockaddr_in ser<span class=\"token punctuation\">,</span> cli<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">SSL_library_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OpenSSL_add_all_algorithms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SSL_load_error_strings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>ctx <span class=\"token operator\">=</span> <span class=\"token function\">SSL_CTX_new</span><span class=\"token punctuation\">(</span><span class=\"token function\">SSLv23_server_method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">SSL_CTX_use_certificate_file</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> CERT_FILE<span class=\"token punctuation\">,</span> SSL_FILETYPE_PEM<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">SSL_CTX_use_PrivateKey_file</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">,</span> KEY_FILE<span class=\"token punctuation\">,</span> SSL_FILETYPE_PEM<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token function\">SSL_CTX_check_private_key</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    listenfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ser<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_family <span class=\"token operator\">=</span> AF_INET<span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">.</span>s_addr <span class=\"token operator\">=</span> <span class=\"token function\">htonl</span><span class=\"token punctuation\">(</span>INADDR_ANY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_port <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span><span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>listenfd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> sockaddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>listenfd<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"listen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        socklen_t size <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> sockaddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>newfd <span class=\"token operator\">=</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span>listenfd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>cli<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        SSL <span class=\"token operator\">*</span>ssl <span class=\"token operator\">=</span> <span class=\"token function\">SSL_new</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SSL_set_fd</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> newfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token function\">SSL_accept</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>newfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>len <span class=\"token operator\">=</span> <span class=\"token function\">SSL_read</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                buf<span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">SSL_write</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">SSL_shutdown</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">SSL_free</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>newfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">SSL_CTX_free</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>listenfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"客服端代码实现\"><a href=\"#客服端代码实现\" class=\"headerlink\" title=\"客服端代码实现\"></a>客服端代码实现</h1><pre class=\"line-numbers language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/socket.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;arpa/inet.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;netinet/in.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;openssl/ssl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;openssl/err.h></span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    SSL_CTX <span class=\"token operator\">*</span>ctx<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> sockfd<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">struct</span> sockaddr_in ser<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">SSL_library_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OpenSSL_add_all_algorithms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SSL_load_error_strings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>ctx <span class=\"token operator\">=</span> <span class=\"token function\">SSL_CTX_new</span><span class=\"token punctuation\">(</span><span class=\"token function\">SSLv23_client_method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    sockfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ser<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_family <span class=\"token operator\">=</span> AF_INET<span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_addr<span class=\"token punctuation\">.</span>s_addr <span class=\"token operator\">=</span> <span class=\"token function\">inet_addr</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ser<span class=\"token punctuation\">.</span>sin_port <span class=\"token operator\">=</span> <span class=\"token function\">htons</span><span class=\"token punctuation\">(</span><span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>sockfd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> sockaddr<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ser<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connect\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    SSL <span class=\"token operator\">*</span>ssl <span class=\"token operator\">=</span> <span class=\"token function\">SSL_new</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SSL_set_fd</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> sockfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token function\">SSL_connect</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ERR_print_errors_fp</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/etc/passwd\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            len <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">SSL_write</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                len <span class=\"token operator\">=</span> <span class=\"token function\">SSL_read</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>len <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    buf<span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">SSL_shutdown</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SSL_free</span><span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>sockfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SSL_CTX_free</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li>L关注【<strong>做一个柔情的程序猿</strong>】公众号</li>\n<li>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n<li>自己搭建的博客地址：<a href=\"https://gain-wyj.cn/\">梦魇回生的博客</a></li>\n</ul>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1><ul>\n<li>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</li>\n<li>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程</li>\n</ul>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"SSL安全套接层\"><a href=\"#SSL安全套接层\" class=\"headerlink\" title=\"SSL安全套接层\"></a>SSL安全套接层</h1><p><strong>SSL安全套接层（Secure Socket Layer）</strong> 为Netspace所研发，用以保证在Internet上数据传输的完整性和保密性，目前版本为3.0，最新版本为TLS1.2安全传输层协议（Transport Layer Security）。TLS和SSL两者差别极小可以将其理解为SSL的更新版本。</p>\n<h1 id=\"通信过程\"><a href=\"#通信过程\" class=\"headerlink\" title=\"通信过程\"></a>通信过程</h1><p><strong>SSL介于应用层和网络层之间，位于传输层</strong>。应用的数据经过传输层中的SSL进行加密，并增加自己的SSL头，在将加密后的数据传向网络层。</p>\n<p>通过openssl可以自行签发证书，有了证书和私钥后就可以进行SSL安全通信了。</p>\n<p><strong>调用SSL提供的接口流程如下图所示：</strong></p>\n<ol>\n<li><p>客户端的浏览器向服务器传送其所支持的SSL协议的版本号，加密算法，随机数，已经其他通讯所需的信息；</p>\n</li>\n<li><p>服务端根据客户端传送的信息选择双方都支持的SSL协议版本，加密算法等信息和自己的证书传送到客户端（该步骤中可能会存在安全隐患，例如伪造客户端可支持的SSL协议版本过低，可能会导致服务端采取安全等级过低的SSL版本来进行通信）；</p>\n</li>\n<li><p>客户端利用服务器传送过来的信息来验证服务器的合法性，包括证书是否已经过期、证书的颁发机构是否可靠、公钥是否匹配、证书上的域名和服务器端的是否匹配等，如果验证不通过则断开通讯，验证通过则继续通讯；</p>\n</li>\n<li><p>客户端随机产生一个用于通讯加密的对称密码，通过公钥对其进行加密，然后将加密后的预主密码传给服务器；</p>\n</li>\n<li><p>服务器通过自己的私钥进行解密来获得通讯加密所使用的预主密码，然后使用一系列算法来产生主通讯密码（客户端也将通过相同的方式来产生相同的主通讯密码）；</p>\n</li>\n<li><p>客户端向服务器发出信息，指明后续的数据通讯将使用加解密的主密码为上以阶段生成的主通讯密码，同时通知服务端客户端的握手过程结束；</p>\n</li>\n<li><p>服务端同样想客户端指明通讯密码并确认握手过程结束；</p>\n</li>\n<li><p>握手过程结束。SSL安全通道数据通讯开始，客户端和服务器开始使用相同的对称秘钥进行数据通讯，同时进行通讯完整性校验。</p>\n</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20201214080900848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"调用SSL提供的接口流程\"> </p>\n<h1 id=\"SSL通讯建立后\"><a href=\"#SSL通讯建立后\" class=\"headerlink\" title=\"SSL通讯建立后\"></a>SSL通讯建立后</h1><p>从上述通讯过程可以看出，在ssl通讯建立起来之后，不考虑ssl版本上的一些漏洞，通信过程是很安全的，可以有效的防止中间人攻击和运营商劫持等问题，通讯数据的保密性和完整性得到了有效保证。所以针对SSL的相关攻击必须建立在其会话的初始化阶段，例如进行中间人攻击必须在会话建立过程中实现，即在通讯过程中攻击者伪造一个证书，对客户端声称该证书就是服务器证书来骗过客户端，使其信任该证书，并使用该证书来进行通讯，这样用户通讯的信息就会被第三监听，通讯保密性和完整性就被破坏。这种攻击方式也有一定的局限，当使用伪造的证书来建立通讯时，一般攻击者不会获得经过官方机构认证的证书，客户端的浏览器就会发过警告，提醒通信不安全，可以参考访问12306时的浏览器的提示（因为12306使用的是其自建的ca颁发的证书，没有经过官方机构的认证，所以浏览器就默认会认为其证书不安全，并提出告警）。</p>\n<h1 id=\"绕过浏览器校验\"><a href=\"#绕过浏览器校验\" class=\"headerlink\" title=\"绕过浏览器校验\"></a>绕过浏览器校验</h1><p>尽管通过浏览器去检验证书的合法性会提高攻击的成本，但在某些特殊情况下，还是会绕过浏览器的校验。例如：当我们使用fiddler和Charles这一类的抓包工具时，可以手动将他们的证书添加成为可信证书，所以当我们利用这些工具在本地对相关的系统进行逻辑分析时，并不会收到浏览器的告警。而且浏览器的校验仅仅针对的是web端的应用，对于移动端和其他非web端的应用只能通过其他方式来进行防护，一种比较通用的实现方式是使用SSL Pinning即证书绑定。</p>\n<h1 id=\"SSL的工作原理中包含三个协议\"><a href=\"#SSL的工作原理中包含三个协议\" class=\"headerlink\" title=\"SSL的工作原理中包含三个协议\"></a>SSL的工作原理中包含三个协议</h1><h2 id=\"1、握手协议\"><a href=\"#1、握手协议\" class=\"headerlink\" title=\"1、握手协议\"></a>1、握手协议</h2><p>握手协议是客户端和服务器用于与SSL连接通信的第一个子协议。握手协议包括客户端和服务器之间的一系列消息。SSL中最复杂的协议是握手协议。该协议允许服务器和客户端相互进行身份验证，协商加密和MAC算法，以及保密SSL密钥以保护SSL记录中发送的数据。在应用程序的数据传输之前使用握手协议。</p>\n<h2 id=\"2、记录协议\"><a href=\"#2、记录协议\" class=\"headerlink\" title=\"2、记录协议\"></a>2、记录协议</h2><p>在客户端和服务器握手成功之后使用记录协议，即客户端和服务器相互认证并确定安全信息交换使用的算法，并输入SSL记录协议，该协议为SSL提供两种服务连接：</p>\n<ul>\n<li><strong>(1)保密性</strong>：使用握手协议定义的秘密密钥实现</li>\n<li><strong>(2)完整性</strong>：握手协议定义了MAC，用于保证消息完整性</li>\n</ul>\n<h2 id=\"3、警报协议\"><a href=\"#3、警报协议\" class=\"headerlink\" title=\"3、警报协议\"></a>3、警报协议</h2><p>客户机和服务器发现错误时，向对方发送一个警报消息。如果是致命错误，则算法立即关闭SSL连接，双方还会先删除相关的会话号，秘密和密钥。每个警报消息共2个字节，第1个字节表示错误类型，如果是警报，则值为1，如果是致命错误，则值为2;第2个字节制定实际错误类型。</p>\n<h1 id=\"证书的工作流程\"><a href=\"#证书的工作流程\" class=\"headerlink\" title=\"证书的工作流程\"></a>证书的工作流程</h1><ol>\n<li><p>用户连接到你的Web站点，该Web站点受服务器证书所保护。(可由查看URL的开头是否为”https:”来进行辩识，或浏览器会提供你相关的信息)。</p>\n</li>\n<li><p>你的服务器进行响应，并自动传送你网站的数字证书给用户，用于鉴别你的网站。</p>\n</li>\n<li><p>用户的网页浏览器程序产生一把唯一的“会话钥匙码，用以跟网站之间所有的通讯过程进行加密。</p>\n</li>\n<li><p>使用者的浏览器以网站的公钥对交谈钥匙码进行加密，以便只有让你的网站得以阅读此交谈钥匙码。</p>\n</li>\n</ol>\n<h1 id=\"服务器端代码实现\"><a href=\"#服务器端代码实现\" class=\"headerlink\" title=\"服务器端代码实现\"></a>服务器端代码实现</h1><pre><code class=\"cpp\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;openssl/ssl.h&gt;\n#include &lt;openssl/err.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\n\n#define CERT_FILE  &quot;./cert/server.crt&quot;\n#define KEY_FILE   &quot;./cert/server.key&quot;\n\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int listenfd, newfd;\n    struct sockaddr_in ser, cli;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_server_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_certificate_file(ctx, CERT_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (SSL_CTX_use_PrivateKey_file(ctx, KEY_FILE, SSL_FILETYPE_PEM) != 1) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    if (1 != SSL_CTX_check_private_key(ctx)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&amp;ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = htonl(INADDR_ANY);\n    ser.sin_port = htons(atoi(argv[1]));\n\n    if (-1 == bind(listenfd, (struct sockaddr*)&amp;ser, sizeof(struct sockaddr))) {\n        perror(&quot;bind&quot;);\n        exit(-1);\n    }\n    if (-1 == listen(listenfd, 5)) {\n        perror(&quot;listen&quot;);\n        exit(-1);\n    }\n\n    for (;;) {\n        socklen_t size = sizeof(struct sockaddr);\n        if (-1 == (newfd = accept(listenfd, (struct sockaddr*)&amp;cli, &amp;size))) {\n            perror(&quot;accept&quot;);\n            break;\n        }\n        SSL *ssl = SSL_new(ctx);\n        SSL_set_fd(ssl, newfd);\n        if (-1 == SSL_accept(ssl)) {\n            ERR_print_errors_fp(stderr);\n            close(newfd);\n            break;\n        }\n        {\n            char buf[256]; int len;\n            while ((len = SSL_read(ssl, buf, sizeof(buf))) &gt; 0) {\n                buf[len] = 0;\n                printf(&quot;%s&quot;, buf);\n                SSL_write(ssl, buf, len);\n            }\n            SSL_shutdown(ssl);\n            SSL_free(ssl);\n            close(newfd);\n        }\n    }\n    SSL_CTX_free(ctx);\n    close(listenfd);\n    return 0;\n}</code></pre>\n<h1 id=\"客服端代码实现\"><a href=\"#客服端代码实现\" class=\"headerlink\" title=\"客服端代码实现\"></a>客服端代码实现</h1><pre><code class=\"cpp\">#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\n#include &lt;openssl/ssl.h&gt;\n#include &lt;openssl/err.h&gt;\nint main(int argc, char *argv[]) {\n    SSL_CTX *ctx;\n    int sockfd;\n    struct sockaddr_in ser;\n\n    SSL_library_init();\n    OpenSSL_add_all_algorithms();\n    SSL_load_error_strings();\n    if (NULL == (ctx = SSL_CTX_new(SSLv23_client_method()))) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    memset(&amp;ser, 0, sizeof(ser));\n    ser.sin_family = AF_INET;\n    ser.sin_addr.s_addr = inet_addr(argv[1]);\n    ser.sin_port = htons(atoi(argv[2]));\n    if (-1 == connect(sockfd, (struct sockaddr*)&amp;ser, sizeof(ser))) {\n        perror(&quot;connect&quot;);\n        exit(-1);\n    }\n    SSL *ssl = SSL_new(ctx);\n    SSL_set_fd(ssl, sockfd);\n    if (-1 == SSL_connect(ssl)) {\n        ERR_print_errors_fp(stderr);\n        exit(-1);\n    }\n    {\n        char buf[256]; int len;\n        freopen(&quot;/etc/passwd&quot;, &quot;r&quot;, stdin);\n        while (fgets(buf, sizeof(buf), stdin)) {\n            len = strlen(buf);\n            if (SSL_write(ssl, buf, len) &gt; 0) {\n                buf[0] = 0;\n                len = SSL_read(ssl, buf, sizeof(buf));\n                if (len &gt; 0) {\n                    buf[len] = 0;\n                    printf(&quot;%s&quot;, buf);\n                }\n            }\n        }\n        SSL_shutdown(ssl);\n        SSL_free(ssl);\n    }\n    close(sockfd);\n    SSL_CTX_free(ctx);\n    return 0;\n}</code></pre>\n<h1 id=\"资源传送门\"><a href=\"#资源传送门\" class=\"headerlink\" title=\"资源传送门\"></a>资源传送门</h1><ul>\n<li>L关注【<strong>做一个柔情的程序猿</strong>】公众号</li>\n<li>在【<strong>做一个柔情的程序猿</strong>】公众号后台回复 【<strong>python资料</strong>】【<strong>2020秋招</strong>】 即可获取相应的惊喜哦！</li>\n<li>自己搭建的博客地址：<a href=\"https://gain-wyj.cn/\">梦魇回生的博客</a></li>\n</ul>\n<h1 id=\"「❤️-感谢大家」\"><a href=\"#「❤️-感谢大家」\" class=\"headerlink\" title=\"「❤️ 感谢大家」\"></a>「❤️ 感谢大家」</h1><ul>\n<li>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓 -_-）</li>\n<li>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程</li>\n</ul>\n"},{"title":"Vue 3.0 来了，我们该做些什么？","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-10T05:50:43.000Z","password":null,"summary":"博客平台、公众号、朋友圈基本都有Vue 3.0这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。","_content":"\n# 靓仔路过，不要错过\n\n想必 Vue3.0 发布这件事，大家都知道了。\n\n![](https://img-blog.csdnimg.cn/20200922212237188.png#pic_center)\n\n我也是从朋友圈的转发得知此事，博客平台、公众号、朋友圈基本都有这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。\n\n![](https://img-blog.csdnimg.cn/20200922212247130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\nVue 3.0 来了，我们该做些什么呢？\n\n - 学习，赶紧学习，学不动了也要学！\n - 装不知道，我是一只快乐的鸵鸟，我不知道 Vue 更新了，继续摸鱼爽歪歪。\n - 为了下半年的 KPI，冲冲冲！把手头的 Vue 项目进行版本升级和重构。\n\n![](https://img-blog.csdnimg.cn/20200922212317706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# Vue3.0 更新了啥\n**让我总结的话，就只有两个比较重要的更新（我目前还没有完完整整的体验过新版本，有些地方可能不够完善，希望大家多多包涵，后续会整理和分享一些实践的 demo）。**\n\n一个是 Composition API，另一个是对 TypeScript 的全面支持。\n团队还会出一个 Vue 2.7 的版本，给予 2.x 用户一些在 3.0 版本中被删除方法的警告，这有助于用户的平稳升级。\n\nNuxt3 好像还在路上，但是目前看来，市面上的各大组件库还没来得及针对 Vue3.0 进行改版升级。\n\n周边的插件如 Vue-Router、Vuex、VSCode 插件 Vetur 等都在有序的进行中。\n\n# Vue3.0 具体更新了啥\n来点阳间的知识，说点人话。\n\n![](https://img-blog.csdnimg.cn/20200922212401727.png#pic_center)\n\n下面以代码片段的形式为大家介绍一下 Vue3.0 作出了哪些新的变化，Vue2.x 对应一些 Vue3.0 的写法。\n## 应用的配置项\n\n> config 是一个包含 Vue 应用程序全局配置的对象。可以在挂载应用程序之前修改下面列出的属性。\n\n - devtools  **类型**： boolean **默认值**： true\t**如何使用**：\n\n```javascript\napp.config.devtools = true\n```\n\n> 是否开启 vue-devtools 工具的检测，默认情况下开发环境是 true，生产环境下则为 false。\n\n - errorHandler **类型**： Function **默认值**： undefined **如何使用**：\n\n```javascript\napp.config.errorHandler = (err, vm, info) => {\n  // info 为 Vue 在某个生命周期发生错误的信息\n}\n```\n\n> 为组件渲染功能和观察程序期间的未捕获错误分配处理程序。\n\n - globalProperties 🌟 **类型**： [key: string]: any **默认值**： undefined **如何使用**：\n\n```javascript\napp.config.globalProperties.name = '十三'\n\napp.component('c-component', {\n  mounted() {\n    console.log(this.name) // '十三'\n  }\n})\n```\n\n\n> 若是组件内也有 name 属性，则组建内的属性权限比较高。\n\n还有一个知识点很重要，在 Vue2.x 中，我们定义一个全局属性或者方法都是如下所示：\n\n```javascript\nVue.prototype.$md5 = () => {}\n```\n\n在 Vue3.0 中，我们便可这样定义：\n\n```javascript\nconst app = Vue.createApp({})\napp.config.globalProperties.$md5 = () => {}\n```\n\n - performance **类型：** boolean **默认值：** false **如何使用：**\n\n```javascript\napp.config.performance = true\n```\n\n> 将其设置为 true 可在浏览器 devtool 性能/时间线面板中启用组件初始化，编译，渲染和补丁性能跟踪。 仅在开发模式和支持\n> Performance.mark API的浏览器中工作。\n\n## Application API\n全局改变的动作，都在 createApp 所创建的应用实例中，如下所示：\n\n```javascript\nimport { createApp } from 'vue'\nconst app = createApp({})\n```\n\n那么 app 下这些属性：\n\n - **component 参数**： 第一个参数 string 类型表示组件名，第二个参数 Function 或 Object  **返回值：** 只传第一个参数，返回组建。带上第二个参数则返回应用程序实例 **如何使用：**\n\n```javascript\nimport { createApp } from 'vue'\nconst app = createApp({})\n// 注册一个 options 对象\napp.component('shisan-component', {\n  /* ... */\n})\n\n// 检索注册的组件\nconst ShiSanComponent = app.component('shisan-component')\n```\n\n - **config** (上面第一段讲过了)\n - **directive** 自定义指令变化不大，还是之前那些东西，如下：\n\n```javascript\napp.directive('my-directive', {\n  // 挂载前\n  beforeMount() {},\n  // 挂载后\n  mounted() {},\n  // 更新前\n  beforeUpdate() {},\n  // 更新后\n  updated() {},\n  // 卸载前\n  beforeUnmount() {},\n  // 卸载后\n  unmounted() {}\n})\n```\n\n多数全局API都没变化，还是老的 2.x 的写法居多。\n# Composition API\nComposition API解决了什么问题？\n使用传统的 Vue2.x 配置方法写组件的时候问题，随着业务复杂度越来越高，代码量会不断的加大。由于相关业务的代码需要遵循option 的配置写到特定的区域，导致后续维护非常的复杂，同时代码可复用性不高，你常常会发现一个页面组件，写着写着就写到了三四百行去了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200923084317354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n有没有熟悉的感觉？没错这就是老的模式带来的弊端，一直憋了这么久，也没谁了～～而 Composition API 解决了这个令人头疼的问题。它为我们提供了几个函数，如下所示：\n\n - reactive\n - watchEffect\n - computed\n - ref\n - toRefs\n - hooks\n\n## reactive\n\n```javascript\nimport { reactive, computed } from 'vue'\n \nexport default {\n setup() {\n  const state = reactive({\n    a: 0\n  })\n   \n  function increment() {\n    state.a++\n  }\n   \n  return {\n    state,\n    increment\n  }\n }\n}\n```\n\n\n> reactive 相当于 Vue2.x 的 Vue.observable () API，经过 reactive\n> 处理后的函数能变成响应式的数据，类似之前写模板页面时定义的 data 属性的值。\n\n## watchEffect\n\n```javascript\nimport { reactive, computed, watchEffect } from 'vue'\n \nexport default {\n  setup() {\n    const state = reactive({ a: 0 })\n\n    const double = computed(() => state.a * 3)\n\n    function increment() {\n      state.count++\n    }\n\n    const wa = watchEffect(() => {\n      // 使用到了哪个 ref/reactive 对象.value, 就监听哪个\n      console.log(double.value)\n    })\n    // 可以通过 wa.stop 停止监听\n    return {\n      state,\n      increment\n    }\n  }\n}\n```\n\n> watchEffect 被称之为副作用，立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。\n\n## computed\n\n```javascript\nimport { reactive, computed } from 'vue'\n \nexport default {\n  setup() {\n   const state = reactive({\n    a: 0\n   })\n   \n   const double = computed(() => state.a * 3)\n   \n   function increment() {\n    state.a++\n   }\n   \n   return {\n    double,\n    state,\n    increment\n   }\n  }\n}\n```\n\n> 这就比较直观了，computed 在 Vue2.x 就存在了，只不过现在使用的形式变了一下，需要被计算的属性，通过上述形式返回。\n\n## ref 和 toRefs\ntoRefs 提供了一个方法可以把 reactive 的值处理为 ref，也就是将响应式的对象处理为普通对象。\n## hooks\n与 2.x 版本相对应的生命周期钩子\n\nVue2.x 的生命周期 | Vue3.x 的生命周期\n-------- | -----\nbeforeCreate|setup()\ncreated|setup()\nbeforeMount|onBeforeMount\nmounted|onMounted\nbeforeUpdate|onBeforeUpdate\nupdated|onUpdated\nbeforeDestroy|onBeforeUnmount\ndestroyed|onUnmounted\nerrorCaptured|onErrorCaptured\n\nVue3.0 在 Composition API 中另外加了两个钩子，分别是 `onRenderTracked` 和 `onRenderTriggered`，两个钩子函数都接收一个 `DebuggerEvent` :\n\n```javascript\nexport default {\n  onRenderTriggered(e) {\n    debugger\n    // 检查哪个依赖性导致组件重新渲染\n  },\n}\n```\n\n# Vue 3 来了，我们要做些什么？\n前面我也开玩笑的讲了三条，要么装不知道，要么赶紧学，而已经学习了 Vue 3 的朋友可以用到自己的项目中，对项目进行优化和升级。这样，在年终总结就可以加上最重要的一条：**带领团队成员完成了项目的重构，包括逻辑重构 + 语法升级，全面适配 Vue 3！打包效率提升xx倍！页面响应速度提升 xx！**\n\n不仅仅如此，对于学生党或者还在找工作的同学来说，可能在准备面试时又需要多准备一些内容了，冲冲冲！\n\n最后，我想了想我能够做些什么，首先装鸵鸟是不行的，然后不学习也是不行的，因为我上半年的时候写了一个 Vue 的商城项目并开源到 GitHub 网站上，页面效果如下所示：\n\n![](https://img-blog.csdnimg.cn/20200923085007978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n> newbee-mall 在 GitHub 和国内的码云都创建了代码仓库，如果有人访问 GitHub 比较慢的话，建议在 Gitee\n> 上查看该项目，两个仓库会保持同步更新。\n\n - [newbee-mall in GitHub : https://github.com/newbee-ltd/newbee-mall-vue-app](newbee-mall%20in%20GitHub%20:%20https://github.com/newbee-ltd/newbee-mall-vue-app)\n - [newbee-mall in Gitee : https://gitee.com/newbee-ltd/newbee-mall-vue-app](newbee-mall%20in%20Gitee%20:%20https://gitee.com/newbee-ltd/newbee-mall-vue-app)\n\n通过预览图，大家应该也可以看得出来，这不是一个基础的 demo，而是一个功能较为完善的 Vue.js 商城实战系统。\n\n这里，大家可以放心，我一直都回答会升级到 Vue3，并且代码依然全部开源，希望大家都去点个 star，你们越热情，我也会更有动力去重构项目到 Vue3 版本！所以，对我个人来说，其实一直在等着 Vue.js 3.0 版本的正式发布，之后我会抽时间把这个 Vue.js 实战商城项目用 Vue3 再写一下。大家可以给新蜂商城项目点个 star，star 数量越多，我也越有精神头儿去更新，哈哈哈哈哈。\n\n![](https://img-blog.csdnimg.cn/20200923085100409.png#pic_center)\n\n这样，大家就有了 Vue3 的实战经验啦！","source":"_posts/Vue-3-0.md","raw":"---\ntitle: 'Vue 3.0 来了，我们该做些什么？'\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-10 13:50:43\npassword:\nsummary: 博客平台、公众号、朋友圈基本都有Vue 3.0这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。\ntags: \n- Vue 3.0\n- javascript\ncategories: \n- 开发日常\n---\n\n# 靓仔路过，不要错过\n\n想必 Vue3.0 发布这件事，大家都知道了。\n\n![](https://img-blog.csdnimg.cn/20200922212237188.png#pic_center)\n\n我也是从朋友圈的转发得知此事，博客平台、公众号、朋友圈基本都有这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。\n\n![](https://img-blog.csdnimg.cn/20200922212247130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\nVue 3.0 来了，我们该做些什么呢？\n\n - 学习，赶紧学习，学不动了也要学！\n - 装不知道，我是一只快乐的鸵鸟，我不知道 Vue 更新了，继续摸鱼爽歪歪。\n - 为了下半年的 KPI，冲冲冲！把手头的 Vue 项目进行版本升级和重构。\n\n![](https://img-blog.csdnimg.cn/20200922212317706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n# Vue3.0 更新了啥\n**让我总结的话，就只有两个比较重要的更新（我目前还没有完完整整的体验过新版本，有些地方可能不够完善，希望大家多多包涵，后续会整理和分享一些实践的 demo）。**\n\n一个是 Composition API，另一个是对 TypeScript 的全面支持。\n团队还会出一个 Vue 2.7 的版本，给予 2.x 用户一些在 3.0 版本中被删除方法的警告，这有助于用户的平稳升级。\n\nNuxt3 好像还在路上，但是目前看来，市面上的各大组件库还没来得及针对 Vue3.0 进行改版升级。\n\n周边的插件如 Vue-Router、Vuex、VSCode 插件 Vetur 等都在有序的进行中。\n\n# Vue3.0 具体更新了啥\n来点阳间的知识，说点人话。\n\n![](https://img-blog.csdnimg.cn/20200922212401727.png#pic_center)\n\n下面以代码片段的形式为大家介绍一下 Vue3.0 作出了哪些新的变化，Vue2.x 对应一些 Vue3.0 的写法。\n## 应用的配置项\n\n> config 是一个包含 Vue 应用程序全局配置的对象。可以在挂载应用程序之前修改下面列出的属性。\n\n - devtools  **类型**： boolean **默认值**： true\t**如何使用**：\n\n```javascript\napp.config.devtools = true\n```\n\n> 是否开启 vue-devtools 工具的检测，默认情况下开发环境是 true，生产环境下则为 false。\n\n - errorHandler **类型**： Function **默认值**： undefined **如何使用**：\n\n```javascript\napp.config.errorHandler = (err, vm, info) => {\n  // info 为 Vue 在某个生命周期发生错误的信息\n}\n```\n\n> 为组件渲染功能和观察程序期间的未捕获错误分配处理程序。\n\n - globalProperties 🌟 **类型**： [key: string]: any **默认值**： undefined **如何使用**：\n\n```javascript\napp.config.globalProperties.name = '十三'\n\napp.component('c-component', {\n  mounted() {\n    console.log(this.name) // '十三'\n  }\n})\n```\n\n\n> 若是组件内也有 name 属性，则组建内的属性权限比较高。\n\n还有一个知识点很重要，在 Vue2.x 中，我们定义一个全局属性或者方法都是如下所示：\n\n```javascript\nVue.prototype.$md5 = () => {}\n```\n\n在 Vue3.0 中，我们便可这样定义：\n\n```javascript\nconst app = Vue.createApp({})\napp.config.globalProperties.$md5 = () => {}\n```\n\n - performance **类型：** boolean **默认值：** false **如何使用：**\n\n```javascript\napp.config.performance = true\n```\n\n> 将其设置为 true 可在浏览器 devtool 性能/时间线面板中启用组件初始化，编译，渲染和补丁性能跟踪。 仅在开发模式和支持\n> Performance.mark API的浏览器中工作。\n\n## Application API\n全局改变的动作，都在 createApp 所创建的应用实例中，如下所示：\n\n```javascript\nimport { createApp } from 'vue'\nconst app = createApp({})\n```\n\n那么 app 下这些属性：\n\n - **component 参数**： 第一个参数 string 类型表示组件名，第二个参数 Function 或 Object  **返回值：** 只传第一个参数，返回组建。带上第二个参数则返回应用程序实例 **如何使用：**\n\n```javascript\nimport { createApp } from 'vue'\nconst app = createApp({})\n// 注册一个 options 对象\napp.component('shisan-component', {\n  /* ... */\n})\n\n// 检索注册的组件\nconst ShiSanComponent = app.component('shisan-component')\n```\n\n - **config** (上面第一段讲过了)\n - **directive** 自定义指令变化不大，还是之前那些东西，如下：\n\n```javascript\napp.directive('my-directive', {\n  // 挂载前\n  beforeMount() {},\n  // 挂载后\n  mounted() {},\n  // 更新前\n  beforeUpdate() {},\n  // 更新后\n  updated() {},\n  // 卸载前\n  beforeUnmount() {},\n  // 卸载后\n  unmounted() {}\n})\n```\n\n多数全局API都没变化，还是老的 2.x 的写法居多。\n# Composition API\nComposition API解决了什么问题？\n使用传统的 Vue2.x 配置方法写组件的时候问题，随着业务复杂度越来越高，代码量会不断的加大。由于相关业务的代码需要遵循option 的配置写到特定的区域，导致后续维护非常的复杂，同时代码可复用性不高，你常常会发现一个页面组件，写着写着就写到了三四百行去了。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200923084317354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n有没有熟悉的感觉？没错这就是老的模式带来的弊端，一直憋了这么久，也没谁了～～而 Composition API 解决了这个令人头疼的问题。它为我们提供了几个函数，如下所示：\n\n - reactive\n - watchEffect\n - computed\n - ref\n - toRefs\n - hooks\n\n## reactive\n\n```javascript\nimport { reactive, computed } from 'vue'\n \nexport default {\n setup() {\n  const state = reactive({\n    a: 0\n  })\n   \n  function increment() {\n    state.a++\n  }\n   \n  return {\n    state,\n    increment\n  }\n }\n}\n```\n\n\n> reactive 相当于 Vue2.x 的 Vue.observable () API，经过 reactive\n> 处理后的函数能变成响应式的数据，类似之前写模板页面时定义的 data 属性的值。\n\n## watchEffect\n\n```javascript\nimport { reactive, computed, watchEffect } from 'vue'\n \nexport default {\n  setup() {\n    const state = reactive({ a: 0 })\n\n    const double = computed(() => state.a * 3)\n\n    function increment() {\n      state.count++\n    }\n\n    const wa = watchEffect(() => {\n      // 使用到了哪个 ref/reactive 对象.value, 就监听哪个\n      console.log(double.value)\n    })\n    // 可以通过 wa.stop 停止监听\n    return {\n      state,\n      increment\n    }\n  }\n}\n```\n\n> watchEffect 被称之为副作用，立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。\n\n## computed\n\n```javascript\nimport { reactive, computed } from 'vue'\n \nexport default {\n  setup() {\n   const state = reactive({\n    a: 0\n   })\n   \n   const double = computed(() => state.a * 3)\n   \n   function increment() {\n    state.a++\n   }\n   \n   return {\n    double,\n    state,\n    increment\n   }\n  }\n}\n```\n\n> 这就比较直观了，computed 在 Vue2.x 就存在了，只不过现在使用的形式变了一下，需要被计算的属性，通过上述形式返回。\n\n## ref 和 toRefs\ntoRefs 提供了一个方法可以把 reactive 的值处理为 ref，也就是将响应式的对象处理为普通对象。\n## hooks\n与 2.x 版本相对应的生命周期钩子\n\nVue2.x 的生命周期 | Vue3.x 的生命周期\n-------- | -----\nbeforeCreate|setup()\ncreated|setup()\nbeforeMount|onBeforeMount\nmounted|onMounted\nbeforeUpdate|onBeforeUpdate\nupdated|onUpdated\nbeforeDestroy|onBeforeUnmount\ndestroyed|onUnmounted\nerrorCaptured|onErrorCaptured\n\nVue3.0 在 Composition API 中另外加了两个钩子，分别是 `onRenderTracked` 和 `onRenderTriggered`，两个钩子函数都接收一个 `DebuggerEvent` :\n\n```javascript\nexport default {\n  onRenderTriggered(e) {\n    debugger\n    // 检查哪个依赖性导致组件重新渲染\n  },\n}\n```\n\n# Vue 3 来了，我们要做些什么？\n前面我也开玩笑的讲了三条，要么装不知道，要么赶紧学，而已经学习了 Vue 3 的朋友可以用到自己的项目中，对项目进行优化和升级。这样，在年终总结就可以加上最重要的一条：**带领团队成员完成了项目的重构，包括逻辑重构 + 语法升级，全面适配 Vue 3！打包效率提升xx倍！页面响应速度提升 xx！**\n\n不仅仅如此，对于学生党或者还在找工作的同学来说，可能在准备面试时又需要多准备一些内容了，冲冲冲！\n\n最后，我想了想我能够做些什么，首先装鸵鸟是不行的，然后不学习也是不行的，因为我上半年的时候写了一个 Vue 的商城项目并开源到 GitHub 网站上，页面效果如下所示：\n\n![](https://img-blog.csdnimg.cn/20200923085007978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n> newbee-mall 在 GitHub 和国内的码云都创建了代码仓库，如果有人访问 GitHub 比较慢的话，建议在 Gitee\n> 上查看该项目，两个仓库会保持同步更新。\n\n - [newbee-mall in GitHub : https://github.com/newbee-ltd/newbee-mall-vue-app](newbee-mall%20in%20GitHub%20:%20https://github.com/newbee-ltd/newbee-mall-vue-app)\n - [newbee-mall in Gitee : https://gitee.com/newbee-ltd/newbee-mall-vue-app](newbee-mall%20in%20Gitee%20:%20https://gitee.com/newbee-ltd/newbee-mall-vue-app)\n\n通过预览图，大家应该也可以看得出来，这不是一个基础的 demo，而是一个功能较为完善的 Vue.js 商城实战系统。\n\n这里，大家可以放心，我一直都回答会升级到 Vue3，并且代码依然全部开源，希望大家都去点个 star，你们越热情，我也会更有动力去重构项目到 Vue3 版本！所以，对我个人来说，其实一直在等着 Vue.js 3.0 版本的正式发布，之后我会抽时间把这个 Vue.js 实战商城项目用 Vue3 再写一下。大家可以给新蜂商城项目点个 star，star 数量越多，我也越有精神头儿去更新，哈哈哈哈哈。\n\n![](https://img-blog.csdnimg.cn/20200923085100409.png#pic_center)\n\n这样，大家就有了 Vue3 的实战经验啦！","slug":"Vue-3-0","published":1,"updated":"2020-12-10T05:58:55.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsx000oksvb2ctqfxj4","content":"<h1 id=\"靓仔路过，不要错过\"><a href=\"#靓仔路过，不要错过\" class=\"headerlink\" title=\"靓仔路过，不要错过\"></a>靓仔路过，不要错过</h1><p>想必 Vue3.0 发布这件事，大家都知道了。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212237188.png#pic_center\" alt></p>\n<p>我也是从朋友圈的转发得知此事，博客平台、公众号、朋友圈基本都有这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212247130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<p>Vue 3.0 来了，我们该做些什么呢？</p>\n<ul>\n<li>学习，赶紧学习，学不动了也要学！</li>\n<li>装不知道，我是一只快乐的鸵鸟，我不知道 Vue 更新了，继续摸鱼爽歪歪。</li>\n<li>为了下半年的 KPI，冲冲冲！把手头的 Vue 项目进行版本升级和重构。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212317706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<h1 id=\"Vue3-0-更新了啥\"><a href=\"#Vue3-0-更新了啥\" class=\"headerlink\" title=\"Vue3.0 更新了啥\"></a>Vue3.0 更新了啥</h1><p><strong>让我总结的话，就只有两个比较重要的更新（我目前还没有完完整整的体验过新版本，有些地方可能不够完善，希望大家多多包涵，后续会整理和分享一些实践的 demo）。</strong></p>\n<p>一个是 Composition API，另一个是对 TypeScript 的全面支持。<br>团队还会出一个 Vue 2.7 的版本，给予 2.x 用户一些在 3.0 版本中被删除方法的警告，这有助于用户的平稳升级。</p>\n<p>Nuxt3 好像还在路上，但是目前看来，市面上的各大组件库还没来得及针对 Vue3.0 进行改版升级。</p>\n<p>周边的插件如 Vue-Router、Vuex、VSCode 插件 Vetur 等都在有序的进行中。</p>\n<h1 id=\"Vue3-0-具体更新了啥\"><a href=\"#Vue3-0-具体更新了啥\" class=\"headerlink\" title=\"Vue3.0 具体更新了啥\"></a>Vue3.0 具体更新了啥</h1><p>来点阳间的知识，说点人话。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212401727.png#pic_center\" alt></p>\n<p>下面以代码片段的形式为大家介绍一下 Vue3.0 作出了哪些新的变化，Vue2.x 对应一些 Vue3.0 的写法。</p>\n<h2 id=\"应用的配置项\"><a href=\"#应用的配置项\" class=\"headerlink\" title=\"应用的配置项\"></a>应用的配置项</h2><blockquote>\n<p>config 是一个包含 Vue 应用程序全局配置的对象。可以在挂载应用程序之前修改下面列出的属性。</p>\n</blockquote>\n<ul>\n<li>devtools  <strong>类型</strong>： boolean <strong>默认值</strong>： true    <strong>如何使用</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>devtools <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>是否开启 vue-devtools 工具的检测，默认情况下开发环境是 true，生产环境下则为 false。</p>\n</blockquote>\n<ul>\n<li>errorHandler <strong>类型</strong>： Function <strong>默认值</strong>： undefined <strong>如何使用</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>errorHandler <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> vm<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">// info 为 Vue 在某个生命周期发生错误的信息</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>为组件渲染功能和观察程序期间的未捕获错误分配处理程序。</p>\n</blockquote>\n<ul>\n<li>globalProperties 🌟 <strong>类型</strong>： [key: string]: any <strong>默认值</strong>： undefined <strong>如何使用</strong>：</li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'十三'</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c-component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">// '十三'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>若是组件内也有 name 属性，则组建内的属性权限比较高。</p>\n</blockquote>\n<p>还有一个知识点很重要，在 Vue2.x 中，我们定义一个全局属性或者方法都是如下所示：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">Vue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$md5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在 Vue3.0 中，我们便可这样定义：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> Vue<span class=\"token punctuation\">.</span><span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>globalProperties<span class=\"token punctuation\">.</span>$md5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ul>\n<li>performance <strong>类型：</strong> boolean <strong>默认值：</strong> false <strong>如何使用：</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>performance <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>将其设置为 true 可在浏览器 devtool 性能/时间线面板中启用组件初始化，编译，渲染和补丁性能跟踪。 仅在开发模式和支持<br>Performance.mark API的浏览器中工作。</p>\n</blockquote>\n<h2 id=\"Application-API\"><a href=\"#Application-API\" class=\"headerlink\" title=\"Application API\"></a>Application API</h2><p>全局改变的动作，都在 createApp 所创建的应用实例中，如下所示：</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>那么 app 下这些属性：</p>\n<ul>\n<li><strong>component 参数</strong>： 第一个参数 string 类型表示组件名，第二个参数 Function 或 Object  <strong>返回值：</strong> 只传第一个参数，返回组建。带上第二个参数则返回应用程序实例 <strong>如何使用：</strong></li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createApp <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">createApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\">// 注册一个 options 对象</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shisan-component'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">/* ... */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// 检索注册的组件</span>\n<span class=\"token keyword\">const</span> ShiSanComponent <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shisan-component'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><strong>config</strong> (上面第一段讲过了)</li>\n<li><strong>directive</strong> 自定义指令变化不大，还是之前那些东西，如下：</li>\n</ul>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-directive'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 挂载前</span>\n  <span class=\"token function\">beforeMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 挂载后</span>\n  <span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 更新前</span>\n  <span class=\"token function\">beforeUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 更新后</span>\n  <span class=\"token function\">updated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 卸载前</span>\n  <span class=\"token function\">beforeUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\" spellcheck=\"true\">// 卸载后</span>\n  <span class=\"token function\">unmounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>多数全局API都没变化，还是老的 2.x 的写法居多。</p>\n<h1 id=\"Composition-API\"><a href=\"#Composition-API\" class=\"headerlink\" title=\"Composition API\"></a>Composition API</h1><p>Composition API解决了什么问题？<br>使用传统的 Vue2.x 配置方法写组件的时候问题，随着业务复杂度越来越高，代码量会不断的加大。由于相关业务的代码需要遵循option 的配置写到特定的区域，导致后续维护非常的复杂，同时代码可复用性不高，你常常会发现一个页面组件，写着写着就写到了三四百行去了。<br><img src=\"https://img-blog.csdnimg.cn/20200923084317354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>有没有熟悉的感觉？没错这就是老的模式带来的弊端，一直憋了这么久，也没谁了～～而 Composition API 解决了这个令人头疼的问题。它为我们提供了几个函数，如下所示：</p>\n<ul>\n<li>reactive</li>\n<li>watchEffect</li>\n<li>computed</li>\n<li>ref</li>\n<li>toRefs</li>\n<li>hooks</li>\n</ul>\n<h2 id=\"reactive\"><a href=\"#reactive\" class=\"headerlink\" title=\"reactive\"></a>reactive</h2><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> reactive<span class=\"token punctuation\">,</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>a<span class=\"token operator\">++</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">,</span>\n    increment\n  <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>reactive 相当于 Vue2.x 的 Vue.observable () API，经过 reactive<br>处理后的函数能变成响应式的数据，类似之前写模板页面时定义的 data 属性的值。</p>\n</blockquote>\n<h2 id=\"watchEffect\"><a href=\"#watchEffect\" class=\"headerlink\" title=\"watchEffect\"></a>watchEffect</h2><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> reactive<span class=\"token punctuation\">,</span> computed<span class=\"token punctuation\">,</span> watchEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> double <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> state<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> wa <span class=\"token operator\">=</span> <span class=\"token function\">watchEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">// 使用到了哪个 ref/reactive 对象.value, 就监听哪个</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>double<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 可以通过 wa.stop 停止监听</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">,</span>\n      increment\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>watchEffect 被称之为副作用，立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。</p>\n</blockquote>\n<h2 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h2><pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> reactive<span class=\"token punctuation\">,</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    a<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">const</span> double <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> state<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">function</span> <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>a<span class=\"token operator\">++</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    double<span class=\"token punctuation\">,</span>\n    state<span class=\"token punctuation\">,</span>\n    increment\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>这就比较直观了，computed 在 Vue2.x 就存在了，只不过现在使用的形式变了一下，需要被计算的属性，通过上述形式返回。</p>\n</blockquote>\n<h2 id=\"ref-和-toRefs\"><a href=\"#ref-和-toRefs\" class=\"headerlink\" title=\"ref 和 toRefs\"></a>ref 和 toRefs</h2><p>toRefs 提供了一个方法可以把 reactive 的值处理为 ref，也就是将响应式的对象处理为普通对象。</p>\n<h2 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h2><p>与 2.x 版本相对应的生命周期钩子</p>\n<table>\n<thead>\n<tr>\n<th>Vue2.x 的生命周期</th>\n<th>Vue3.x 的生命周期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>beforeCreate</td>\n<td>setup()</td>\n</tr>\n<tr>\n<td>created</td>\n<td>setup()</td>\n</tr>\n<tr>\n<td>beforeMount</td>\n<td>onBeforeMount</td>\n</tr>\n<tr>\n<td>mounted</td>\n<td>onMounted</td>\n</tr>\n<tr>\n<td>beforeUpdate</td>\n<td>onBeforeUpdate</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>onUpdated</td>\n</tr>\n<tr>\n<td>beforeDestroy</td>\n<td>onBeforeUnmount</td>\n</tr>\n<tr>\n<td>destroyed</td>\n<td>onUnmounted</td>\n</tr>\n<tr>\n<td>errorCaptured</td>\n<td>onErrorCaptured</td>\n</tr>\n</tbody></table>\n<p>Vue3.0 在 Composition API 中另外加了两个钩子，分别是 <code>onRenderTracked</code> 和 <code>onRenderTriggered</code>，两个钩子函数都接收一个 <code>DebuggerEvent</code> :</p>\n<pre class=\"line-numbers language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onRenderTriggered</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">debugger</span>\n    <span class=\"token comment\" spellcheck=\"true\">// 检查哪个依赖性导致组件重新渲染</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"Vue-3-来了，我们要做些什么？\"><a href=\"#Vue-3-来了，我们要做些什么？\" class=\"headerlink\" title=\"Vue 3 来了，我们要做些什么？\"></a>Vue 3 来了，我们要做些什么？</h1><p>前面我也开玩笑的讲了三条，要么装不知道，要么赶紧学，而已经学习了 Vue 3 的朋友可以用到自己的项目中，对项目进行优化和升级。这样，在年终总结就可以加上最重要的一条：<strong>带领团队成员完成了项目的重构，包括逻辑重构 + 语法升级，全面适配 Vue 3！打包效率提升xx倍！页面响应速度提升 xx！</strong></p>\n<p>不仅仅如此，对于学生党或者还在找工作的同学来说，可能在准备面试时又需要多准备一些内容了，冲冲冲！</p>\n<p>最后，我想了想我能够做些什么，首先装鸵鸟是不行的，然后不学习也是不行的，因为我上半年的时候写了一个 Vue 的商城项目并开源到 GitHub 网站上，页面效果如下所示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200923085007978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<blockquote>\n<p>newbee-mall 在 GitHub 和国内的码云都创建了代码仓库，如果有人访问 GitHub 比较慢的话，建议在 Gitee<br>上查看该项目，两个仓库会保持同步更新。</p>\n</blockquote>\n<ul>\n<li><a href=\"newbee-mall%20in%20GitHub%20:%20https://github.com/newbee-ltd/newbee-mall-vue-app\">newbee-mall in GitHub : https://github.com/newbee-ltd/newbee-mall-vue-app</a></li>\n<li><a href=\"newbee-mall%20in%20Gitee%20:%20https://gitee.com/newbee-ltd/newbee-mall-vue-app\">newbee-mall in Gitee : https://gitee.com/newbee-ltd/newbee-mall-vue-app</a></li>\n</ul>\n<p>通过预览图，大家应该也可以看得出来，这不是一个基础的 demo，而是一个功能较为完善的 Vue.js 商城实战系统。</p>\n<p>这里，大家可以放心，我一直都回答会升级到 Vue3，并且代码依然全部开源，希望大家都去点个 star，你们越热情，我也会更有动力去重构项目到 Vue3 版本！所以，对我个人来说，其实一直在等着 Vue.js 3.0 版本的正式发布，之后我会抽时间把这个 Vue.js 实战商城项目用 Vue3 再写一下。大家可以给新蜂商城项目点个 star，star 数量越多，我也越有精神头儿去更新，哈哈哈哈哈。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200923085100409.png#pic_center\" alt></p>\n<p>这样，大家就有了 Vue3 的实战经验啦！</p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"靓仔路过，不要错过\"><a href=\"#靓仔路过，不要错过\" class=\"headerlink\" title=\"靓仔路过，不要错过\"></a>靓仔路过，不要错过</h1><p>想必 Vue3.0 发布这件事，大家都知道了。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212237188.png#pic_center\" alt></p>\n<p>我也是从朋友圈的转发得知此事，博客平台、公众号、朋友圈基本都有这么一条新闻，可见 Vue3.0 的被期待程度，因为 React 16 发布的时候，我也没见大家这么追捧，让我有点震惊的是 Vue 有 130 万的使用者，这个体量真的是有点惊人。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212247130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<p>Vue 3.0 来了，我们该做些什么呢？</p>\n<ul>\n<li>学习，赶紧学习，学不动了也要学！</li>\n<li>装不知道，我是一只快乐的鸵鸟，我不知道 Vue 更新了，继续摸鱼爽歪歪。</li>\n<li>为了下半年的 KPI，冲冲冲！把手头的 Vue 项目进行版本升级和重构。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212317706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<h1 id=\"Vue3-0-更新了啥\"><a href=\"#Vue3-0-更新了啥\" class=\"headerlink\" title=\"Vue3.0 更新了啥\"></a>Vue3.0 更新了啥</h1><p><strong>让我总结的话，就只有两个比较重要的更新（我目前还没有完完整整的体验过新版本，有些地方可能不够完善，希望大家多多包涵，后续会整理和分享一些实践的 demo）。</strong></p>\n<p>一个是 Composition API，另一个是对 TypeScript 的全面支持。<br>团队还会出一个 Vue 2.7 的版本，给予 2.x 用户一些在 3.0 版本中被删除方法的警告，这有助于用户的平稳升级。</p>\n<p>Nuxt3 好像还在路上，但是目前看来，市面上的各大组件库还没来得及针对 Vue3.0 进行改版升级。</p>\n<p>周边的插件如 Vue-Router、Vuex、VSCode 插件 Vetur 等都在有序的进行中。</p>\n<h1 id=\"Vue3-0-具体更新了啥\"><a href=\"#Vue3-0-具体更新了啥\" class=\"headerlink\" title=\"Vue3.0 具体更新了啥\"></a>Vue3.0 具体更新了啥</h1><p>来点阳间的知识，说点人话。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200922212401727.png#pic_center\" alt></p>\n<p>下面以代码片段的形式为大家介绍一下 Vue3.0 作出了哪些新的变化，Vue2.x 对应一些 Vue3.0 的写法。</p>\n<h2 id=\"应用的配置项\"><a href=\"#应用的配置项\" class=\"headerlink\" title=\"应用的配置项\"></a>应用的配置项</h2><blockquote>\n<p>config 是一个包含 Vue 应用程序全局配置的对象。可以在挂载应用程序之前修改下面列出的属性。</p>\n</blockquote>\n<ul>\n<li>devtools  <strong>类型</strong>： boolean <strong>默认值</strong>： true    <strong>如何使用</strong>：</li>\n</ul>\n<pre><code class=\"javascript\">app.config.devtools = true</code></pre>\n<blockquote>\n<p>是否开启 vue-devtools 工具的检测，默认情况下开发环境是 true，生产环境下则为 false。</p>\n</blockquote>\n<ul>\n<li>errorHandler <strong>类型</strong>： Function <strong>默认值</strong>： undefined <strong>如何使用</strong>：</li>\n</ul>\n<pre><code class=\"javascript\">app.config.errorHandler = (err, vm, info) =&gt; {\n  // info 为 Vue 在某个生命周期发生错误的信息\n}</code></pre>\n<blockquote>\n<p>为组件渲染功能和观察程序期间的未捕获错误分配处理程序。</p>\n</blockquote>\n<ul>\n<li>globalProperties 🌟 <strong>类型</strong>： [key: string]: any <strong>默认值</strong>： undefined <strong>如何使用</strong>：</li>\n</ul>\n<pre><code class=\"javascript\">app.config.globalProperties.name = &#39;十三&#39;\n\napp.component(&#39;c-component&#39;, {\n  mounted() {\n    console.log(this.name) // &#39;十三&#39;\n  }\n})</code></pre>\n<blockquote>\n<p>若是组件内也有 name 属性，则组建内的属性权限比较高。</p>\n</blockquote>\n<p>还有一个知识点很重要，在 Vue2.x 中，我们定义一个全局属性或者方法都是如下所示：</p>\n<pre><code class=\"javascript\">Vue.prototype.$md5 = () =&gt; {}</code></pre>\n<p>在 Vue3.0 中，我们便可这样定义：</p>\n<pre><code class=\"javascript\">const app = Vue.createApp({})\napp.config.globalProperties.$md5 = () =&gt; {}</code></pre>\n<ul>\n<li>performance <strong>类型：</strong> boolean <strong>默认值：</strong> false <strong>如何使用：</strong></li>\n</ul>\n<pre><code class=\"javascript\">app.config.performance = true</code></pre>\n<blockquote>\n<p>将其设置为 true 可在浏览器 devtool 性能/时间线面板中启用组件初始化，编译，渲染和补丁性能跟踪。 仅在开发模式和支持<br>Performance.mark API的浏览器中工作。</p>\n</blockquote>\n<h2 id=\"Application-API\"><a href=\"#Application-API\" class=\"headerlink\" title=\"Application API\"></a>Application API</h2><p>全局改变的动作，都在 createApp 所创建的应用实例中，如下所示：</p>\n<pre><code class=\"javascript\">import { createApp } from &#39;vue&#39;\nconst app = createApp({})</code></pre>\n<p>那么 app 下这些属性：</p>\n<ul>\n<li><strong>component 参数</strong>： 第一个参数 string 类型表示组件名，第二个参数 Function 或 Object  <strong>返回值：</strong> 只传第一个参数，返回组建。带上第二个参数则返回应用程序实例 <strong>如何使用：</strong></li>\n</ul>\n<pre><code class=\"javascript\">import { createApp } from &#39;vue&#39;\nconst app = createApp({})\n// 注册一个 options 对象\napp.component(&#39;shisan-component&#39;, {\n  /* ... */\n})\n\n// 检索注册的组件\nconst ShiSanComponent = app.component(&#39;shisan-component&#39;)</code></pre>\n<ul>\n<li><strong>config</strong> (上面第一段讲过了)</li>\n<li><strong>directive</strong> 自定义指令变化不大，还是之前那些东西，如下：</li>\n</ul>\n<pre><code class=\"javascript\">app.directive(&#39;my-directive&#39;, {\n  // 挂载前\n  beforeMount() {},\n  // 挂载后\n  mounted() {},\n  // 更新前\n  beforeUpdate() {},\n  // 更新后\n  updated() {},\n  // 卸载前\n  beforeUnmount() {},\n  // 卸载后\n  unmounted() {}\n})</code></pre>\n<p>多数全局API都没变化，还是老的 2.x 的写法居多。</p>\n<h1 id=\"Composition-API\"><a href=\"#Composition-API\" class=\"headerlink\" title=\"Composition API\"></a>Composition API</h1><p>Composition API解决了什么问题？<br>使用传统的 Vue2.x 配置方法写组件的时候问题，随着业务复杂度越来越高，代码量会不断的加大。由于相关业务的代码需要遵循option 的配置写到特定的区域，导致后续维护非常的复杂，同时代码可复用性不高，你常常会发现一个页面组件，写着写着就写到了三四百行去了。<br><img src=\"https://img-blog.csdnimg.cn/20200923084317354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>有没有熟悉的感觉？没错这就是老的模式带来的弊端，一直憋了这么久，也没谁了～～而 Composition API 解决了这个令人头疼的问题。它为我们提供了几个函数，如下所示：</p>\n<ul>\n<li>reactive</li>\n<li>watchEffect</li>\n<li>computed</li>\n<li>ref</li>\n<li>toRefs</li>\n<li>hooks</li>\n</ul>\n<h2 id=\"reactive\"><a href=\"#reactive\" class=\"headerlink\" title=\"reactive\"></a>reactive</h2><pre><code class=\"javascript\">import { reactive, computed } from &#39;vue&#39;\n\nexport default {\n setup() {\n  const state = reactive({\n    a: 0\n  })\n\n  function increment() {\n    state.a++\n  }\n\n  return {\n    state,\n    increment\n  }\n }\n}</code></pre>\n<blockquote>\n<p>reactive 相当于 Vue2.x 的 Vue.observable () API，经过 reactive<br>处理后的函数能变成响应式的数据，类似之前写模板页面时定义的 data 属性的值。</p>\n</blockquote>\n<h2 id=\"watchEffect\"><a href=\"#watchEffect\" class=\"headerlink\" title=\"watchEffect\"></a>watchEffect</h2><pre><code class=\"javascript\">import { reactive, computed, watchEffect } from &#39;vue&#39;\n\nexport default {\n  setup() {\n    const state = reactive({ a: 0 })\n\n    const double = computed(() =&gt; state.a * 3)\n\n    function increment() {\n      state.count++\n    }\n\n    const wa = watchEffect(() =&gt; {\n      // 使用到了哪个 ref/reactive 对象.value, 就监听哪个\n      console.log(double.value)\n    })\n    // 可以通过 wa.stop 停止监听\n    return {\n      state,\n      increment\n    }\n  }\n}</code></pre>\n<blockquote>\n<p>watchEffect 被称之为副作用，立即执行传入的一个函数，并响应式追踪其依赖，并在其依赖变更时重新运行该函数。</p>\n</blockquote>\n<h2 id=\"computed\"><a href=\"#computed\" class=\"headerlink\" title=\"computed\"></a>computed</h2><pre><code class=\"javascript\">import { reactive, computed } from &#39;vue&#39;\n\nexport default {\n  setup() {\n   const state = reactive({\n    a: 0\n   })\n\n   const double = computed(() =&gt; state.a * 3)\n\n   function increment() {\n    state.a++\n   }\n\n   return {\n    double,\n    state,\n    increment\n   }\n  }\n}</code></pre>\n<blockquote>\n<p>这就比较直观了，computed 在 Vue2.x 就存在了，只不过现在使用的形式变了一下，需要被计算的属性，通过上述形式返回。</p>\n</blockquote>\n<h2 id=\"ref-和-toRefs\"><a href=\"#ref-和-toRefs\" class=\"headerlink\" title=\"ref 和 toRefs\"></a>ref 和 toRefs</h2><p>toRefs 提供了一个方法可以把 reactive 的值处理为 ref，也就是将响应式的对象处理为普通对象。</p>\n<h2 id=\"hooks\"><a href=\"#hooks\" class=\"headerlink\" title=\"hooks\"></a>hooks</h2><p>与 2.x 版本相对应的生命周期钩子</p>\n<table>\n<thead>\n<tr>\n<th>Vue2.x 的生命周期</th>\n<th>Vue3.x 的生命周期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>beforeCreate</td>\n<td>setup()</td>\n</tr>\n<tr>\n<td>created</td>\n<td>setup()</td>\n</tr>\n<tr>\n<td>beforeMount</td>\n<td>onBeforeMount</td>\n</tr>\n<tr>\n<td>mounted</td>\n<td>onMounted</td>\n</tr>\n<tr>\n<td>beforeUpdate</td>\n<td>onBeforeUpdate</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>onUpdated</td>\n</tr>\n<tr>\n<td>beforeDestroy</td>\n<td>onBeforeUnmount</td>\n</tr>\n<tr>\n<td>destroyed</td>\n<td>onUnmounted</td>\n</tr>\n<tr>\n<td>errorCaptured</td>\n<td>onErrorCaptured</td>\n</tr>\n</tbody></table>\n<p>Vue3.0 在 Composition API 中另外加了两个钩子，分别是 <code>onRenderTracked</code> 和 <code>onRenderTriggered</code>，两个钩子函数都接收一个 <code>DebuggerEvent</code> :</p>\n<pre><code class=\"javascript\">export default {\n  onRenderTriggered(e) {\n    debugger\n    // 检查哪个依赖性导致组件重新渲染\n  },\n}</code></pre>\n<h1 id=\"Vue-3-来了，我们要做些什么？\"><a href=\"#Vue-3-来了，我们要做些什么？\" class=\"headerlink\" title=\"Vue 3 来了，我们要做些什么？\"></a>Vue 3 来了，我们要做些什么？</h1><p>前面我也开玩笑的讲了三条，要么装不知道，要么赶紧学，而已经学习了 Vue 3 的朋友可以用到自己的项目中，对项目进行优化和升级。这样，在年终总结就可以加上最重要的一条：<strong>带领团队成员完成了项目的重构，包括逻辑重构 + 语法升级，全面适配 Vue 3！打包效率提升xx倍！页面响应速度提升 xx！</strong></p>\n<p>不仅仅如此，对于学生党或者还在找工作的同学来说，可能在准备面试时又需要多准备一些内容了，冲冲冲！</p>\n<p>最后，我想了想我能够做些什么，首先装鸵鸟是不行的，然后不学习也是不行的，因为我上半年的时候写了一个 Vue 的商城项目并开源到 GitHub 网站上，页面效果如下所示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200923085007978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<blockquote>\n<p>newbee-mall 在 GitHub 和国内的码云都创建了代码仓库，如果有人访问 GitHub 比较慢的话，建议在 Gitee<br>上查看该项目，两个仓库会保持同步更新。</p>\n</blockquote>\n<ul>\n<li><a href=\"newbee-mall%20in%20GitHub%20:%20https://github.com/newbee-ltd/newbee-mall-vue-app\">newbee-mall in GitHub : https://github.com/newbee-ltd/newbee-mall-vue-app</a></li>\n<li><a href=\"newbee-mall%20in%20Gitee%20:%20https://gitee.com/newbee-ltd/newbee-mall-vue-app\">newbee-mall in Gitee : https://gitee.com/newbee-ltd/newbee-mall-vue-app</a></li>\n</ul>\n<p>通过预览图，大家应该也可以看得出来，这不是一个基础的 demo，而是一个功能较为完善的 Vue.js 商城实战系统。</p>\n<p>这里，大家可以放心，我一直都回答会升级到 Vue3，并且代码依然全部开源，希望大家都去点个 star，你们越热情，我也会更有动力去重构项目到 Vue3 版本！所以，对我个人来说，其实一直在等着 Vue.js 3.0 版本的正式发布，之后我会抽时间把这个 Vue.js 实战商城项目用 Vue3 再写一下。大家可以给新蜂商城项目点个 star，star 数量越多，我也越有精神头儿去更新，哈哈哈哈哈。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200923085100409.png#pic_center\" alt></p>\n<p>这样，大家就有了 Vue3 的实战经验啦！</p>\n"},{"title":"十大经典排序算法整理汇总（附代码）","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-02-16T07:09:23.000Z","password":null,"summary":"本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。","_content":"\n> 关注公众号【做一个柔情的程序猿】，每日算法干货马上就来！\n\n![](/medias/contact.jpg)\n\n## 前言\n\n本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\n\n**本文并不会详细讲解每种排序算法的原理**，网上有很多很好的教程，大家可以自己去搜了看。\n\n最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 [LeetCode 912. 排序数组](https://leetcode-cn.com/problems/sort-an-array/ \"LeetCode 912. 排序数组\") 这道题。\n\n## 性质汇总\n\n> 如果发现表中有错误，请留言告知。\n\n|   算法  |   最好  |  最坏   |  平均   |  空间   |  稳定性   | 是否基于比较\n| --- | --- | --- | --- | --- | :---: | :---: |\n|  冒泡排序   |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|   选择排序  |  $O(n^2)$  |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\times$  | $\\checkmark$ |\n|   插入排序  |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|  快速排序   |  $O(n\\log n)$   |  $O(n^2)$   |  $O(n\\log n)$   |  $O(\\log n)$~$O(n)$   |  $\\times$   | $\\checkmark$ |\n|  归并排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(n)$  |  $\\checkmark$   | $\\checkmark$ |\n|   希尔排序  |  $O(n^{1.3})$   |   $O(n^2)$  |  $O(n\\log n)$~$O(n^2)$   |  $O(1)$   | $\\times$    | $\\checkmark$ |\n|  计数排序   |  $O(n+k)$   |   $O(n+k)$  |   $O(n+k)$  |  $O(n+k)$   |  $\\checkmark$   | $\\times$ |\n|   基数排序  |   $O(nk)$  |  $O(nk)$   |   $O(nk)$  |   $O(n+k)$  |  $\\checkmark$   | $\\times$ |\n|  桶排序   |   $O(n)$  |   $O(n)$  |   $O(n)$  |  $O(n+m)$   |  $\\checkmark$   | $\\times$ |\n|  堆排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(1)$  |  $\\times$   | $\\checkmark$ |\n\n\n\n> 如果表格显示有问题的话，还可以直接看下面的汇总图：\n\n![十大经典排序算法性质汇总](1.png)\n\n### 维基百科\n\n我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。\n\n**冒泡排序**  \n[https://en.wikipedia.org/wiki/Bubble_sort](https://en.wikipedia.org/wiki/Bubble_sort)\n\n**选择排序**  \n[https://en.wikipedia.org/wiki/Selection_sort](https://en.wikipedia.org/wiki/Selection_sort)\n\n**插入排序**  \n[https://en.wikipedia.org/wiki/Insertion_sort](https://en.wikipedia.org/wiki/Insertion_sort)\n\n**快速排序**  \n[https://en.wikipedia.org/wiki/Quicksort](https://en.wikipedia.org/wiki/Quicksort)\n\n**归并排序**  \n[https://en.wikipedia.org/wiki/Merge_sort](https://en.wikipedia.org/wiki/Merge_sort)\n\n**希尔排序**  \n[https://en.wikipedia.org/wiki/Shellsort](https://en.wikipedia.org/wiki/Shellsort)\n\n**计数排序**  \n[https://en.wikipedia.org/wiki/Counting_sort](https://en.wikipedia.org/wiki/Counting_sort)\n\n**基数排序**  \n[https://en.wikipedia.org/wiki/Radix_sort](https://en.wikipedia.org/wiki/Radix_sort)\n\n**桶排序**  \n[https://en.wikipedia.org/wiki/Bucket_sort](https://en.wikipedia.org/wiki/Bucket_sort)\n\n**堆排序**  \n[https://en.wikipedia.org/wiki/Heapsort](https://en.wikipedia.org/wiki/Heapsort)\n\n## 代码实现\n\n所有的排序算法接口都是相同的，也就是 `vector<int> xxxSort(vector<int>& nums)` 。只需要你传入一个 `vector<int>` 类型的数组，就能返回排序后的结果。\n\n运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector<int> bubbleSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = n-2; j >= i; --j) {\n                if (nums[j] > nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector<int> selectSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            int idx = i;\n            for (int j = i; j < n; ++j) {\n                if (nums[j] < nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector<int> insertSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = i; j > 0 && nums[j] < nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return;\n        int m = l;\n        for (int i = l; i < r; ++i) {\n            if (nums[i] < nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector<int> quickSort(vector<int>& nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector<int> mSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector<int> lnums = mSort(nums, l, m);\n        vector<int> rnums = mSort(nums, m+1, r);\n        vector<int> res;\n        int i = 0, j = 0;\n        while (i <= m-l && j <= r-m-1) {\n            if (lnums[i] < rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i <= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j <= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector<int> mergeSort(vector<int>& nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector<int> mergeSortNR(vector<int>& nums) {\n        int n = nums.size();\n        for (int len = 1; len < n; len <<= 1) {\n            for (int l = 0; l < n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector<int> res;\n                int i = l, j = m+1;\n                while (i <= m && j <= r) {\n                    if (nums[i] < nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i <= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j <= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i <= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector<int> shellSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; ++i) {\n                for (int j = i; j-gap >= 0 && nums[j-gap] > nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector<int> countSort(vector<int>& nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector<int> count(m, 0);\n        for (int i = 0; i < n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector<int> res;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector<int> radixSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv > 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector<int> count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd > 0) {\n            count.assign(10, 0);\n            for (int i = 0; i < n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i < 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i >= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i < n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector<int> bucketSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector<vector<int> > bucket(m);\n        for (int i = 0; i < n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i < m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j < sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector<int>& nums, int p, int s) {\n        while (2*p+1 < s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2<s && nums[c2]>nums[c1]) ? c2 : c1;\n            if (nums[c] > nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector<int> heapSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i >= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i > 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};\n```","source":"_posts/sort-algorithms.md","raw":"---\ntitle: 十大经典排序算法整理汇总（附代码）\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-02-16 15:09:23\npassword:\nsummary: 本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\ntags:\n- leetcode\n- 算法\ncategories:\n- 编程算法\n---\n\n> 关注公众号【做一个柔情的程序猿】，每日算法干货马上就来！\n\n![](/medias/contact.jpg)\n\n## 前言\n\n本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。\n\n**本文并不会详细讲解每种排序算法的原理**，网上有很多很好的教程，大家可以自己去搜了看。\n\n最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 [LeetCode 912. 排序数组](https://leetcode-cn.com/problems/sort-an-array/ \"LeetCode 912. 排序数组\") 这道题。\n\n## 性质汇总\n\n> 如果发现表中有错误，请留言告知。\n\n|   算法  |   最好  |  最坏   |  平均   |  空间   |  稳定性   | 是否基于比较\n| --- | --- | --- | --- | --- | :---: | :---: |\n|  冒泡排序   |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|   选择排序  |  $O(n^2)$  |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\times$  | $\\checkmark$ |\n|   插入排序  |  $O(n)$   |   $O(n^2)$  |  $O(n^2)$   |  $O(1)$   | $\\checkmark$  | $\\checkmark$ |\n|  快速排序   |  $O(n\\log n)$   |  $O(n^2)$   |  $O(n\\log n)$   |  $O(\\log n)$~$O(n)$   |  $\\times$   | $\\checkmark$ |\n|  归并排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(n)$  |  $\\checkmark$   | $\\checkmark$ |\n|   希尔排序  |  $O(n^{1.3})$   |   $O(n^2)$  |  $O(n\\log n)$~$O(n^2)$   |  $O(1)$   | $\\times$    | $\\checkmark$ |\n|  计数排序   |  $O(n+k)$   |   $O(n+k)$  |   $O(n+k)$  |  $O(n+k)$   |  $\\checkmark$   | $\\times$ |\n|   基数排序  |   $O(nk)$  |  $O(nk)$   |   $O(nk)$  |   $O(n+k)$  |  $\\checkmark$   | $\\times$ |\n|  桶排序   |   $O(n)$  |   $O(n)$  |   $O(n)$  |  $O(n+m)$   |  $\\checkmark$   | $\\times$ |\n|  堆排序   |  $O(n\\log n)$   |   $O(n\\log n)$  |  $O(n\\log n)$   |   $O(1)$  |  $\\times$   | $\\checkmark$ |\n\n\n\n> 如果表格显示有问题的话，还可以直接看下面的汇总图：\n\n![十大经典排序算法性质汇总](1.png)\n\n### 维基百科\n\n我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。\n\n**冒泡排序**  \n[https://en.wikipedia.org/wiki/Bubble_sort](https://en.wikipedia.org/wiki/Bubble_sort)\n\n**选择排序**  \n[https://en.wikipedia.org/wiki/Selection_sort](https://en.wikipedia.org/wiki/Selection_sort)\n\n**插入排序**  \n[https://en.wikipedia.org/wiki/Insertion_sort](https://en.wikipedia.org/wiki/Insertion_sort)\n\n**快速排序**  \n[https://en.wikipedia.org/wiki/Quicksort](https://en.wikipedia.org/wiki/Quicksort)\n\n**归并排序**  \n[https://en.wikipedia.org/wiki/Merge_sort](https://en.wikipedia.org/wiki/Merge_sort)\n\n**希尔排序**  \n[https://en.wikipedia.org/wiki/Shellsort](https://en.wikipedia.org/wiki/Shellsort)\n\n**计数排序**  \n[https://en.wikipedia.org/wiki/Counting_sort](https://en.wikipedia.org/wiki/Counting_sort)\n\n**基数排序**  \n[https://en.wikipedia.org/wiki/Radix_sort](https://en.wikipedia.org/wiki/Radix_sort)\n\n**桶排序**  \n[https://en.wikipedia.org/wiki/Bucket_sort](https://en.wikipedia.org/wiki/Bucket_sort)\n\n**堆排序**  \n[https://en.wikipedia.org/wiki/Heapsort](https://en.wikipedia.org/wiki/Heapsort)\n\n## 代码实现\n\n所有的排序算法接口都是相同的，也就是 `vector<int> xxxSort(vector<int>& nums)` 。只需要你传入一个 `vector<int>` 类型的数组，就能返回排序后的结果。\n\n运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。\n\n```cpp\nclass Solution {\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector<int> bubbleSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = n-2; j >= i; --j) {\n                if (nums[j] > nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector<int> selectSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            int idx = i;\n            for (int j = i; j < n; ++j) {\n                if (nums[j] < nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector<int> insertSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = 0; i < n; ++i) {\n            for (int j = i; j > 0 && nums[j] < nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return;\n        int m = l;\n        for (int i = l; i < r; ++i) {\n            if (nums[i] < nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector<int> quickSort(vector<int>& nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector<int> mSort(vector<int>& nums, int l, int r) {\n        if (l >= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector<int> lnums = mSort(nums, l, m);\n        vector<int> rnums = mSort(nums, m+1, r);\n        vector<int> res;\n        int i = 0, j = 0;\n        while (i <= m-l && j <= r-m-1) {\n            if (lnums[i] < rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i <= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j <= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector<int> mergeSort(vector<int>& nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector<int> mergeSortNR(vector<int>& nums) {\n        int n = nums.size();\n        for (int len = 1; len < n; len <<= 1) {\n            for (int l = 0; l < n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector<int> res;\n                int i = l, j = m+1;\n                while (i <= m && j <= r) {\n                    if (nums[i] < nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i <= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j <= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i <= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector<int> shellSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap > 0; gap /= 2) {\n            for (int i = gap; i < n; ++i) {\n                for (int j = i; j-gap >= 0 && nums[j-gap] > nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector<int> countSort(vector<int>& nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector<int> count(m, 0);\n        for (int i = 0; i < n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector<int> res;\n        for (int i = 0; i < m; ++i) {\n            for (int j = 0; j < count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector<int> radixSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv > 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector<int> count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd > 0) {\n            count.assign(10, 0);\n            for (int i = 0; i < n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i < 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i >= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i < n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector<int> bucketSort(vector<int>& nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector<vector<int> > bucket(m);\n        for (int i = 0; i < n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i < m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j < sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector<int>& nums, int p, int s) {\n        while (2*p+1 < s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2<s && nums[c2]>nums[c1]) ? c2 : c1;\n            if (nums[c] > nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector<int> heapSort(vector<int>& nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i >= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i > 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};\n```","slug":"sort-algorithms","published":1,"updated":"2020-12-01T01:57:33.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hsz000tksvb5kmoymw7","content":"<blockquote>\n<p>关注公众号【做一个柔情的程序猿】，每日算法干货马上就来！</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。</p>\n<p><strong>本文并不会详细讲解每种排序算法的原理</strong>，网上有很多很好的教程，大家可以自己去搜了看。</p>\n<p>最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 <a href=\"https://leetcode-cn.com/problems/sort-an-array/\" title=\"LeetCode 912. 排序数组\" target=\"_blank\" rel=\"noopener\">LeetCode 912. 排序数组</a> 这道题。</p>\n<h2 id=\"性质汇总\"><a href=\"#性质汇总\" class=\"headerlink\" title=\"性质汇总\"></a>性质汇总</h2><blockquote>\n<p>如果发现表中有错误，请留言告知。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>最好</th>\n<th>最坏</th>\n<th>平均</th>\n<th>空间</th>\n<th align=\"center\">稳定性</th>\n<th align=\"center\">是否基于比较</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>冒泡排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>选择排序</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(\\log n)$~$O(n)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>希尔排序</td>\n<td>$O(n^{1.3})$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$~$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>计数排序</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>基数排序</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>桶排序</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n+m)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果表格显示有问题的话，还可以直接看下面的汇总图：</p>\n</blockquote>\n<p><img src=\"1.png\" alt=\"十大经典排序算法性质汇总\"></p>\n<h3 id=\"维基百科\"><a href=\"#维基百科\" class=\"headerlink\" title=\"维基百科\"></a>维基百科</h3><p>我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。</p>\n<p><strong>冒泡排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bubble_sort</a></p>\n<p><strong>选择排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Selection_sort</a></p>\n<p><strong>插入排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Insertion_sort</a></p>\n<p><strong>快速排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Quicksort</a></p>\n<p><strong>归并排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Merge_sort</a></p>\n<p><strong>希尔排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Shellsort</a></p>\n<p><strong>计数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Counting_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Counting_sort</a></p>\n<p><strong>基数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Radix_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Radix_sort</a></p>\n<p><strong>桶排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bucket_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bucket_sort</a></p>\n<p><strong>堆排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Heapsort</a></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>所有的排序算法接口都是相同的，也就是 <code>vector&lt;int&gt; xxxSort(vector&lt;int&gt;&amp; nums)</code> 。只需要你传入一个 <code>vector&lt;int&gt;</code> 类型的数组，就能返回排序后的结果。</p>\n<p>运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。</p>\n<pre class=\"line-numbers language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">sortArray</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 冒泡排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> n<span class=\"token number\">-2</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> i<span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 选择排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">selectSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    idx <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 插入排序（超时）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">insertSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 快速排序（24 ms）</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> r<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>m<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">qSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 归并排序（192 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">>=</span> r<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>nums<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span>l<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> lnums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> rnums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token operator\">-</span>l <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> r<span class=\"token operator\">-</span>m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> rnums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>rnums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token operator\">-</span>l<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>lnums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> r<span class=\"token operator\">-</span>m<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>rnums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nums <span class=\"token operator\">=</span> <span class=\"token function\">mSort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 归并排序 + 非递归（80 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">mergeSortNR</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> len <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> len <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l <span class=\"token operator\">&lt;</span> n<span class=\"token operator\">-</span>len<span class=\"token punctuation\">;</span> l <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> l<span class=\"token operator\">+</span>len<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span> l<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>len<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                        res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 希尔排序（40 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">shellSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gap <span class=\"token operator\">=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> gap <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> gap <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> gap<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">-</span>gap <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>gap<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">-</span><span class=\"token operator\">=</span> gap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span>gap<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 计数排序（32 ms）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">countSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> minv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> maxv<span class=\"token operator\">-</span>minv<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>minv<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> res<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>minv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 基数排序（不适用于负数）</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">radixSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>maxv <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            maxv <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            maxd<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> base <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>maxd <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            count<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                count<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> count<span class=\"token punctuation\">[</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                rank<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>count<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>base<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rank<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            maxd<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            base <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 桶排序 (20 ms)</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">bucketSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> maxv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">max_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> minv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token function\">min_element</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> bs <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>maxv<span class=\"token operator\">-</span>minv<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>bs<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> <span class=\"token function\">bucket</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bucket<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>minv<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>bs<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> sz <span class=\"token operator\">=</span> bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span>bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> sz<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                nums<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bucket<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 堆排序（32 ms）</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> c1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> c2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>p<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>c2<span class=\"token operator\">&lt;</span>s <span class=\"token operator\">&amp;&amp;</span> nums<span class=\"token punctuation\">[</span>c2<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>nums<span class=\"token punctuation\">[</span>c1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> c2 <span class=\"token operator\">:</span> c1<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            p <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">heapSort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">adjust</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<blockquote>\n<p>关注公众号【做一个柔情的程序猿】，每日算法干货马上就来！</p>\n</blockquote>\n<p><img src=\"/medias/contact.jpg\" alt></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本文整理并总结了十大经典的排序算法（冒泡排序、选择排序、插入排序、快速排序、归并排序、希尔排序、计数排序、基数排序、桶排序、堆排序）的时间复杂度、空间复杂度等性质。</p>\n<p><strong>本文并不会详细讲解每种排序算法的原理</strong>，网上有很多很好的教程，大家可以自己去搜了看。</p>\n<p>最后我还亲自手写了十种排序算法的 c++ 代码，大家可以用来通过 <a href=\"https://leetcode-cn.com/problems/sort-an-array/\" title=\"LeetCode 912. 排序数组\" target=\"_blank\" rel=\"noopener\">LeetCode 912. 排序数组</a> 这道题。</p>\n<h2 id=\"性质汇总\"><a href=\"#性质汇总\" class=\"headerlink\" title=\"性质汇总\"></a>性质汇总</h2><blockquote>\n<p>如果发现表中有错误，请留言告知。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>算法</th>\n<th>最好</th>\n<th>最坏</th>\n<th>平均</th>\n<th>空间</th>\n<th align=\"center\">稳定性</th>\n<th align=\"center\">是否基于比较</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>冒泡排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>选择排序</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>插入排序</td>\n<td>$O(n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>快速排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(\\log n)$~$O(n)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>归并排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>希尔排序</td>\n<td>$O(n^{1.3})$</td>\n<td>$O(n^2)$</td>\n<td>$O(n\\log n)$~$O(n^2)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n<tr>\n<td>计数排序</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>基数排序</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(nk)$</td>\n<td>$O(n+k)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>桶排序</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n)$</td>\n<td>$O(n+m)$</td>\n<td align=\"center\">$\\checkmark$</td>\n<td align=\"center\">$\\times$</td>\n</tr>\n<tr>\n<td>堆排序</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(n\\log n)$</td>\n<td>$O(1)$</td>\n<td align=\"center\">$\\times$</td>\n<td align=\"center\">$\\checkmark$</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>如果表格显示有问题的话，还可以直接看下面的汇总图：</p>\n</blockquote>\n<p><img src=\"1.png\" alt=\"十大经典排序算法性质汇总\"></p>\n<h3 id=\"维基百科\"><a href=\"#维基百科\" class=\"headerlink\" title=\"维基百科\"></a>维基百科</h3><p>我觉得还是英文维基百科讲的比较详细、严谨。如果大家看的比较累的话，可以自己百度搜索相应的教程。</p>\n<p><strong>冒泡排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bubble_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bubble_sort</a></p>\n<p><strong>选择排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Selection_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Selection_sort</a></p>\n<p><strong>插入排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Insertion_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Insertion_sort</a></p>\n<p><strong>快速排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Quicksort</a></p>\n<p><strong>归并排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Merge_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Merge_sort</a></p>\n<p><strong>希尔排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Shellsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Shellsort</a></p>\n<p><strong>计数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Counting_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Counting_sort</a></p>\n<p><strong>基数排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Radix_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Radix_sort</a></p>\n<p><strong>桶排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Bucket_sort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Bucket_sort</a></p>\n<p><strong>堆排序</strong><br><a href=\"https://en.wikipedia.org/wiki/Heapsort\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Heapsort</a></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>所有的排序算法接口都是相同的，也就是 <code>vector&lt;int&gt; xxxSort(vector&lt;int&gt;&amp; nums)</code> 。只需要你传入一个 <code>vector&lt;int&gt;</code> 类型的数组，就能返回排序后的结果。</p>\n<p>运行下来可以发现，桶排序速度是比较快的。而冒泡排序、选择排序和插入排序因为时间复杂度太高无法通过本题，基数排序因为无法处理负数也不能通过本题。</p>\n<pre><code class=\"cpp\">class Solution {\npublic:\n    vector&lt;int&gt; sortArray(vector&lt;int&gt;&amp; nums) {\n        return quickSort(nums);\n    }\n\n    // 冒泡排序（超时）\n    vector&lt;int&gt; bubbleSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = n-2; j &gt;= i; --j) {\n                if (nums[j] &gt; nums[j+1]) {\n                    swap(nums[j], nums[j+1]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 选择排序（超时）\n    vector&lt;int&gt; selectSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            int idx = i;\n            for (int j = i; j &lt; n; ++j) {\n                if (nums[j] &lt; nums[idx]) {\n                    idx = j;\n                }\n            }\n            swap(nums[i], nums[idx]);\n        }\n        return nums;\n    }\n\n    // 插入排序（超时）\n    vector&lt;int&gt; insertSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = 0; i &lt; n; ++i) {\n            for (int j = i; j &gt; 0 &amp;&amp; nums[j] &lt; nums[j-1]; --j) {\n                swap(nums[j], nums[j-1]);\n            }\n        }\n        return nums;\n    }\n\n    // 快速排序（24 ms）\n    void qSort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return;\n        int m = l;\n        for (int i = l; i &lt; r; ++i) {\n            if (nums[i] &lt; nums[r]) {\n                swap(nums[m++], nums[i]);\n            }\n        }\n        swap(nums[m], nums[r]);\n        qSort(nums, l, m-1);\n        qSort(nums, m+1, r);\n    }\n\n    vector&lt;int&gt; quickSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        qSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序（192 ms）\n    vector&lt;int&gt; mSort(vector&lt;int&gt;&amp; nums, int l, int r) {\n        if (l &gt;= r) return {nums[l]};\n        int m = l+(r-l)/2;\n        vector&lt;int&gt; lnums = mSort(nums, l, m);\n        vector&lt;int&gt; rnums = mSort(nums, m+1, r);\n        vector&lt;int&gt; res;\n        int i = 0, j = 0;\n        while (i &lt;= m-l &amp;&amp; j &lt;= r-m-1) {\n            if (lnums[i] &lt; rnums[j]) {\n                res.push_back(lnums[i++]);\n            } else {\n                res.push_back(rnums[j++]);\n            }\n        }\n        while (i &lt;= m-l) {\n            res.push_back(lnums[i++]);\n        }\n        while (j &lt;= r-m-1) {\n            res.push_back(rnums[j++]);\n        }\n        return res;\n    }\n\n    vector&lt;int&gt; mergeSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        nums = mSort(nums, 0, n-1);\n        return nums;\n    }\n\n    // 归并排序 + 非递归（80 ms）\n    vector&lt;int&gt; mergeSortNR(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int len = 1; len &lt; n; len &lt;&lt;= 1) {\n            for (int l = 0; l &lt; n-len; l += 2*len) {\n                int m = l+len-1;\n                int r = min(n-1, l+2*len-1);\n                vector&lt;int&gt; res;\n                int i = l, j = m+1;\n                while (i &lt;= m &amp;&amp; j &lt;= r) {\n                    if (nums[i] &lt; nums[j]) {\n                        res.push_back(nums[i++]);\n                    } else {\n                        res.push_back(nums[j++]);\n                    }\n                }\n                while (i &lt;= m) {\n                    res.push_back(nums[i++]);\n                }\n                while (j &lt;= r) {\n                    res.push_back(nums[j++]);\n                }\n                for (int i = l; i &lt;= r; ++i) {\n                    nums[i] = res[i-l];\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 希尔排序（40 ms）\n    vector&lt;int&gt; shellSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int gap = n/2; gap &gt; 0; gap /= 2) {\n            for (int i = gap; i &lt; n; ++i) {\n                for (int j = i; j-gap &gt;= 0 &amp;&amp; nums[j-gap] &gt; nums[j]; j -= gap) {\n                    swap(nums[j-gap], nums[j]);\n                }\n            }\n        }\n        return nums;\n    }\n\n    // 计数排序（32 ms）\n    vector&lt;int&gt; countSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        if (!n) return {};\n        int minv = *min_element(nums.begin(), nums.end());\n        int maxv = *max_element(nums.begin(), nums.end());\n        int m = maxv-minv+1;\n        vector&lt;int&gt; count(m, 0);\n        for (int i = 0; i &lt; n; ++i) {\n            count[nums[i]-minv]++;\n        }\n        vector&lt;int&gt; res;\n        for (int i = 0; i &lt; m; ++i) {\n            for (int j = 0; j &lt; count[i]; ++j) {\n                res.push_back(i+minv);\n            }\n        }\n        return res;\n    }\n\n    // 基数排序（不适用于负数）\n    vector&lt;int&gt; radixSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int maxd = 0;\n        while (maxv &gt; 0) {\n            maxv /= 10;\n            maxd++;\n        }\n        vector&lt;int&gt; count(10, 0), rank(n, 0);\n        int base = 1;\n        while (maxd &gt; 0) {\n            count.assign(10, 0);\n            for (int i = 0; i &lt; n; ++i) {\n                count[(nums[i]/base)%10]++;\n            }\n            for (int i = 1; i &lt; 10; ++i) {\n                count[i] += count[i-1];\n            }\n            for (int i = n-1; i &gt;= 0; --i) {\n                rank[--count[(nums[i]/base)%10]] = nums[i];\n            }\n            for (int i = 0; i &lt; n; ++i) {\n                nums[i] = rank[i];\n            }\n            maxd--;\n            base *= 10;\n        }\n        return nums;\n    }\n\n    // 桶排序 (20 ms)\n    vector&lt;int&gt; bucketSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        int maxv = *max_element(nums.begin(), nums.end());\n        int minv = *min_element(nums.begin(), nums.end());\n        int bs = 1000;\n        int m = (maxv-minv)/bs+1;\n        vector&lt;vector&lt;int&gt; &gt; bucket(m);\n        for (int i = 0; i &lt; n; ++i) {\n            bucket[(nums[i]-minv)/bs].push_back(nums[i]);\n        }\n        int idx = 0;\n        for (int i = 0; i &lt; m; ++i) {\n            int sz = bucket[i].size();\n            bucket[i] = quickSort(bucket[i]);\n            for (int j = 0; j &lt; sz; ++j) {\n                nums[idx++] = bucket[i][j];\n            }\n        }\n        return nums;\n    }\n\n    // 堆排序（32 ms）\n    void adjust(vector&lt;int&gt;&amp; nums, int p, int s) {\n        while (2*p+1 &lt; s) {\n            int c1 = 2*p+1;\n            int c2 = 2*p+2;\n            int c = (c2&lt;s &amp;&amp; nums[c2]&gt;nums[c1]) ? c2 : c1;\n            if (nums[c] &gt; nums[p]) swap(nums[c], nums[p]);\n            else break;\n            p = c;\n        }\n    }\n\n    vector&lt;int&gt; heapSort(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        for (int i = n/2-1; i &gt;= 0; --i) {\n            adjust(nums, i, n);\n        }\n        for (int i = n-1; i &gt; 0; --i) {\n            swap(nums[0], nums[i]);\n            adjust(nums, 0, i);\n        }\n        return nums;\n    }\n};</code></pre>\n"},{"title":"手把手教你进行pip换源","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-03T12:27:39.000Z","password":null,"summary":"学习python，最重要的是我们需要的各样第三方资源包，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行pip install xx进行安装，但是一般下载都是非常缓慢的，因此就需要自己去换源，加快资源包下载速度。","_content":"\n## 为什么要换源\n学习python，最重要的是我们需要的各样第三方资源包，比如爬虫，有`requests，xpath`，爬虫界的扛把子`Scrapy；Web有django，flask，restframework`；可视化pyQT有`PyQt5，PyQt5.QtWidgets，skimage，cv2`数据可视化届的扛把子`dlib，basemap，pyproj`，其他的比如`sys，os，datatime`等等，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行`pip install xx`进行安装，但是我相信，以下这种情况大家肯定遇到过：\n\n![](https://img-blog.csdnimg.cn/20200316194419813.png)\n\n可以看到，安装资源包的过程非常的慢，可能都是几KB/s，有时甚至是一百多B/s，但是正常的网速最起码有3-5M/s，这就比较不开心了，最恶心的是，安装的慢就算了，可能安装安装着，直接error了，嗯...哭吧\n\n![](https://img-blog.csdnimg.cn/20200316194520677.png)\n\n还有一种情况是什么呢，就是这种，直接飘黄，警告，恶心吧。。。\n\n![](https://img-blog.csdnimg.cn/2020031619452719.png)\n\n***为什么会造成这种情况呢？***\n\n因为需要的获取的资源包，默认是直接从pypi官网获取的，而pypi是国外的网速就慢，再加上我们国家会限制一些国外不正常的网站，可能会存在误杀，所以，直接从pypi官网获取资源包的时候，难免会各种限速，尤其是安装大一点的资源包的时候，更凉。。。。。\n\n## 国内映像\n总有一些大佬，牛逼的人为我们指路，让我们少踩点坑。虽然官网的pypi下载速度慢，但是大佬们为了照顾我们的情绪，专门开发了国内站点，内容和官网的pypi一模一样，但是他的服务器在国内，而且速度非常快，只要我们将pip默认的下载源换成国内源，我们在pip安装时，就是从国内获取了，速度绝对杠杠的，而且包质量没问题，国内站点会隔一段时间同步一次，基本不用担心获取的包有问题，美滋滋，在这里先感谢各位大佬、大神。\n  这里呢，我们把现有的国内源贴出来，如下图所示：\n  \n\n> 这里是引用\n\n![](https://img-blog.csdnimg.cn/2020031619472466.png)\n ## 换源步骤\n（1）首先，打开c盘，找到用户这个文件夹，找到对应你自己主机的文件夹，我的是如下图所示。\n![](https://img-blog.csdnimg.cn/20200316194831891.png)\n（2）接着在文件夹下创建一个名为pip的文件夹，就像下图这样\n![](https://img-blog.csdnimg.cn/20200316194838851.png)\n（3）然后进入这个文件夹，创建一个pip.ini文件\n![](https://img-blog.csdnimg.cn/20200316194845398.png)\n（4）编辑文件，添加如下内容\n![](https://img-blog.csdnimg.cn/20200316194852623.png)\n选择哪个源链接看自己的兴趣。。。。。我这选择豆瓣\n（5）最后保存，重新打开cmd，再安装时，速度杠杠的。。。。。\n![](https://img-blog.csdnimg.cn/20200316194858861.png)\n我还有一篇博文讲的是另外一种方法也可以达到这样的效果，见：\n\n[python快速安装资源包](https://blog.csdn.net/ywsydwsbn/article/details/104896612)\n\n\n**~~希望可以帮助到大家！！！！！！！~~** ","source":"_posts/pip-change-source.md","raw":"---\ntitle: 手把手教你进行pip换源\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-03 20:27:39\npassword:\nsummary: 学习python，最重要的是我们需要的各样第三方资源包，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行pip install xx进行安装，但是一般下载都是非常缓慢的，因此就需要自己去换源，加快资源包下载速度。\ntags: \n- python\n- pip\ncategories: \n- python\n---\n\n## 为什么要换源\n学习python，最重要的是我们需要的各样第三方资源包，比如爬虫，有`requests，xpath`，爬虫界的扛把子`Scrapy；Web有django，flask，restframework`；可视化pyQT有`PyQt5，PyQt5.QtWidgets，skimage，cv2`数据可视化届的扛把子`dlib，basemap，pyproj`，其他的比如`sys，os，datatime`等等，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行`pip install xx`进行安装，但是我相信，以下这种情况大家肯定遇到过：\n\n![](https://img-blog.csdnimg.cn/20200316194419813.png)\n\n可以看到，安装资源包的过程非常的慢，可能都是几KB/s，有时甚至是一百多B/s，但是正常的网速最起码有3-5M/s，这就比较不开心了，最恶心的是，安装的慢就算了，可能安装安装着，直接error了，嗯...哭吧\n\n![](https://img-blog.csdnimg.cn/20200316194520677.png)\n\n还有一种情况是什么呢，就是这种，直接飘黄，警告，恶心吧。。。\n\n![](https://img-blog.csdnimg.cn/2020031619452719.png)\n\n***为什么会造成这种情况呢？***\n\n因为需要的获取的资源包，默认是直接从pypi官网获取的，而pypi是国外的网速就慢，再加上我们国家会限制一些国外不正常的网站，可能会存在误杀，所以，直接从pypi官网获取资源包的时候，难免会各种限速，尤其是安装大一点的资源包的时候，更凉。。。。。\n\n## 国内映像\n总有一些大佬，牛逼的人为我们指路，让我们少踩点坑。虽然官网的pypi下载速度慢，但是大佬们为了照顾我们的情绪，专门开发了国内站点，内容和官网的pypi一模一样，但是他的服务器在国内，而且速度非常快，只要我们将pip默认的下载源换成国内源，我们在pip安装时，就是从国内获取了，速度绝对杠杠的，而且包质量没问题，国内站点会隔一段时间同步一次，基本不用担心获取的包有问题，美滋滋，在这里先感谢各位大佬、大神。\n  这里呢，我们把现有的国内源贴出来，如下图所示：\n  \n\n> 这里是引用\n\n![](https://img-blog.csdnimg.cn/2020031619472466.png)\n ## 换源步骤\n（1）首先，打开c盘，找到用户这个文件夹，找到对应你自己主机的文件夹，我的是如下图所示。\n![](https://img-blog.csdnimg.cn/20200316194831891.png)\n（2）接着在文件夹下创建一个名为pip的文件夹，就像下图这样\n![](https://img-blog.csdnimg.cn/20200316194838851.png)\n（3）然后进入这个文件夹，创建一个pip.ini文件\n![](https://img-blog.csdnimg.cn/20200316194845398.png)\n（4）编辑文件，添加如下内容\n![](https://img-blog.csdnimg.cn/20200316194852623.png)\n选择哪个源链接看自己的兴趣。。。。。我这选择豆瓣\n（5）最后保存，重新打开cmd，再安装时，速度杠杠的。。。。。\n![](https://img-blog.csdnimg.cn/20200316194858861.png)\n我还有一篇博文讲的是另外一种方法也可以达到这样的效果，见：\n\n[python快速安装资源包](https://blog.csdn.net/ywsydwsbn/article/details/104896612)\n\n\n**~~希望可以帮助到大家！！！！！！！~~** ","slug":"pip-change-source","published":1,"updated":"2020-12-03T12:34:06.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1ht1000vksvbmk7jskni","content":"<h2 id=\"为什么要换源\"><a href=\"#为什么要换源\" class=\"headerlink\" title=\"为什么要换源\"></a>为什么要换源</h2><p>学习python，最重要的是我们需要的各样第三方资源包，比如爬虫，有<code>requests，xpath</code>，爬虫界的扛把子<code>Scrapy；Web有django，flask，restframework</code>；可视化pyQT有<code>PyQt5，PyQt5.QtWidgets，skimage，cv2</code>数据可视化届的扛把子<code>dlib，basemap，pyproj</code>，其他的比如<code>sys，os，datatime</code>等等，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行<code>pip install xx</code>进行安装，但是我相信，以下这种情况大家肯定遇到过：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200316194419813.png\" alt></p>\n<p>可以看到，安装资源包的过程非常的慢，可能都是几KB/s，有时甚至是一百多B/s，但是正常的网速最起码有3-5M/s，这就比较不开心了，最恶心的是，安装的慢就算了，可能安装安装着，直接error了，嗯…哭吧</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200316194520677.png\" alt></p>\n<p>还有一种情况是什么呢，就是这种，直接飘黄，警告，恶心吧。。。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020031619452719.png\" alt></p>\n<p><strong><em>为什么会造成这种情况呢？</em></strong></p>\n<p>因为需要的获取的资源包，默认是直接从pypi官网获取的，而pypi是国外的网速就慢，再加上我们国家会限制一些国外不正常的网站，可能会存在误杀，所以，直接从pypi官网获取资源包的时候，难免会各种限速，尤其是安装大一点的资源包的时候，更凉。。。。。</p>\n<h2 id=\"国内映像\"><a href=\"#国内映像\" class=\"headerlink\" title=\"国内映像\"></a>国内映像</h2><p>总有一些大佬，牛逼的人为我们指路，让我们少踩点坑。虽然官网的pypi下载速度慢，但是大佬们为了照顾我们的情绪，专门开发了国内站点，内容和官网的pypi一模一样，但是他的服务器在国内，而且速度非常快，只要我们将pip默认的下载源换成国内源，我们在pip安装时，就是从国内获取了，速度绝对杠杠的，而且包质量没问题，国内站点会隔一段时间同步一次，基本不用担心获取的包有问题，美滋滋，在这里先感谢各位大佬、大神。<br>  这里呢，我们把现有的国内源贴出来，如下图所示：</p>\n<blockquote>\n<p>这里是引用</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/2020031619472466.png\" alt></p>\n<h2 id=\"换源步骤\"><a href=\"#换源步骤\" class=\"headerlink\" title=\"换源步骤\"></a>换源步骤</h2><p>（1）首先，打开c盘，找到用户这个文件夹，找到对应你自己主机的文件夹，我的是如下图所示。<br><img src=\"https://img-blog.csdnimg.cn/20200316194831891.png\" alt><br>（2）接着在文件夹下创建一个名为pip的文件夹，就像下图这样<br><img src=\"https://img-blog.csdnimg.cn/20200316194838851.png\" alt><br>（3）然后进入这个文件夹，创建一个pip.ini文件<br><img src=\"https://img-blog.csdnimg.cn/20200316194845398.png\" alt><br>（4）编辑文件，添加如下内容<br><img src=\"https://img-blog.csdnimg.cn/20200316194852623.png\" alt><br>选择哪个源链接看自己的兴趣。。。。。我这选择豆瓣<br>（5）最后保存，重新打开cmd，再安装时，速度杠杠的。。。。。<br><img src=\"https://img-blog.csdnimg.cn/20200316194858861.png\" alt><br>我还有一篇博文讲的是另外一种方法也可以达到这样的效果，见：</p>\n<p><a href=\"https://blog.csdn.net/ywsydwsbn/article/details/104896612\" target=\"_blank\" rel=\"noopener\">python快速安装资源包</a></p>\n<p><strong><del>希望可以帮助到大家！！！！！！！</del></strong> </p>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h2 id=\"为什么要换源\"><a href=\"#为什么要换源\" class=\"headerlink\" title=\"为什么要换源\"></a>为什么要换源</h2><p>学习python，最重要的是我们需要的各样第三方资源包，比如爬虫，有<code>requests，xpath</code>，爬虫界的扛把子<code>Scrapy；Web有django，flask，restframework</code>；可视化pyQT有<code>PyQt5，PyQt5.QtWidgets，skimage，cv2</code>数据可视化届的扛把子<code>dlib，basemap，pyproj</code>，其他的比如<code>sys，os，datatime</code>等等，没有他们学习python是寸步难行，正常情况下大家都是通过在终端输入命令行<code>pip install xx</code>进行安装，但是我相信，以下这种情况大家肯定遇到过：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200316194419813.png\" alt></p>\n<p>可以看到，安装资源包的过程非常的慢，可能都是几KB/s，有时甚至是一百多B/s，但是正常的网速最起码有3-5M/s，这就比较不开心了，最恶心的是，安装的慢就算了，可能安装安装着，直接error了，嗯…哭吧</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200316194520677.png\" alt></p>\n<p>还有一种情况是什么呢，就是这种，直接飘黄，警告，恶心吧。。。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020031619452719.png\" alt></p>\n<p><strong><em>为什么会造成这种情况呢？</em></strong></p>\n<p>因为需要的获取的资源包，默认是直接从pypi官网获取的，而pypi是国外的网速就慢，再加上我们国家会限制一些国外不正常的网站，可能会存在误杀，所以，直接从pypi官网获取资源包的时候，难免会各种限速，尤其是安装大一点的资源包的时候，更凉。。。。。</p>\n<h2 id=\"国内映像\"><a href=\"#国内映像\" class=\"headerlink\" title=\"国内映像\"></a>国内映像</h2><p>总有一些大佬，牛逼的人为我们指路，让我们少踩点坑。虽然官网的pypi下载速度慢，但是大佬们为了照顾我们的情绪，专门开发了国内站点，内容和官网的pypi一模一样，但是他的服务器在国内，而且速度非常快，只要我们将pip默认的下载源换成国内源，我们在pip安装时，就是从国内获取了，速度绝对杠杠的，而且包质量没问题，国内站点会隔一段时间同步一次，基本不用担心获取的包有问题，美滋滋，在这里先感谢各位大佬、大神。<br>  这里呢，我们把现有的国内源贴出来，如下图所示：</p>\n<blockquote>\n<p>这里是引用</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/2020031619472466.png\" alt></p>\n<h2 id=\"换源步骤\"><a href=\"#换源步骤\" class=\"headerlink\" title=\"换源步骤\"></a>换源步骤</h2><p>（1）首先，打开c盘，找到用户这个文件夹，找到对应你自己主机的文件夹，我的是如下图所示。<br><img src=\"https://img-blog.csdnimg.cn/20200316194831891.png\" alt><br>（2）接着在文件夹下创建一个名为pip的文件夹，就像下图这样<br><img src=\"https://img-blog.csdnimg.cn/20200316194838851.png\" alt><br>（3）然后进入这个文件夹，创建一个pip.ini文件<br><img src=\"https://img-blog.csdnimg.cn/20200316194845398.png\" alt><br>（4）编辑文件，添加如下内容<br><img src=\"https://img-blog.csdnimg.cn/20200316194852623.png\" alt><br>选择哪个源链接看自己的兴趣。。。。。我这选择豆瓣<br>（5）最后保存，重新打开cmd，再安装时，速度杠杠的。。。。。<br><img src=\"https://img-blog.csdnimg.cn/20200316194858861.png\" alt><br>我还有一篇博文讲的是另外一种方法也可以达到这样的效果，见：</p>\n<p><a href=\"https://blog.csdn.net/ywsydwsbn/article/details/104896612\" target=\"_blank\" rel=\"noopener\">python快速安装资源包</a></p>\n<p><strong><del>希望可以帮助到大家！！！！！！！</del></strong> </p>\n"},{"title":"数据分析模型（二）：模糊聚类分析方法及实例（附完整代码）","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2020-12-05T11:30:02.000Z","password":null,"summary":"聚类分析方法是数理统计中研究“物以类聚”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称系统聚类法。","_content":"\n聚类分析是数据挖掘技术中的一种重要的方法，可以作为一个独立的工具来获得数据分布情况，它广泛地应用于**模式识别、数据分析、图像处理、生物学、经济学**等许多领域。\n\n聚类分析方法是数理统计中研究“==物以类聚==”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称==系统聚类法==。\n\n# 模糊聚类分析基本知识\n## 1. 普通等价关系\n\n**（1）自反性**\n对任意![](https://img-blog.csdnimg.cn/20200503094146607.png)，都有![](https://img-blog.csdnimg.cn/20200503094200203.png)（即任何元素的自身和自身有这种关系），则称R是自反关系。相应的矩阵称自反矩阵。\n**（2）对称性**\n如果从![](https://img-blog.csdnimg.cn/20200503094225686.png)可以推出![](https://img-blog.csdnimg.cn/20200503094237848.png)（即若![](https://img-blog.csdnimg.cn/20200503094253823.png)有这种关系，则![](https://img-blog.csdnimg.cn/20200503094308104.png)也有这种关系），则称R是对称关系。相应的矩阵称为对称矩阵。\n例如，朋友是对称关系。父子则不是对称关系。\n**（３）传递性**\n如果![](https://img-blog.csdnimg.cn/20200503094338355.png)可以推出![](https://img-blog.csdnimg.cn/20200503094350947.png)（即若u和v有这种关系，v和w有这种关系，u和w则必有这种关系），则称R是传递关系。相应的矩阵称传递矩阵。\n\n**相似关系：具有自反性和对称性的关系称为相似关系。\n等价关系：具有自反性、对称性和传递性的关系称为等价性。**\n## 2. 模糊等价关系\n设论域U为有限集合，U上的一个模糊关系R，与其对应的模糊矩阵![](https://img-blog.csdnimg.cn/20200503094519267.png)若满足：\n自反性：![](https://img-blog.csdnimg.cn/20200503094531312.png)\n\n对称性：![](https://img-blog.csdnimg.cn/2020050309453962.png)\n\n传递性：![](https://img-blog.csdnimg.cn/20200503094544877.png)\n\n则称n是一个模糊等价矩阵，其关系是模糊等价关系。\n若![](https://img-blog.csdnimg.cn/2020050309460354.png)只满足自反性和对称性，则称为相似关系。\n\n# 相关定理\n**定理1**  设R是![](https://img-blog.csdnimg.cn/20200503094655826.png)上的一个自反、对称关系，即R是n阶模糊相似矩阵，则存在一个最小的自然数![](https://img-blog.csdnimg.cn/20200503094716636.png)，使得![](https://img-blog.csdnimg.cn/20200503094727845.png)为模糊等价矩阵，且对于一切大于k的自然数w，恒有![](https://img-blog.csdnimg.cn/20200503094750558.png)。![](https://img-blog.csdnimg.cn/20200503094802206.png)称为R的传递闭包矩阵，记为![](https://img-blog.csdnimg.cn/20200503094814304.png)。\n\n**定理2**  如果模糊关系矩阵R是模糊等价关系，则对于任意![](https://img-blog.csdnimg.cn/20200503094849389.png)，所得的λ截矩阵![](https://img-blog.csdnimg.cn/20200503095004541.png)也是等价关系。\n根据这个定理，在模糊关系R确定之后，对给定的数![](https://img-blog.csdnimg.cn/20200503095033698.png)，便可得到一个相应的普通等价关系![](https://img-blog.csdnimg.cn/20200503095043887.png)，可以决定一个λ水平分类。\n\n**定理3**  如果![](https://img-blog.csdnimg.cn/20200503095104718.png)，则![](https://img-blog.csdnimg.cn/20200503095118112.png)所分出的每一类必是![](https://img-blog.csdnimg.cn/20200503095126706.png)的某一类的子类。称![](https://img-blog.csdnimg.cn/20200503095137659.png)分类法是![](https://img-blog.csdnimg.cn/20200503095147371.png)分类法的细化。\n\n根据上述3个定理，可以进行聚类分析操作，例如，当所给矩阵关系是相似关系，由定理1可知，自乘若干次后，就可以获得等价关系矩阵，然后再由定理2和定理3进行聚类。\n# 模糊聚类分析步骤\n模糊聚类分析步骤可以概括为：**==数据标准化，建立模糊相似矩阵，聚类==**。\n\n# 模糊等价矩阵聚类\n## （1）传递闭包法\n根据标定所建立的模糊矩阵R，一般说来似具有自反性和对称性，不满足传递性，只是模糊相似矩阵，只有当R是模糊等价矩阵时才能聚类，故需要将R改造成模糊等价矩阵。可以通过求传递包将n阶模糊相似矩阵R改造成n阶模糊等价矩阵t（R）。从模糊矩阵R出发，依次求平方：![](https://img-blog.csdnimg.cn/20200503095814480.png)，当第一次出现![](https://img-blog.csdnimg.cn/20200503095828465.png)时，表明![](https://img-blog.csdnimg.cn/20200503095836432.png)已经具有传递性，![](https://img-blog.csdnimg.cn/20200503095908503.png)就是所求的传递闭包t（R）。\n\n在R改造成模糊等价矩阵![](https://img-blog.csdnimg.cn/20200503100025132.png)之后进行截运算，即![](https://img-blog.csdnimg.cn/2020050310004179.png)，可以获得所需分类。\n从上述分析可知，λ从大到小分类从细到粗，是一个动态过程。\n当n较大时，求传递闭包法的运算量比较大，不适于手工分类，便于计算机程序设计。\n## （2）最大树法\n在被分类的元素比较多时，要把所建立的模糊相似关系“改造”成模糊等值关系是相当麻烦的，比较简便的方法是——最大树法。\n最大树法进行模糊聚类分析的步骤如下：在模糊相似关系矩阵![](https://img-blog.csdnimg.cn/20200503100131515.png)中，按![](https://img-blog.csdnimg.cn/2020050310014411.png)的大小顺序依次用直线将元素连接起来，并标上权重（![](https://img-blog.csdnimg.cn/20200503100156524.png)的数值）。如果在某一步使图中出现了回路，就不画这一步，依次走下一步，直到所有元素连通为止。这样就得到了一棵所谓的最大树（最大树不是唯一的，但不影响分类的结果）。然后，取定λ值，去掉权重低于λ的连线，即可将元素分类，互相连通的元素归为一类。\n## （3）编网法\n先取定λ，作截矩阵![](https://img-blog.csdnimg.cn/20200503100340180.png)，并将![](https://img-blog.csdnimg.cn/20200503100347908.png)的主对角线上填入元素的符号。在主对角线下方，以节点号代替![](https://img-blog.csdnimg.cn/20200503100511230.png)中的“1”，而“0”则略去不写。由节点“*”向主对角线上引经线（竖线）和纬线（横线）。所谓编网，就是在结点处将经过的经纬线捆绑起来，这样来实现分类。通过打结而能互相联结的点属于同一类。\n\n# 系统聚类法\n在平面上有 7 个点w1,w2,w3,...,w7（如图 1（a）），可以用聚类图（如图 1（b））来表示聚类结果。\n![](https://img-blog.csdnimg.cn/20200503102459346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n![](https://img-blog.csdnimg.cn/20200503102436316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n怎样才能生成这样的聚类图呢？步骤如下：设Ω ={w1,w2,...,w7}，\n1）计算 n 个样本点两两之间的距离{dij} ，记为矩阵\n![](https://img-blog.csdnimg.cn/20200503102716543.png)\n\n2）首先构造 n 个类，每一个类中只包含一个样本点，每一类的平台高度均为零；\n3）合并距离最近的两类为新类，并且以这两类间的距离值作为聚类图中的平台高\n度；\n4）计算新类与当前各类的距离，若类的个数已经等于 1，转入步骤 5），否则，回到步骤 3）；\n5）画聚类图；\n6）决定类的个数和类。\n显而易见，这种系统归类过程与计算类和类之间的距离有关，采用不同的距离定义，有可能得出不同的聚类结果。\n\n# 示例\n设有5个销售员w1,w2,w3,w4,w5 ，他们的销售业绩由二维变量 （v1,v2）描述，见表 1。\n![](https://img-blog.csdnimg.cn/20200503103028700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n记销售员 wi(i=1,2,3,4,5)的销售业绩为(vi1,vi2) 。如果使用绝对值距离来测量点与点之间的距离，使用最短距离法来测量类与类之间的距离，即\n![](https://img-blog.csdnimg.cn/20200503103152701.png)\n由距离公式d(.,.)，可以算出距离矩阵。\n![](https://img-blog.csdnimg.cn/20200503103247213.png)\n![](https://img-blog.csdnimg.cn/20200503103310906.png)\n![](https://img-blog.csdnimg.cn/20200503103328450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n这样，h9已把所有的样本点聚为一类，因此，可以转到画聚类图步骤。画出聚类图（如图 2（a））。这是一颗二叉树，如图 2（b）。\n有了聚类图，就可以按要求进行分类。可以看出，在这五个推销员中w5的工作成绩最佳，w3,w4 的工作成绩较好，而w1,w2 的工作成绩较差。\n完全类似于以上步骤，但以最长距离法来计算类间距离，就称为系统聚类法中的最长距离法。\n\n# matlab代码详解\n\n```bash\nclc,clear\na=[1,0;1,1;3,2;4,3;2,5];\n[m,n]=size(a);\nd=zeros(m);\nfor i=1:m\nfor j=i+1:m\nd(i,j)=mandist(a(i,:),a(j,:)');\n%求第一个矩阵的行向量与第二个矩阵的列向量之间对应的绝对值距离\nend\nend\nd\nnd=nonzeros(d); %去掉d中的零元素，非零元素按列排列\nnd=union(nd,nd) %去掉重复的非零元素\nfor i=1:m-1\nnd_min=min(nd);\n[row,col]=find(d==nd_min);tm=union(row,col); %row和col归为一类\ntm=reshape(tm,1,length(tm)); %把数组tm变成行向量\nfprintf('第%d次合成，平台高度为%d时的分类结果为：%s\\n',...\ni,nd_min,int2str(tm));\nnd(find(nd==nd_min))=[]; %删除已经归类的元素\nif length(nd)==0\nbreak\nend\nend\n```\n运行结果如下：\n![](https://img-blog.csdnimg.cn/20200503104056646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n或者使用MATLAB统计工具箱的相关命令，编写如下程序：\n\n```bash\nclc,clear\na=[1,0;1,1;3,2;4,3;2,5];\ny=pdist(a,'cityblock'); %求a的两两行向量间的绝对值距离\nyc=squareform(y) %变换成距离方阵\nz=linkage(y) %产生等级聚类树\n[h,t]=dendrogram(z) %画聚类图\nT=cluster(z,'maxclust',3) %把对象划分成3类\nfor i=1:3\ntm=find(T==i); %求第i类的对象\ntm=reshape(tm,1,length(tm)); %变成行向量\nfprintf('第%d类的有%s\\n',i,int2str(tm)); %显示分类结果\nend\n```\n运行结果：\n![](https://img-blog.csdnimg.cn/20200503104238600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n![](https://img-blog.csdnimg.cn/20200503104251606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n聚类图：\n![](https://img-blog.csdnimg.cn/20200503104310537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n> **接下的博文将对代码里面相关的命令进行详解，请大家持续关注！！！**\n![](https://img-blog.csdnimg.cn/20200503104718800.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n> 未经本人允许不得转载\n\n","source":"_posts/Fuzzy-cluster-analysis.md","raw":"---\ntitle: 数据分析模型（二）：模糊聚类分析方法及实例（附完整代码）\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-12-05 19:30:02\npassword:\nsummary: 聚类分析方法是数理统计中研究“物以类聚”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称系统聚类法。\ntags: \n- 数学分析模型\n- matlab\ncategories: \n- 数学建模\n---\n\n聚类分析是数据挖掘技术中的一种重要的方法，可以作为一个独立的工具来获得数据分布情况，它广泛地应用于**模式识别、数据分析、图像处理、生物学、经济学**等许多领域。\n\n聚类分析方法是数理统计中研究“==物以类聚==”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称==系统聚类法==。\n\n# 模糊聚类分析基本知识\n## 1. 普通等价关系\n\n**（1）自反性**\n对任意![](https://img-blog.csdnimg.cn/20200503094146607.png)，都有![](https://img-blog.csdnimg.cn/20200503094200203.png)（即任何元素的自身和自身有这种关系），则称R是自反关系。相应的矩阵称自反矩阵。\n**（2）对称性**\n如果从![](https://img-blog.csdnimg.cn/20200503094225686.png)可以推出![](https://img-blog.csdnimg.cn/20200503094237848.png)（即若![](https://img-blog.csdnimg.cn/20200503094253823.png)有这种关系，则![](https://img-blog.csdnimg.cn/20200503094308104.png)也有这种关系），则称R是对称关系。相应的矩阵称为对称矩阵。\n例如，朋友是对称关系。父子则不是对称关系。\n**（３）传递性**\n如果![](https://img-blog.csdnimg.cn/20200503094338355.png)可以推出![](https://img-blog.csdnimg.cn/20200503094350947.png)（即若u和v有这种关系，v和w有这种关系，u和w则必有这种关系），则称R是传递关系。相应的矩阵称传递矩阵。\n\n**相似关系：具有自反性和对称性的关系称为相似关系。\n等价关系：具有自反性、对称性和传递性的关系称为等价性。**\n## 2. 模糊等价关系\n设论域U为有限集合，U上的一个模糊关系R，与其对应的模糊矩阵![](https://img-blog.csdnimg.cn/20200503094519267.png)若满足：\n自反性：![](https://img-blog.csdnimg.cn/20200503094531312.png)\n\n对称性：![](https://img-blog.csdnimg.cn/2020050309453962.png)\n\n传递性：![](https://img-blog.csdnimg.cn/20200503094544877.png)\n\n则称n是一个模糊等价矩阵，其关系是模糊等价关系。\n若![](https://img-blog.csdnimg.cn/2020050309460354.png)只满足自反性和对称性，则称为相似关系。\n\n# 相关定理\n**定理1**  设R是![](https://img-blog.csdnimg.cn/20200503094655826.png)上的一个自反、对称关系，即R是n阶模糊相似矩阵，则存在一个最小的自然数![](https://img-blog.csdnimg.cn/20200503094716636.png)，使得![](https://img-blog.csdnimg.cn/20200503094727845.png)为模糊等价矩阵，且对于一切大于k的自然数w，恒有![](https://img-blog.csdnimg.cn/20200503094750558.png)。![](https://img-blog.csdnimg.cn/20200503094802206.png)称为R的传递闭包矩阵，记为![](https://img-blog.csdnimg.cn/20200503094814304.png)。\n\n**定理2**  如果模糊关系矩阵R是模糊等价关系，则对于任意![](https://img-blog.csdnimg.cn/20200503094849389.png)，所得的λ截矩阵![](https://img-blog.csdnimg.cn/20200503095004541.png)也是等价关系。\n根据这个定理，在模糊关系R确定之后，对给定的数![](https://img-blog.csdnimg.cn/20200503095033698.png)，便可得到一个相应的普通等价关系![](https://img-blog.csdnimg.cn/20200503095043887.png)，可以决定一个λ水平分类。\n\n**定理3**  如果![](https://img-blog.csdnimg.cn/20200503095104718.png)，则![](https://img-blog.csdnimg.cn/20200503095118112.png)所分出的每一类必是![](https://img-blog.csdnimg.cn/20200503095126706.png)的某一类的子类。称![](https://img-blog.csdnimg.cn/20200503095137659.png)分类法是![](https://img-blog.csdnimg.cn/20200503095147371.png)分类法的细化。\n\n根据上述3个定理，可以进行聚类分析操作，例如，当所给矩阵关系是相似关系，由定理1可知，自乘若干次后，就可以获得等价关系矩阵，然后再由定理2和定理3进行聚类。\n# 模糊聚类分析步骤\n模糊聚类分析步骤可以概括为：**==数据标准化，建立模糊相似矩阵，聚类==**。\n\n# 模糊等价矩阵聚类\n## （1）传递闭包法\n根据标定所建立的模糊矩阵R，一般说来似具有自反性和对称性，不满足传递性，只是模糊相似矩阵，只有当R是模糊等价矩阵时才能聚类，故需要将R改造成模糊等价矩阵。可以通过求传递包将n阶模糊相似矩阵R改造成n阶模糊等价矩阵t（R）。从模糊矩阵R出发，依次求平方：![](https://img-blog.csdnimg.cn/20200503095814480.png)，当第一次出现![](https://img-blog.csdnimg.cn/20200503095828465.png)时，表明![](https://img-blog.csdnimg.cn/20200503095836432.png)已经具有传递性，![](https://img-blog.csdnimg.cn/20200503095908503.png)就是所求的传递闭包t（R）。\n\n在R改造成模糊等价矩阵![](https://img-blog.csdnimg.cn/20200503100025132.png)之后进行截运算，即![](https://img-blog.csdnimg.cn/2020050310004179.png)，可以获得所需分类。\n从上述分析可知，λ从大到小分类从细到粗，是一个动态过程。\n当n较大时，求传递闭包法的运算量比较大，不适于手工分类，便于计算机程序设计。\n## （2）最大树法\n在被分类的元素比较多时，要把所建立的模糊相似关系“改造”成模糊等值关系是相当麻烦的，比较简便的方法是——最大树法。\n最大树法进行模糊聚类分析的步骤如下：在模糊相似关系矩阵![](https://img-blog.csdnimg.cn/20200503100131515.png)中，按![](https://img-blog.csdnimg.cn/2020050310014411.png)的大小顺序依次用直线将元素连接起来，并标上权重（![](https://img-blog.csdnimg.cn/20200503100156524.png)的数值）。如果在某一步使图中出现了回路，就不画这一步，依次走下一步，直到所有元素连通为止。这样就得到了一棵所谓的最大树（最大树不是唯一的，但不影响分类的结果）。然后，取定λ值，去掉权重低于λ的连线，即可将元素分类，互相连通的元素归为一类。\n## （3）编网法\n先取定λ，作截矩阵![](https://img-blog.csdnimg.cn/20200503100340180.png)，并将![](https://img-blog.csdnimg.cn/20200503100347908.png)的主对角线上填入元素的符号。在主对角线下方，以节点号代替![](https://img-blog.csdnimg.cn/20200503100511230.png)中的“1”，而“0”则略去不写。由节点“*”向主对角线上引经线（竖线）和纬线（横线）。所谓编网，就是在结点处将经过的经纬线捆绑起来，这样来实现分类。通过打结而能互相联结的点属于同一类。\n\n# 系统聚类法\n在平面上有 7 个点w1,w2,w3,...,w7（如图 1（a）），可以用聚类图（如图 1（b））来表示聚类结果。\n![](https://img-blog.csdnimg.cn/20200503102459346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n![](https://img-blog.csdnimg.cn/20200503102436316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n怎样才能生成这样的聚类图呢？步骤如下：设Ω ={w1,w2,...,w7}，\n1）计算 n 个样本点两两之间的距离{dij} ，记为矩阵\n![](https://img-blog.csdnimg.cn/20200503102716543.png)\n\n2）首先构造 n 个类，每一个类中只包含一个样本点，每一类的平台高度均为零；\n3）合并距离最近的两类为新类，并且以这两类间的距离值作为聚类图中的平台高\n度；\n4）计算新类与当前各类的距离，若类的个数已经等于 1，转入步骤 5），否则，回到步骤 3）；\n5）画聚类图；\n6）决定类的个数和类。\n显而易见，这种系统归类过程与计算类和类之间的距离有关，采用不同的距离定义，有可能得出不同的聚类结果。\n\n# 示例\n设有5个销售员w1,w2,w3,w4,w5 ，他们的销售业绩由二维变量 （v1,v2）描述，见表 1。\n![](https://img-blog.csdnimg.cn/20200503103028700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n记销售员 wi(i=1,2,3,4,5)的销售业绩为(vi1,vi2) 。如果使用绝对值距离来测量点与点之间的距离，使用最短距离法来测量类与类之间的距离，即\n![](https://img-blog.csdnimg.cn/20200503103152701.png)\n由距离公式d(.,.)，可以算出距离矩阵。\n![](https://img-blog.csdnimg.cn/20200503103247213.png)\n![](https://img-blog.csdnimg.cn/20200503103310906.png)\n![](https://img-blog.csdnimg.cn/20200503103328450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n这样，h9已把所有的样本点聚为一类，因此，可以转到画聚类图步骤。画出聚类图（如图 2（a））。这是一颗二叉树，如图 2（b）。\n有了聚类图，就可以按要求进行分类。可以看出，在这五个推销员中w5的工作成绩最佳，w3,w4 的工作成绩较好，而w1,w2 的工作成绩较差。\n完全类似于以上步骤，但以最长距离法来计算类间距离，就称为系统聚类法中的最长距离法。\n\n# matlab代码详解\n\n```bash\nclc,clear\na=[1,0;1,1;3,2;4,3;2,5];\n[m,n]=size(a);\nd=zeros(m);\nfor i=1:m\nfor j=i+1:m\nd(i,j)=mandist(a(i,:),a(j,:)');\n%求第一个矩阵的行向量与第二个矩阵的列向量之间对应的绝对值距离\nend\nend\nd\nnd=nonzeros(d); %去掉d中的零元素，非零元素按列排列\nnd=union(nd,nd) %去掉重复的非零元素\nfor i=1:m-1\nnd_min=min(nd);\n[row,col]=find(d==nd_min);tm=union(row,col); %row和col归为一类\ntm=reshape(tm,1,length(tm)); %把数组tm变成行向量\nfprintf('第%d次合成，平台高度为%d时的分类结果为：%s\\n',...\ni,nd_min,int2str(tm));\nnd(find(nd==nd_min))=[]; %删除已经归类的元素\nif length(nd)==0\nbreak\nend\nend\n```\n运行结果如下：\n![](https://img-blog.csdnimg.cn/20200503104056646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n或者使用MATLAB统计工具箱的相关命令，编写如下程序：\n\n```bash\nclc,clear\na=[1,0;1,1;3,2;4,3;2,5];\ny=pdist(a,'cityblock'); %求a的两两行向量间的绝对值距离\nyc=squareform(y) %变换成距离方阵\nz=linkage(y) %产生等级聚类树\n[h,t]=dendrogram(z) %画聚类图\nT=cluster(z,'maxclust',3) %把对象划分成3类\nfor i=1:3\ntm=find(T==i); %求第i类的对象\ntm=reshape(tm,1,length(tm)); %变成行向量\nfprintf('第%d类的有%s\\n',i,int2str(tm)); %显示分类结果\nend\n```\n运行结果：\n![](https://img-blog.csdnimg.cn/20200503104238600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n![](https://img-blog.csdnimg.cn/20200503104251606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n聚类图：\n![](https://img-blog.csdnimg.cn/20200503104310537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n> **接下的博文将对代码里面相关的命令进行详解，请大家持续关注！！！**\n![](https://img-blog.csdnimg.cn/20200503104718800.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center)\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n**都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！**\n\n> 未经本人允许不得转载\n\n","slug":"Fuzzy-cluster-analysis","published":1,"updated":"2020-12-05T11:38:03.847Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1ht3000zksvbx265zzwz","content":"<p>聚类分析是数据挖掘技术中的一种重要的方法，可以作为一个独立的工具来获得数据分布情况，它广泛地应用于<strong>模式识别、数据分析、图像处理、生物学、经济学</strong>等许多领域。</p>\n<p>聚类分析方法是数理统计中研究“==物以类聚==”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称==系统聚类法==。</p>\n<h1 id=\"模糊聚类分析基本知识\"><a href=\"#模糊聚类分析基本知识\" class=\"headerlink\" title=\"模糊聚类分析基本知识\"></a>模糊聚类分析基本知识</h1><h2 id=\"1-普通等价关系\"><a href=\"#1-普通等价关系\" class=\"headerlink\" title=\"1. 普通等价关系\"></a>1. 普通等价关系</h2><p><strong>（1）自反性</strong><br>对任意<img src=\"https://img-blog.csdnimg.cn/20200503094146607.png\" alt>，都有<img src=\"https://img-blog.csdnimg.cn/20200503094200203.png\" alt>（即任何元素的自身和自身有这种关系），则称R是自反关系。相应的矩阵称自反矩阵。<br><strong>（2）对称性</strong><br>如果从<img src=\"https://img-blog.csdnimg.cn/20200503094225686.png\" alt>可以推出<img src=\"https://img-blog.csdnimg.cn/20200503094237848.png\" alt>（即若<img src=\"https://img-blog.csdnimg.cn/20200503094253823.png\" alt>有这种关系，则<img src=\"https://img-blog.csdnimg.cn/20200503094308104.png\" alt>也有这种关系），则称R是对称关系。相应的矩阵称为对称矩阵。<br>例如，朋友是对称关系。父子则不是对称关系。<br><strong>（３）传递性</strong><br>如果<img src=\"https://img-blog.csdnimg.cn/20200503094338355.png\" alt>可以推出<img src=\"https://img-blog.csdnimg.cn/20200503094350947.png\" alt>（即若u和v有这种关系，v和w有这种关系，u和w则必有这种关系），则称R是传递关系。相应的矩阵称传递矩阵。</p>\n<p><strong>相似关系：具有自反性和对称性的关系称为相似关系。<br>等价关系：具有自反性、对称性和传递性的关系称为等价性。</strong></p>\n<h2 id=\"2-模糊等价关系\"><a href=\"#2-模糊等价关系\" class=\"headerlink\" title=\"2. 模糊等价关系\"></a>2. 模糊等价关系</h2><p>设论域U为有限集合，U上的一个模糊关系R，与其对应的模糊矩阵<img src=\"https://img-blog.csdnimg.cn/20200503094519267.png\" alt>若满足：<br>自反性：<img src=\"https://img-blog.csdnimg.cn/20200503094531312.png\" alt></p>\n<p>对称性：<img src=\"https://img-blog.csdnimg.cn/2020050309453962.png\" alt></p>\n<p>传递性：<img src=\"https://img-blog.csdnimg.cn/20200503094544877.png\" alt></p>\n<p>则称n是一个模糊等价矩阵，其关系是模糊等价关系。<br>若<img src=\"https://img-blog.csdnimg.cn/2020050309460354.png\" alt>只满足自反性和对称性，则称为相似关系。</p>\n<h1 id=\"相关定理\"><a href=\"#相关定理\" class=\"headerlink\" title=\"相关定理\"></a>相关定理</h1><p><strong>定理1</strong>  设R是<img src=\"https://img-blog.csdnimg.cn/20200503094655826.png\" alt>上的一个自反、对称关系，即R是n阶模糊相似矩阵，则存在一个最小的自然数<img src=\"https://img-blog.csdnimg.cn/20200503094716636.png\" alt>，使得<img src=\"https://img-blog.csdnimg.cn/20200503094727845.png\" alt>为模糊等价矩阵，且对于一切大于k的自然数w，恒有<img src=\"https://img-blog.csdnimg.cn/20200503094750558.png\" alt>。<img src=\"https://img-blog.csdnimg.cn/20200503094802206.png\" alt>称为R的传递闭包矩阵，记为<img src=\"https://img-blog.csdnimg.cn/20200503094814304.png\" alt>。</p>\n<p><strong>定理2</strong>  如果模糊关系矩阵R是模糊等价关系，则对于任意<img src=\"https://img-blog.csdnimg.cn/20200503094849389.png\" alt>，所得的λ截矩阵<img src=\"https://img-blog.csdnimg.cn/20200503095004541.png\" alt>也是等价关系。<br>根据这个定理，在模糊关系R确定之后，对给定的数<img src=\"https://img-blog.csdnimg.cn/20200503095033698.png\" alt>，便可得到一个相应的普通等价关系<img src=\"https://img-blog.csdnimg.cn/20200503095043887.png\" alt>，可以决定一个λ水平分类。</p>\n<p><strong>定理3</strong>  如果<img src=\"https://img-blog.csdnimg.cn/20200503095104718.png\" alt>，则<img src=\"https://img-blog.csdnimg.cn/20200503095118112.png\" alt>所分出的每一类必是<img src=\"https://img-blog.csdnimg.cn/20200503095126706.png\" alt>的某一类的子类。称<img src=\"https://img-blog.csdnimg.cn/20200503095137659.png\" alt>分类法是<img src=\"https://img-blog.csdnimg.cn/20200503095147371.png\" alt>分类法的细化。</p>\n<p>根据上述3个定理，可以进行聚类分析操作，例如，当所给矩阵关系是相似关系，由定理1可知，自乘若干次后，就可以获得等价关系矩阵，然后再由定理2和定理3进行聚类。</p>\n<h1 id=\"模糊聚类分析步骤\"><a href=\"#模糊聚类分析步骤\" class=\"headerlink\" title=\"模糊聚类分析步骤\"></a>模糊聚类分析步骤</h1><p>模糊聚类分析步骤可以概括为：<strong>==数据标准化，建立模糊相似矩阵，聚类==</strong>。</p>\n<h1 id=\"模糊等价矩阵聚类\"><a href=\"#模糊等价矩阵聚类\" class=\"headerlink\" title=\"模糊等价矩阵聚类\"></a>模糊等价矩阵聚类</h1><h2 id=\"（1）传递闭包法\"><a href=\"#（1）传递闭包法\" class=\"headerlink\" title=\"（1）传递闭包法\"></a>（1）传递闭包法</h2><p>根据标定所建立的模糊矩阵R，一般说来似具有自反性和对称性，不满足传递性，只是模糊相似矩阵，只有当R是模糊等价矩阵时才能聚类，故需要将R改造成模糊等价矩阵。可以通过求传递包将n阶模糊相似矩阵R改造成n阶模糊等价矩阵t（R）。从模糊矩阵R出发，依次求平方：<img src=\"https://img-blog.csdnimg.cn/20200503095814480.png\" alt>，当第一次出现<img src=\"https://img-blog.csdnimg.cn/20200503095828465.png\" alt>时，表明<img src=\"https://img-blog.csdnimg.cn/20200503095836432.png\" alt>已经具有传递性，<img src=\"https://img-blog.csdnimg.cn/20200503095908503.png\" alt>就是所求的传递闭包t（R）。</p>\n<p>在R改造成模糊等价矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100025132.png\" alt>之后进行截运算，即<img src=\"https://img-blog.csdnimg.cn/2020050310004179.png\" alt>，可以获得所需分类。<br>从上述分析可知，λ从大到小分类从细到粗，是一个动态过程。<br>当n较大时，求传递闭包法的运算量比较大，不适于手工分类，便于计算机程序设计。</p>\n<h2 id=\"（2）最大树法\"><a href=\"#（2）最大树法\" class=\"headerlink\" title=\"（2）最大树法\"></a>（2）最大树法</h2><p>在被分类的元素比较多时，要把所建立的模糊相似关系“改造”成模糊等值关系是相当麻烦的，比较简便的方法是——最大树法。<br>最大树法进行模糊聚类分析的步骤如下：在模糊相似关系矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100131515.png\" alt>中，按<img src=\"https://img-blog.csdnimg.cn/2020050310014411.png\" alt>的大小顺序依次用直线将元素连接起来，并标上权重（<img src=\"https://img-blog.csdnimg.cn/20200503100156524.png\" alt>的数值）。如果在某一步使图中出现了回路，就不画这一步，依次走下一步，直到所有元素连通为止。这样就得到了一棵所谓的最大树（最大树不是唯一的，但不影响分类的结果）。然后，取定λ值，去掉权重低于λ的连线，即可将元素分类，互相连通的元素归为一类。</p>\n<h2 id=\"（3）编网法\"><a href=\"#（3）编网法\" class=\"headerlink\" title=\"（3）编网法\"></a>（3）编网法</h2><p>先取定λ，作截矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100340180.png\" alt>，并将<img src=\"https://img-blog.csdnimg.cn/20200503100347908.png\" alt>的主对角线上填入元素的符号。在主对角线下方，以节点号代替<img src=\"https://img-blog.csdnimg.cn/20200503100511230.png\" alt>中的“1”，而“0”则略去不写。由节点“*”向主对角线上引经线（竖线）和纬线（横线）。所谓编网，就是在结点处将经过的经纬线捆绑起来，这样来实现分类。通过打结而能互相联结的点属于同一类。</p>\n<h1 id=\"系统聚类法\"><a href=\"#系统聚类法\" class=\"headerlink\" title=\"系统聚类法\"></a>系统聚类法</h1><p>在平面上有 7 个点w1,w2,w3,…,w7（如图 1（a）），可以用聚类图（如图 1（b））来表示聚类结果。<br><img src=\"https://img-blog.csdnimg.cn/20200503102459346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503102436316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>怎样才能生成这样的聚类图呢？步骤如下：设Ω ={w1,w2,…,w7}，<br>1）计算 n 个样本点两两之间的距离{dij} ，记为矩阵<br><img src=\"https://img-blog.csdnimg.cn/20200503102716543.png\" alt></p>\n<p>2）首先构造 n 个类，每一个类中只包含一个样本点，每一类的平台高度均为零；<br>3）合并距离最近的两类为新类，并且以这两类间的距离值作为聚类图中的平台高<br>度；<br>4）计算新类与当前各类的距离，若类的个数已经等于 1，转入步骤 5），否则，回到步骤 3）；<br>5）画聚类图；<br>6）决定类的个数和类。<br>显而易见，这种系统归类过程与计算类和类之间的距离有关，采用不同的距离定义，有可能得出不同的聚类结果。</p>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><p>设有5个销售员w1,w2,w3,w4,w5 ，他们的销售业绩由二维变量 （v1,v2）描述，见表 1。<br><img src=\"https://img-blog.csdnimg.cn/20200503103028700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>记销售员 wi(i=1,2,3,4,5)的销售业绩为(vi1,vi2) 。如果使用绝对值距离来测量点与点之间的距离，使用最短距离法来测量类与类之间的距离，即<br><img src=\"https://img-blog.csdnimg.cn/20200503103152701.png\" alt><br>由距离公式d(.,.)，可以算出距离矩阵。<br><img src=\"https://img-blog.csdnimg.cn/20200503103247213.png\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503103310906.png\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503103328450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>这样，h9已把所有的样本点聚为一类，因此，可以转到画聚类图步骤。画出聚类图（如图 2（a））。这是一颗二叉树，如图 2（b）。<br>有了聚类图，就可以按要求进行分类。可以看出，在这五个推销员中w5的工作成绩最佳，w3,w4 的工作成绩较好，而w1,w2 的工作成绩较差。<br>完全类似于以上步骤，但以最长距离法来计算类间距离，就称为系统聚类法中的最长距离法。</p>\n<h1 id=\"matlab代码详解\"><a href=\"#matlab代码详解\" class=\"headerlink\" title=\"matlab代码详解\"></a>matlab代码详解</h1><pre class=\"line-numbers language-bash\"><code class=\"language-bash\">clc,clear\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>1,0<span class=\"token punctuation\">;</span>1,1<span class=\"token punctuation\">;</span>3,2<span class=\"token punctuation\">;</span>4,3<span class=\"token punctuation\">;</span>2,5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span>m,n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>size<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nd<span class=\"token operator\">=</span>zeros<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span>1:m\n<span class=\"token keyword\">for</span> j<span class=\"token operator\">=</span>i+1:m\nd<span class=\"token punctuation\">(</span>i,j<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>mandist<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">(</span>i,:<span class=\"token punctuation\">)</span>,a<span class=\"token punctuation\">(</span>j,:<span class=\"token punctuation\">)</span><span class=\"token string\">');\n%求第一个矩阵的行向量与第二个矩阵的列向量之间对应的绝对值距离\nend\nend\nd\nnd=nonzeros(d); %去掉d中的零元素，非零元素按列排列\nnd=union(nd,nd) %去掉重复的非零元素\nfor i=1:m-1\nnd_min=min(nd);\n[row,col]=find(d==nd_min);tm=union(row,col); %row和col归为一类\ntm=reshape(tm,1,length(tm)); %把数组tm变成行向量\nfprintf('</span>第%d次合成，平台高度为%d时的分类结果为：%s\\n',<span class=\"token punctuation\">..</span>.\ni,nd_min,int2str<span class=\"token punctuation\">(</span>tm<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span>\nnd<span class=\"token punctuation\">(</span>find<span class=\"token punctuation\">(</span>nd<span class=\"token operator\">==</span>nd_min<span class=\"token punctuation\">))</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> %删除已经归类的元素\n<span class=\"token keyword\">if</span> length<span class=\"token punctuation\">(</span>nd<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>0\n<span class=\"token keyword\">break</span>\nend\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行结果如下：<br><img src=\"https://img-blog.csdnimg.cn/20200503104056646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>或者使用MATLAB统计工具箱的相关命令，编写如下程序：</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\">clc,clear\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>1,0<span class=\"token punctuation\">;</span>1,1<span class=\"token punctuation\">;</span>3,2<span class=\"token punctuation\">;</span>4,3<span class=\"token punctuation\">;</span>2,5<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ny<span class=\"token operator\">=</span>pdist<span class=\"token punctuation\">(</span>a,<span class=\"token string\">'cityblock'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> %求a的两两行向量间的绝对值距离\nyc<span class=\"token operator\">=</span>squareform<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> %变换成距离方阵\nz<span class=\"token operator\">=</span>linkage<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> %产生等级聚类树\n<span class=\"token punctuation\">[</span>h,t<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>dendrogram<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span> %画聚类图\nT<span class=\"token operator\">=</span>cluster<span class=\"token punctuation\">(</span>z,<span class=\"token string\">'maxclust'</span>,3<span class=\"token punctuation\">)</span> %把对象划分成3类\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span>1:3\ntm<span class=\"token operator\">=</span>find<span class=\"token punctuation\">(</span>T<span class=\"token operator\">==</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> %求第i类的对象\ntm<span class=\"token operator\">=</span>reshape<span class=\"token punctuation\">(</span>tm,1,length<span class=\"token punctuation\">(</span>tm<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> %变成行向量\nfprintf<span class=\"token punctuation\">(</span><span class=\"token string\">'第%d类的有%s\\n'</span>,i,int2str<span class=\"token punctuation\">(</span>tm<span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span> %显示分类结果\nend<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/20200503104238600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503104251606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>聚类图：<br><img src=\"https://img-blog.csdnimg.cn/20200503104310537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<blockquote>\n<p><strong>接下的博文将对代码里面相关的命令进行详解，请大家持续关注！！！</strong><br><img src=\"https://img-blog.csdnimg.cn/20200503104718800.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n</blockquote>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<blockquote>\n<p>未经本人允许不得转载</p>\n</blockquote>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<p>聚类分析是数据挖掘技术中的一种重要的方法，可以作为一个独立的工具来获得数据分布情况，它广泛地应用于<strong>模式识别、数据分析、图像处理、生物学、经济学</strong>等许多领域。</p>\n<p>聚类分析方法是数理统计中研究“==物以类聚==”的一种多元分析方法，及用数学定量地确定样品的亲疏关系，从而客观地分型化类。由于事物本身在很多情况下都带有模糊性，因此把模糊数学方法引入聚类分析，能使分类更切合实际。我们所应用的模糊聚类方法是基于模糊相似关系上的模糊聚类法，又称==系统聚类法==。</p>\n<h1 id=\"模糊聚类分析基本知识\"><a href=\"#模糊聚类分析基本知识\" class=\"headerlink\" title=\"模糊聚类分析基本知识\"></a>模糊聚类分析基本知识</h1><h2 id=\"1-普通等价关系\"><a href=\"#1-普通等价关系\" class=\"headerlink\" title=\"1. 普通等价关系\"></a>1. 普通等价关系</h2><p><strong>（1）自反性</strong><br>对任意<img src=\"https://img-blog.csdnimg.cn/20200503094146607.png\" alt>，都有<img src=\"https://img-blog.csdnimg.cn/20200503094200203.png\" alt>（即任何元素的自身和自身有这种关系），则称R是自反关系。相应的矩阵称自反矩阵。<br><strong>（2）对称性</strong><br>如果从<img src=\"https://img-blog.csdnimg.cn/20200503094225686.png\" alt>可以推出<img src=\"https://img-blog.csdnimg.cn/20200503094237848.png\" alt>（即若<img src=\"https://img-blog.csdnimg.cn/20200503094253823.png\" alt>有这种关系，则<img src=\"https://img-blog.csdnimg.cn/20200503094308104.png\" alt>也有这种关系），则称R是对称关系。相应的矩阵称为对称矩阵。<br>例如，朋友是对称关系。父子则不是对称关系。<br><strong>（３）传递性</strong><br>如果<img src=\"https://img-blog.csdnimg.cn/20200503094338355.png\" alt>可以推出<img src=\"https://img-blog.csdnimg.cn/20200503094350947.png\" alt>（即若u和v有这种关系，v和w有这种关系，u和w则必有这种关系），则称R是传递关系。相应的矩阵称传递矩阵。</p>\n<p><strong>相似关系：具有自反性和对称性的关系称为相似关系。<br>等价关系：具有自反性、对称性和传递性的关系称为等价性。</strong></p>\n<h2 id=\"2-模糊等价关系\"><a href=\"#2-模糊等价关系\" class=\"headerlink\" title=\"2. 模糊等价关系\"></a>2. 模糊等价关系</h2><p>设论域U为有限集合，U上的一个模糊关系R，与其对应的模糊矩阵<img src=\"https://img-blog.csdnimg.cn/20200503094519267.png\" alt>若满足：<br>自反性：<img src=\"https://img-blog.csdnimg.cn/20200503094531312.png\" alt></p>\n<p>对称性：<img src=\"https://img-blog.csdnimg.cn/2020050309453962.png\" alt></p>\n<p>传递性：<img src=\"https://img-blog.csdnimg.cn/20200503094544877.png\" alt></p>\n<p>则称n是一个模糊等价矩阵，其关系是模糊等价关系。<br>若<img src=\"https://img-blog.csdnimg.cn/2020050309460354.png\" alt>只满足自反性和对称性，则称为相似关系。</p>\n<h1 id=\"相关定理\"><a href=\"#相关定理\" class=\"headerlink\" title=\"相关定理\"></a>相关定理</h1><p><strong>定理1</strong>  设R是<img src=\"https://img-blog.csdnimg.cn/20200503094655826.png\" alt>上的一个自反、对称关系，即R是n阶模糊相似矩阵，则存在一个最小的自然数<img src=\"https://img-blog.csdnimg.cn/20200503094716636.png\" alt>，使得<img src=\"https://img-blog.csdnimg.cn/20200503094727845.png\" alt>为模糊等价矩阵，且对于一切大于k的自然数w，恒有<img src=\"https://img-blog.csdnimg.cn/20200503094750558.png\" alt>。<img src=\"https://img-blog.csdnimg.cn/20200503094802206.png\" alt>称为R的传递闭包矩阵，记为<img src=\"https://img-blog.csdnimg.cn/20200503094814304.png\" alt>。</p>\n<p><strong>定理2</strong>  如果模糊关系矩阵R是模糊等价关系，则对于任意<img src=\"https://img-blog.csdnimg.cn/20200503094849389.png\" alt>，所得的λ截矩阵<img src=\"https://img-blog.csdnimg.cn/20200503095004541.png\" alt>也是等价关系。<br>根据这个定理，在模糊关系R确定之后，对给定的数<img src=\"https://img-blog.csdnimg.cn/20200503095033698.png\" alt>，便可得到一个相应的普通等价关系<img src=\"https://img-blog.csdnimg.cn/20200503095043887.png\" alt>，可以决定一个λ水平分类。</p>\n<p><strong>定理3</strong>  如果<img src=\"https://img-blog.csdnimg.cn/20200503095104718.png\" alt>，则<img src=\"https://img-blog.csdnimg.cn/20200503095118112.png\" alt>所分出的每一类必是<img src=\"https://img-blog.csdnimg.cn/20200503095126706.png\" alt>的某一类的子类。称<img src=\"https://img-blog.csdnimg.cn/20200503095137659.png\" alt>分类法是<img src=\"https://img-blog.csdnimg.cn/20200503095147371.png\" alt>分类法的细化。</p>\n<p>根据上述3个定理，可以进行聚类分析操作，例如，当所给矩阵关系是相似关系，由定理1可知，自乘若干次后，就可以获得等价关系矩阵，然后再由定理2和定理3进行聚类。</p>\n<h1 id=\"模糊聚类分析步骤\"><a href=\"#模糊聚类分析步骤\" class=\"headerlink\" title=\"模糊聚类分析步骤\"></a>模糊聚类分析步骤</h1><p>模糊聚类分析步骤可以概括为：<strong>==数据标准化，建立模糊相似矩阵，聚类==</strong>。</p>\n<h1 id=\"模糊等价矩阵聚类\"><a href=\"#模糊等价矩阵聚类\" class=\"headerlink\" title=\"模糊等价矩阵聚类\"></a>模糊等价矩阵聚类</h1><h2 id=\"（1）传递闭包法\"><a href=\"#（1）传递闭包法\" class=\"headerlink\" title=\"（1）传递闭包法\"></a>（1）传递闭包法</h2><p>根据标定所建立的模糊矩阵R，一般说来似具有自反性和对称性，不满足传递性，只是模糊相似矩阵，只有当R是模糊等价矩阵时才能聚类，故需要将R改造成模糊等价矩阵。可以通过求传递包将n阶模糊相似矩阵R改造成n阶模糊等价矩阵t（R）。从模糊矩阵R出发，依次求平方：<img src=\"https://img-blog.csdnimg.cn/20200503095814480.png\" alt>，当第一次出现<img src=\"https://img-blog.csdnimg.cn/20200503095828465.png\" alt>时，表明<img src=\"https://img-blog.csdnimg.cn/20200503095836432.png\" alt>已经具有传递性，<img src=\"https://img-blog.csdnimg.cn/20200503095908503.png\" alt>就是所求的传递闭包t（R）。</p>\n<p>在R改造成模糊等价矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100025132.png\" alt>之后进行截运算，即<img src=\"https://img-blog.csdnimg.cn/2020050310004179.png\" alt>，可以获得所需分类。<br>从上述分析可知，λ从大到小分类从细到粗，是一个动态过程。<br>当n较大时，求传递闭包法的运算量比较大，不适于手工分类，便于计算机程序设计。</p>\n<h2 id=\"（2）最大树法\"><a href=\"#（2）最大树法\" class=\"headerlink\" title=\"（2）最大树法\"></a>（2）最大树法</h2><p>在被分类的元素比较多时，要把所建立的模糊相似关系“改造”成模糊等值关系是相当麻烦的，比较简便的方法是——最大树法。<br>最大树法进行模糊聚类分析的步骤如下：在模糊相似关系矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100131515.png\" alt>中，按<img src=\"https://img-blog.csdnimg.cn/2020050310014411.png\" alt>的大小顺序依次用直线将元素连接起来，并标上权重（<img src=\"https://img-blog.csdnimg.cn/20200503100156524.png\" alt>的数值）。如果在某一步使图中出现了回路，就不画这一步，依次走下一步，直到所有元素连通为止。这样就得到了一棵所谓的最大树（最大树不是唯一的，但不影响分类的结果）。然后，取定λ值，去掉权重低于λ的连线，即可将元素分类，互相连通的元素归为一类。</p>\n<h2 id=\"（3）编网法\"><a href=\"#（3）编网法\" class=\"headerlink\" title=\"（3）编网法\"></a>（3）编网法</h2><p>先取定λ，作截矩阵<img src=\"https://img-blog.csdnimg.cn/20200503100340180.png\" alt>，并将<img src=\"https://img-blog.csdnimg.cn/20200503100347908.png\" alt>的主对角线上填入元素的符号。在主对角线下方，以节点号代替<img src=\"https://img-blog.csdnimg.cn/20200503100511230.png\" alt>中的“1”，而“0”则略去不写。由节点“*”向主对角线上引经线（竖线）和纬线（横线）。所谓编网，就是在结点处将经过的经纬线捆绑起来，这样来实现分类。通过打结而能互相联结的点属于同一类。</p>\n<h1 id=\"系统聚类法\"><a href=\"#系统聚类法\" class=\"headerlink\" title=\"系统聚类法\"></a>系统聚类法</h1><p>在平面上有 7 个点w1,w2,w3,…,w7（如图 1（a）），可以用聚类图（如图 1（b））来表示聚类结果。<br><img src=\"https://img-blog.csdnimg.cn/20200503102459346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200503102436316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>怎样才能生成这样的聚类图呢？步骤如下：设Ω ={w1,w2,…,w7}，<br>1）计算 n 个样本点两两之间的距离{dij} ，记为矩阵<br><img src=\"https://img-blog.csdnimg.cn/20200503102716543.png\" alt></p>\n<p>2）首先构造 n 个类，每一个类中只包含一个样本点，每一类的平台高度均为零；<br>3）合并距离最近的两类为新类，并且以这两类间的距离值作为聚类图中的平台高<br>度；<br>4）计算新类与当前各类的距离，若类的个数已经等于 1，转入步骤 5），否则，回到步骤 3）；<br>5）画聚类图；<br>6）决定类的个数和类。<br>显而易见，这种系统归类过程与计算类和类之间的距离有关，采用不同的距离定义，有可能得出不同的聚类结果。</p>\n<h1 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h1><p>设有5个销售员w1,w2,w3,w4,w5 ，他们的销售业绩由二维变量 （v1,v2）描述，见表 1。<br><img src=\"https://img-blog.csdnimg.cn/20200503103028700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>记销售员 wi(i=1,2,3,4,5)的销售业绩为(vi1,vi2) 。如果使用绝对值距离来测量点与点之间的距离，使用最短距离法来测量类与类之间的距离，即<br><img src=\"https://img-blog.csdnimg.cn/20200503103152701.png\" alt><br>由距离公式d(.,.)，可以算出距离矩阵。<br><img src=\"https://img-blog.csdnimg.cn/20200503103247213.png\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503103310906.png\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503103328450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>这样，h9已把所有的样本点聚为一类，因此，可以转到画聚类图步骤。画出聚类图（如图 2（a））。这是一颗二叉树，如图 2（b）。<br>有了聚类图，就可以按要求进行分类。可以看出，在这五个推销员中w5的工作成绩最佳，w3,w4 的工作成绩较好，而w1,w2 的工作成绩较差。<br>完全类似于以上步骤，但以最长距离法来计算类间距离，就称为系统聚类法中的最长距离法。</p>\n<h1 id=\"matlab代码详解\"><a href=\"#matlab代码详解\" class=\"headerlink\" title=\"matlab代码详解\"></a>matlab代码详解</h1><pre><code class=\"bash\">clc,clear\na=[1,0;1,1;3,2;4,3;2,5];\n[m,n]=size(a);\nd=zeros(m);\nfor i=1:m\nfor j=i+1:m\nd(i,j)=mandist(a(i,:),a(j,:)&#39;);\n%求第一个矩阵的行向量与第二个矩阵的列向量之间对应的绝对值距离\nend\nend\nd\nnd=nonzeros(d); %去掉d中的零元素，非零元素按列排列\nnd=union(nd,nd) %去掉重复的非零元素\nfor i=1:m-1\nnd_min=min(nd);\n[row,col]=find(d==nd_min);tm=union(row,col); %row和col归为一类\ntm=reshape(tm,1,length(tm)); %把数组tm变成行向量\nfprintf(&#39;第%d次合成，平台高度为%d时的分类结果为：%s\\n&#39;,...\ni,nd_min,int2str(tm));\nnd(find(nd==nd_min))=[]; %删除已经归类的元素\nif length(nd)==0\nbreak\nend\nend</code></pre>\n<p>运行结果如下：<br><img src=\"https://img-blog.csdnimg.cn/20200503104056646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>或者使用MATLAB统计工具箱的相关命令，编写如下程序：</p>\n<pre><code class=\"bash\">clc,clear\na=[1,0;1,1;3,2;4,3;2,5];\ny=pdist(a,&#39;cityblock&#39;); %求a的两两行向量间的绝对值距离\nyc=squareform(y) %变换成距离方阵\nz=linkage(y) %产生等级聚类树\n[h,t]=dendrogram(z) %画聚类图\nT=cluster(z,&#39;maxclust&#39;,3) %把对象划分成3类\nfor i=1:3\ntm=find(T==i); %求第i类的对象\ntm=reshape(tm,1,length(tm)); %变成行向量\nfprintf(&#39;第%d类的有%s\\n&#39;,i,int2str(tm)); %显示分类结果\nend</code></pre>\n<p>运行结果：<br><img src=\"https://img-blog.csdnimg.cn/20200503104238600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br><img src=\"https://img-blog.csdnimg.cn/20200503104251606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt><br>聚类图：<br><img src=\"https://img-blog.csdnimg.cn/20200503104310537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt></p>\n<blockquote>\n<p><strong>接下的博文将对代码里面相关的命令进行详解，请大家持续关注！！！</strong><br><img src=\"https://img-blog.csdnimg.cn/20200503104718800.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n</blockquote>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<p><strong>都看到这里了各位老铁就点个赞再走呗，来个关注也行，能够让更多的人看到这篇文章，有问题欢迎各位指导批评！！！！</strong></p>\n<blockquote>\n<p>未经本人允许不得转载</p>\n</blockquote>\n"},{"title":"基于混沌Logistic加密算法的图片加密与还原","date":"2020-12-01T00:12:04.000Z","_content":"\n# 摘要\n\n> 一种基于混沌Logistic加密算法的图片加密与还原的方法，并利用Lena图和Baboon图来验证这种加密算法的加密效果。为了能够体现该算法在图片信息加密的效果，本文还采用了普通行列置乱加密算法和像素点的RGB的值的缩放算法这两种算法对相同的图片的图片进行处理，利用matlab通过显示加密过后的图片以及直方图分析可以很直观的发现混沌Logistic加密算法对图片信息加密的效果更好，并且很好地隐藏了原始图像的统计特性，能够有效地抵御基于图像像素值的统计攻击，达到了图像加密的效果。\n\n# 混沌Logistic映射的理论\n\n## 混沌的基本概念\n\n1975年，美国数学家约克和美籍华人李天岩发表了《周期3意味着混沌》的文章，首次提出了“混沌”—词，阐述了混沌的数学定义，对混沌学的发展具有重大意义。自此以后，混沌研究开始蓬勃发展。\n混沌是指在确定性动力学系统中，由于对初值敏感而表现出的类似随机的、不可预测的运动。混沌是确定的非线性系统中出现的内在随机性现象，其变化并非随机确貌似随机。\n\n## Logistic映射方程\n\nLogistic映射是一个典型的非线性的迭代方程，如式所示：\n                               ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322115202600.png)\n称为Logistic映射的控制参数，对任意的k有![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322115314240.png)，其中k为迭代时间步。==Logistic映射的动态行为与控制参数u密切相关==，对于不同的u值系统将呈现不同的特性（即当k趋于无穷大，xk的变化情况）。其中==Logistic映射有两个主要的参数，一个是初值x0，一个是系统参数μ==，研究表明，==当 0<μ<=3.5699456时，Logistic呈现出周期性；而当映射方程满足0<x0<1和3.5699456<μ<=4这两个条件时，Logistic映射处于混沌状态==，即一种无序的、不可预测的、混乱的、摸不到头、摸不到尾的状态。对给定的初始值x0，生成的序列是非周期性、非收敛以及对初始条件敏感的。\n\n> 有界性\n混沌是有界的，它的运动轨线始终局限于一个确定的区域，这个区域称为混沌吸引域。由图 所示，无论控制参数μ怎么变，迭代值xn始终在(0,1)之间。\n\n![**不同控制参数μ下的Logistic分岔图**](https://img-blog.csdnimg.cn/20200322120312766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 混沌Logistic映射与其他加密算法介绍\n\n## 普通行列置乱加密算法\n\n### 普通置乱加密算法的流程\n\n将读入的水印图片，先获取图片的大小，得到原始图片矩阵，首先随机打乱各行，输出打乱后的矩阵，再将这个矩阵随机打乱各列，最后图像成功加密，显示加密图像。算法流程框图如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322120508960.png)\n\n### 算法分析\n\n```\ns = size(handles.img);\nr = randsample(s(1), s(1)); \nRGBS = handles.img(r, :, :);\nc = randsample(s(2), s(2)); \nRGBSS = RGBS(:, c, :);\naxes(handles.axes2);        \nimshow(RGBSS); \ntitle('普通置乱加密图像');\nfigure(2);\nhist_im=histogram(RGBSS); %加密后直方图\ntitle('普通置乱加密直方图');\n```\n\n## 像素点的RGB值缩放加密\n\n### 像素点的RGB值缩放加密算法的流程\n\n首先读入原始图片，通过size获取水印图片的大小矩阵，接着获取图片各R、G、B的值，然后将获取到的RGB值分别扩大20倍并将值赋给r，最后再将r与将水印图片转换成double类型的矩阵进行点乘运算实现图像的成功加密。算法流程框图如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322120755105.png)\n\n### 算法分析\n\n```\ns = size(handles.img);\nr = rand(s(1), s(2), s(3)) * 20;\nRGBD = im2double(handles.img);\nRGB_jiami = RGBD .* r;\naxes(handles.axes2);      \nimshow(RGB_jiami); \ntitle('像素点的RGB值缩放加密图像');\nfigure(3);\nhist_im=histogram(RGB_jiami); \ntitle('像素点的RGB值缩放加密直方图');\n```\n\n## 混沌Logistic映射加密算法\n\n### 混沌Logistic映射加密算法模型\n\n读入待处理的原始图片，通过加密密钥进入混沌序列，通过混沌系统设计加密算法，实现加密目的；再输入解密密钥，把加密过程逆向运算即可得到解密图像。系统参数u和初值x0设置成密钥。混沌Logistic映射加密算法模型如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121024286.png)\n\n当迭代n次后，我们就得到了x1、x2、…，xn这n个值，这就是一个混沌序列，是一维的，称作序列A，也就是我们想要得到的序列，在MATLAB中，可以看出xi（i=1,2,…,n）的取值是在(0,1)之间的，就像图像灰度值是在(0,255)之间一样。那么我们把这个一维序列归一化到(0,255)之间得到序列B。异或过程如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121130568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n### 算法分析\n```  \nu=4;   \nfor i=1:500 \n    x=u*x*(1-x); \nend \nfprintf('x(k+1)=%d\\n',x); \nA=zeros(1,M*N); \nA(1)=x;   \nfor i=1:M*N-1 \n    A(i+1)=u*A(i)*(1-A(i)); \nend\nB=uint8(255*A); %\nImgn=reshape(B,M,N);   \nC=zeros(M,N); \nfor x=1:M \n    for y=1:N \n        C(x,y)=handles.img(x,y); \n    end\nend\nC; \nD=uint8(C); \nRod=bitxor(D,Imgn); \nRod; \nrod=reshape(Rod,M,N/3,3); \n```\n\n# 验证与性能分析\n## Matlab GUI操作界面\n使用的是**MATLAB GUI可视化仿真平台**。它是采用图形方式显示的计算机操作用户界面，是MATLAB用户可视化交互式的工具，运用GUI生成的操作界面用户可以不用浏览繁冗的代码而进行操作。如图是设计的**GUI操作界面**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121557542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n***看到这个界面是不是很不错，对的。。。你没看错MATLAB GUI确实是这么厉害。。。。。。。***\n## 普通行列置乱加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121749624.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121818930.png)\n## 像素点的RGB值的缩放加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121940411.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032212200941.png)\n## 混沌Logistic映射加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322122101398.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032212213175.png)\n## 直方图性能分析\n\n> 这里就只对lena图进行直方图分析，Baboon图大致和lena图一样。\n\n\nLena图的普通置乱与混沌Logistic加密的直方图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322122315134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n普通行列置乱图像的直方图与原始图像的直方图相同，且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性，达到了图像加密的效果。\n\nLena图的像素点的RGB缩放与混沌Logistic加密的直方图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322125400671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n由直方图可知：像素点的RGB缩放图像的直方图与原始图像的直方图不相同且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性。\n\n\n完整代码以上传至我的github：[完整代码](https://github.com/gain-wyj/-Logistic-)\n\n> ***你的三连击是我的荣幸！！！！！***\n\n","source":"_posts/基于混沌Logistic加密算法的图片加密与还原.md","raw":"---\ntitle: 基于混沌Logistic加密算法的图片加密与还原\ndate: 2020-12-01 08:12:04\ntags: \n- Logistic加密\n- matlab\n- 数字图像处理\ncategories: \n- 数字图像处理\n---\n\n# 摘要\n\n> 一种基于混沌Logistic加密算法的图片加密与还原的方法，并利用Lena图和Baboon图来验证这种加密算法的加密效果。为了能够体现该算法在图片信息加密的效果，本文还采用了普通行列置乱加密算法和像素点的RGB的值的缩放算法这两种算法对相同的图片的图片进行处理，利用matlab通过显示加密过后的图片以及直方图分析可以很直观的发现混沌Logistic加密算法对图片信息加密的效果更好，并且很好地隐藏了原始图像的统计特性，能够有效地抵御基于图像像素值的统计攻击，达到了图像加密的效果。\n\n# 混沌Logistic映射的理论\n\n## 混沌的基本概念\n\n1975年，美国数学家约克和美籍华人李天岩发表了《周期3意味着混沌》的文章，首次提出了“混沌”—词，阐述了混沌的数学定义，对混沌学的发展具有重大意义。自此以后，混沌研究开始蓬勃发展。\n混沌是指在确定性动力学系统中，由于对初值敏感而表现出的类似随机的、不可预测的运动。混沌是确定的非线性系统中出现的内在随机性现象，其变化并非随机确貌似随机。\n\n## Logistic映射方程\n\nLogistic映射是一个典型的非线性的迭代方程，如式所示：\n                               ![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322115202600.png)\n称为Logistic映射的控制参数，对任意的k有![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322115314240.png)，其中k为迭代时间步。==Logistic映射的动态行为与控制参数u密切相关==，对于不同的u值系统将呈现不同的特性（即当k趋于无穷大，xk的变化情况）。其中==Logistic映射有两个主要的参数，一个是初值x0，一个是系统参数μ==，研究表明，==当 0<μ<=3.5699456时，Logistic呈现出周期性；而当映射方程满足0<x0<1和3.5699456<μ<=4这两个条件时，Logistic映射处于混沌状态==，即一种无序的、不可预测的、混乱的、摸不到头、摸不到尾的状态。对给定的初始值x0，生成的序列是非周期性、非收敛以及对初始条件敏感的。\n\n> 有界性\n混沌是有界的，它的运动轨线始终局限于一个确定的区域，这个区域称为混沌吸引域。由图 所示，无论控制参数μ怎么变，迭代值xn始终在(0,1)之间。\n\n![**不同控制参数μ下的Logistic分岔图**](https://img-blog.csdnimg.cn/20200322120312766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n# 混沌Logistic映射与其他加密算法介绍\n\n## 普通行列置乱加密算法\n\n### 普通置乱加密算法的流程\n\n将读入的水印图片，先获取图片的大小，得到原始图片矩阵，首先随机打乱各行，输出打乱后的矩阵，再将这个矩阵随机打乱各列，最后图像成功加密，显示加密图像。算法流程框图如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322120508960.png)\n\n### 算法分析\n\n```\ns = size(handles.img);\nr = randsample(s(1), s(1)); \nRGBS = handles.img(r, :, :);\nc = randsample(s(2), s(2)); \nRGBSS = RGBS(:, c, :);\naxes(handles.axes2);        \nimshow(RGBSS); \ntitle('普通置乱加密图像');\nfigure(2);\nhist_im=histogram(RGBSS); %加密后直方图\ntitle('普通置乱加密直方图');\n```\n\n## 像素点的RGB值缩放加密\n\n### 像素点的RGB值缩放加密算法的流程\n\n首先读入原始图片，通过size获取水印图片的大小矩阵，接着获取图片各R、G、B的值，然后将获取到的RGB值分别扩大20倍并将值赋给r，最后再将r与将水印图片转换成double类型的矩阵进行点乘运算实现图像的成功加密。算法流程框图如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322120755105.png)\n\n### 算法分析\n\n```\ns = size(handles.img);\nr = rand(s(1), s(2), s(3)) * 20;\nRGBD = im2double(handles.img);\nRGB_jiami = RGBD .* r;\naxes(handles.axes2);      \nimshow(RGB_jiami); \ntitle('像素点的RGB值缩放加密图像');\nfigure(3);\nhist_im=histogram(RGB_jiami); \ntitle('像素点的RGB值缩放加密直方图');\n```\n\n## 混沌Logistic映射加密算法\n\n### 混沌Logistic映射加密算法模型\n\n读入待处理的原始图片，通过加密密钥进入混沌序列，通过混沌系统设计加密算法，实现加密目的；再输入解密密钥，把加密过程逆向运算即可得到解密图像。系统参数u和初值x0设置成密钥。混沌Logistic映射加密算法模型如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121024286.png)\n\n当迭代n次后，我们就得到了x1、x2、…，xn这n个值，这就是一个混沌序列，是一维的，称作序列A，也就是我们想要得到的序列，在MATLAB中，可以看出xi（i=1,2,…,n）的取值是在(0,1)之间的，就像图像灰度值是在(0,255)之间一样。那么我们把这个一维序列归一化到(0,255)之间得到序列B。异或过程如图：\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121130568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n\n### 算法分析\n```  \nu=4;   \nfor i=1:500 \n    x=u*x*(1-x); \nend \nfprintf('x(k+1)=%d\\n',x); \nA=zeros(1,M*N); \nA(1)=x;   \nfor i=1:M*N-1 \n    A(i+1)=u*A(i)*(1-A(i)); \nend\nB=uint8(255*A); %\nImgn=reshape(B,M,N);   \nC=zeros(M,N); \nfor x=1:M \n    for y=1:N \n        C(x,y)=handles.img(x,y); \n    end\nend\nC; \nD=uint8(C); \nRod=bitxor(D,Imgn); \nRod; \nrod=reshape(Rod,M,N/3,3); \n```\n\n# 验证与性能分析\n## Matlab GUI操作界面\n使用的是**MATLAB GUI可视化仿真平台**。它是采用图形方式显示的计算机操作用户界面，是MATLAB用户可视化交互式的工具，运用GUI生成的操作界面用户可以不用浏览繁冗的代码而进行操作。如图是设计的**GUI操作界面**\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121557542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n***看到这个界面是不是很不错，对的。。。你没看错MATLAB GUI确实是这么厉害。。。。。。。***\n## 普通行列置乱加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121749624.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121818930.png)\n## 像素点的RGB值的缩放加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322121940411.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032212200941.png)\n## 混沌Logistic映射加密实现\nLena原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322122101398.png)\nBaboon原图像、加密图像、解密图像\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020032212213175.png)\n## 直方图性能分析\n\n> 这里就只对lena图进行直方图分析，Baboon图大致和lena图一样。\n\n\nLena图的普通置乱与混沌Logistic加密的直方图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322122315134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n普通行列置乱图像的直方图与原始图像的直方图相同，且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性，达到了图像加密的效果。\n\nLena图的像素点的RGB缩放与混沌Logistic加密的直方图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200322125400671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70)\n由直方图可知：像素点的RGB缩放图像的直方图与原始图像的直方图不相同且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性。\n\n\n完整代码以上传至我的github：[完整代码](https://github.com/gain-wyj/-Logistic-)\n\n> ***你的三连击是我的荣幸！！！！！***\n\n","slug":"基于混沌Logistic加密算法的图片加密与还原","published":1,"updated":"2020-12-01T07:19:03.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckipp1hu1002fksvbx4w47sta","content":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><blockquote>\n<p>一种基于混沌Logistic加密算法的图片加密与还原的方法，并利用Lena图和Baboon图来验证这种加密算法的加密效果。为了能够体现该算法在图片信息加密的效果，本文还采用了普通行列置乱加密算法和像素点的RGB的值的缩放算法这两种算法对相同的图片的图片进行处理，利用matlab通过显示加密过后的图片以及直方图分析可以很直观的发现混沌Logistic加密算法对图片信息加密的效果更好，并且很好地隐藏了原始图像的统计特性，能够有效地抵御基于图像像素值的统计攻击，达到了图像加密的效果。</p>\n</blockquote>\n<h1 id=\"混沌Logistic映射的理论\"><a href=\"#混沌Logistic映射的理论\" class=\"headerlink\" title=\"混沌Logistic映射的理论\"></a>混沌Logistic映射的理论</h1><h2 id=\"混沌的基本概念\"><a href=\"#混沌的基本概念\" class=\"headerlink\" title=\"混沌的基本概念\"></a>混沌的基本概念</h2><p>1975年，美国数学家约克和美籍华人李天岩发表了《周期3意味着混沌》的文章，首次提出了“混沌”—词，阐述了混沌的数学定义，对混沌学的发展具有重大意义。自此以后，混沌研究开始蓬勃发展。<br>混沌是指在确定性动力学系统中，由于对初值敏感而表现出的类似随机的、不可预测的运动。混沌是确定的非线性系统中出现的内在随机性现象，其变化并非随机确貌似随机。</p>\n<h2 id=\"Logistic映射方程\"><a href=\"#Logistic映射方程\" class=\"headerlink\" title=\"Logistic映射方程\"></a>Logistic映射方程</h2><p>Logistic映射是一个典型的非线性的迭代方程，如式所示：<br>                               <img src=\"https://img-blog.csdnimg.cn/20200322115202600.png\" alt=\"在这里插入图片描述\"><br>称为Logistic映射的控制参数，对任意的k有<img src=\"https://img-blog.csdnimg.cn/20200322115314240.png\" alt=\"在这里插入图片描述\">，其中k为迭代时间步。==Logistic映射的动态行为与控制参数u密切相关==，对于不同的u值系统将呈现不同的特性（即当k趋于无穷大，xk的变化情况）。其中==Logistic映射有两个主要的参数，一个是初值x0，一个是系统参数μ==，研究表明，==当 0&lt;μ&lt;=3.5699456时，Logistic呈现出周期性；而当映射方程满足0&lt;x0&lt;1和3.5699456&lt;μ&lt;=4这两个条件时，Logistic映射处于混沌状态==，即一种无序的、不可预测的、混乱的、摸不到头、摸不到尾的状态。对给定的初始值x0，生成的序列是非周期性、非收敛以及对初始条件敏感的。</p>\n<blockquote>\n<p>有界性<br>混沌是有界的，它的运动轨线始终局限于一个确定的区域，这个区域称为混沌吸引域。由图 所示，无论控制参数μ怎么变，迭代值xn始终在(0,1)之间。</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120312766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"**不同控制参数μ下的Logistic分岔图**\"></p>\n<h1 id=\"混沌Logistic映射与其他加密算法介绍\"><a href=\"#混沌Logistic映射与其他加密算法介绍\" class=\"headerlink\" title=\"混沌Logistic映射与其他加密算法介绍\"></a>混沌Logistic映射与其他加密算法介绍</h1><h2 id=\"普通行列置乱加密算法\"><a href=\"#普通行列置乱加密算法\" class=\"headerlink\" title=\"普通行列置乱加密算法\"></a>普通行列置乱加密算法</h2><h3 id=\"普通置乱加密算法的流程\"><a href=\"#普通置乱加密算法的流程\" class=\"headerlink\" title=\"普通置乱加密算法的流程\"></a>普通置乱加密算法的流程</h3><p>将读入的水印图片，先获取图片的大小，得到原始图片矩阵，首先随机打乱各行，输出打乱后的矩阵，再将这个矩阵随机打乱各列，最后图像成功加密，显示加密图像。算法流程框图如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120508960.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>s = size(handles.img);\nr = randsample(s(1), s(1)); \nRGBS = handles.img(r, :, :);\nc = randsample(s(2), s(2)); \nRGBSS = RGBS(:, c, :);\naxes(handles.axes2);        \nimshow(RGBSS); \ntitle(&#39;普通置乱加密图像&#39;);\nfigure(2);\nhist_im=histogram(RGBSS); %加密后直方图\ntitle(&#39;普通置乱加密直方图&#39;);</code></pre><h2 id=\"像素点的RGB值缩放加密\"><a href=\"#像素点的RGB值缩放加密\" class=\"headerlink\" title=\"像素点的RGB值缩放加密\"></a>像素点的RGB值缩放加密</h2><h3 id=\"像素点的RGB值缩放加密算法的流程\"><a href=\"#像素点的RGB值缩放加密算法的流程\" class=\"headerlink\" title=\"像素点的RGB值缩放加密算法的流程\"></a>像素点的RGB值缩放加密算法的流程</h3><p>首先读入原始图片，通过size获取水印图片的大小矩阵，接着获取图片各R、G、B的值，然后将获取到的RGB值分别扩大20倍并将值赋给r，最后再将r与将水印图片转换成double类型的矩阵进行点乘运算实现图像的成功加密。算法流程框图如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120755105.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析-1\"><a href=\"#算法分析-1\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>s = size(handles.img);\nr = rand(s(1), s(2), s(3)) * 20;\nRGBD = im2double(handles.img);\nRGB_jiami = RGBD .* r;\naxes(handles.axes2);      \nimshow(RGB_jiami); \ntitle(&#39;像素点的RGB值缩放加密图像&#39;);\nfigure(3);\nhist_im=histogram(RGB_jiami); \ntitle(&#39;像素点的RGB值缩放加密直方图&#39;);</code></pre><h2 id=\"混沌Logistic映射加密算法\"><a href=\"#混沌Logistic映射加密算法\" class=\"headerlink\" title=\"混沌Logistic映射加密算法\"></a>混沌Logistic映射加密算法</h2><h3 id=\"混沌Logistic映射加密算法模型\"><a href=\"#混沌Logistic映射加密算法模型\" class=\"headerlink\" title=\"混沌Logistic映射加密算法模型\"></a>混沌Logistic映射加密算法模型</h3><p>读入待处理的原始图片，通过加密密钥进入混沌序列，通过混沌系统设计加密算法，实现加密目的；再输入解密密钥，把加密过程逆向运算即可得到解密图像。系统参数u和初值x0设置成密钥。混沌Logistic映射加密算法模型如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322121024286.png\" alt=\"在这里插入图片描述\"></p>\n<p>当迭代n次后，我们就得到了x1、x2、…，xn这n个值，这就是一个混沌序列，是一维的，称作序列A，也就是我们想要得到的序列，在MATLAB中，可以看出xi（i=1,2,…,n）的取值是在(0,1)之间的，就像图像灰度值是在(0,255)之间一样。那么我们把这个一维序列归一化到(0,255)之间得到序列B。异或过程如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322121130568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析-2\"><a href=\"#算法分析-2\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>u=4;   \nfor i=1:500 \n    x=u*x*(1-x); \nend \nfprintf(&#39;x(k+1)=%d\\n&#39;,x); \nA=zeros(1,M*N); \nA(1)=x;   \nfor i=1:M*N-1 \n    A(i+1)=u*A(i)*(1-A(i)); \nend\nB=uint8(255*A); %\nImgn=reshape(B,M,N);   \nC=zeros(M,N); \nfor x=1:M \n    for y=1:N \n        C(x,y)=handles.img(x,y); \n    end\nend\nC; \nD=uint8(C); \nRod=bitxor(D,Imgn); \nRod; \nrod=reshape(Rod,M,N/3,3); </code></pre><h1 id=\"验证与性能分析\"><a href=\"#验证与性能分析\" class=\"headerlink\" title=\"验证与性能分析\"></a>验证与性能分析</h1><h2 id=\"Matlab-GUI操作界面\"><a href=\"#Matlab-GUI操作界面\" class=\"headerlink\" title=\"Matlab GUI操作界面\"></a>Matlab GUI操作界面</h2><p>使用的是<strong>MATLAB GUI可视化仿真平台</strong>。它是采用图形方式显示的计算机操作用户界面，是MATLAB用户可视化交互式的工具，运用GUI生成的操作界面用户可以不用浏览繁冗的代码而进行操作。如图是设计的<strong>GUI操作界面</strong><br><img src=\"https://img-blog.csdnimg.cn/20200322121557542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong><em>看到这个界面是不是很不错，对的。。。你没看错MATLAB GUI确实是这么厉害。。。。。。。</em></strong></p>\n<h2 id=\"普通行列置乱加密实现\"><a href=\"#普通行列置乱加密实现\" class=\"headerlink\" title=\"普通行列置乱加密实现\"></a>普通行列置乱加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121749624.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121818930.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"像素点的RGB值的缩放加密实现\"><a href=\"#像素点的RGB值的缩放加密实现\" class=\"headerlink\" title=\"像素点的RGB值的缩放加密实现\"></a>像素点的RGB值的缩放加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121940411.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/2020032212200941.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"混沌Logistic映射加密实现\"><a href=\"#混沌Logistic映射加密实现\" class=\"headerlink\" title=\"混沌Logistic映射加密实现\"></a>混沌Logistic映射加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322122101398.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/2020032212213175.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"直方图性能分析\"><a href=\"#直方图性能分析\" class=\"headerlink\" title=\"直方图性能分析\"></a>直方图性能分析</h2><blockquote>\n<p>这里就只对lena图进行直方图分析，Baboon图大致和lena图一样。</p>\n</blockquote>\n<p>Lena图的普通置乱与混沌Logistic加密的直方图<br><img src=\"https://img-blog.csdnimg.cn/20200322122315134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>普通行列置乱图像的直方图与原始图像的直方图相同，且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性，达到了图像加密的效果。</p>\n<p>Lena图的像素点的RGB缩放与混沌Logistic加密的直方图<br><img src=\"https://img-blog.csdnimg.cn/20200322125400671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由直方图可知：像素点的RGB缩放图像的直方图与原始图像的直方图不相同且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性。</p>\n<p>完整代码以上传至我的github：<a href=\"https://github.com/gain-wyj/-Logistic-\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n<blockquote>\n<p><strong><em>你的三连击是我的荣幸！！！！！</em></strong></p>\n</blockquote>\n","site":{"data":{"musics":[{"name":"夜曲","artist":"周杰伦","url":"/medias/music/yequ.mp3","cover":"/medias/music/avatars/yequ.jpg"},{"name":"一路向北","artist":"周杰伦","url":"/medias/music/yiluxiangbei.mp3","cover":"/medias/music/avatars/yiluxiangbei.jpg"},{"name":"来自天堂的魔鬼","artist":"邓紫棋","url":"/medias/music/tiantangdemogui.mp3","cover":"/medias/music/avatars/tiantangdemogui.jpg"},{"name":"倒数","artist":"邓紫棋","url":"/medias/music/daoshu.mp3","cover":"/medias/music/avatars/daoshu.jpg"}],"friends":[{"name":"gain-wyj","url":"https://gain-wyj.cn/","title":"访问主页","introduction":"公众号【做一个柔情的程序猿】","avatar":"/medias/avatars/logo.png"},{"name":"知乎专栏","url":"https://www.zhihu.com/column/c_1277699714369363968","title":"访问主页","introduction":"一个有温度的python学习小屋","avatar":"/medias/avatars/zhihu.jpg"},{"name":"CSDN博客","url":"https://fightingmanwyj.blog.csdn.net/","title":"访问主页","introduction":"✊用知识改变命运✊ 这么多程序猿，你是最独特的一个","avatar":"/medias/avatars/ywsydwsbn.jpg"},{"name":"今日头条","url":"https://www.toutiao.com/c/user/token/MS4wLjABAAAAkACnLnujeBRoql-RRbtN_ACkjzAyH4PWADuPwaN4khM/","title":"访问主页","introduction":"追剧与技术并存","avatar":"/medias/avatars/toutiao.jpg"},{"name":"奈何缘浅wyj","url":"https://www.jianshu.com/c/fea01b4d1016","title":"前去探索","introduction":"一个有温度的算法小屋","avatar":"/medias/avatars/jianshu.png"},{"name":"火山翻译","url":"hhttps://translate.volcengine.cn/translate","title":"访问主页","introduction":"提供全球领先的翻译技术与服务","avatar":"/medias/avatars/bytedtrans.png"},{"name":"奶牛快传","url":"https://cowtransfer.com/","title":"访问主页","introduction":"提供快速的文件传输服务","avatar":"/medias/avatars/nainiu.png"},{"name":"图片URL","url":"https://sm.ms/","title":"访问主页","introduction":"获取图片的相关链接","avatar":"/medias/avatars/spacesac.png"},{"name":"在线wpe模板","url":"http://www.officeplus.cn/Template/Home.shtml","title":"访问主页","introduction":"在线最全Word、ppt、execl模板","avatar":"/medias/avatars/fun4go.png"}]}},"excerpt":"","more":"<h1 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h1><blockquote>\n<p>一种基于混沌Logistic加密算法的图片加密与还原的方法，并利用Lena图和Baboon图来验证这种加密算法的加密效果。为了能够体现该算法在图片信息加密的效果，本文还采用了普通行列置乱加密算法和像素点的RGB的值的缩放算法这两种算法对相同的图片的图片进行处理，利用matlab通过显示加密过后的图片以及直方图分析可以很直观的发现混沌Logistic加密算法对图片信息加密的效果更好，并且很好地隐藏了原始图像的统计特性，能够有效地抵御基于图像像素值的统计攻击，达到了图像加密的效果。</p>\n</blockquote>\n<h1 id=\"混沌Logistic映射的理论\"><a href=\"#混沌Logistic映射的理论\" class=\"headerlink\" title=\"混沌Logistic映射的理论\"></a>混沌Logistic映射的理论</h1><h2 id=\"混沌的基本概念\"><a href=\"#混沌的基本概念\" class=\"headerlink\" title=\"混沌的基本概念\"></a>混沌的基本概念</h2><p>1975年，美国数学家约克和美籍华人李天岩发表了《周期3意味着混沌》的文章，首次提出了“混沌”—词，阐述了混沌的数学定义，对混沌学的发展具有重大意义。自此以后，混沌研究开始蓬勃发展。<br>混沌是指在确定性动力学系统中，由于对初值敏感而表现出的类似随机的、不可预测的运动。混沌是确定的非线性系统中出现的内在随机性现象，其变化并非随机确貌似随机。</p>\n<h2 id=\"Logistic映射方程\"><a href=\"#Logistic映射方程\" class=\"headerlink\" title=\"Logistic映射方程\"></a>Logistic映射方程</h2><p>Logistic映射是一个典型的非线性的迭代方程，如式所示：<br>                               <img src=\"https://img-blog.csdnimg.cn/20200322115202600.png\" alt=\"在这里插入图片描述\"><br>称为Logistic映射的控制参数，对任意的k有<img src=\"https://img-blog.csdnimg.cn/20200322115314240.png\" alt=\"在这里插入图片描述\">，其中k为迭代时间步。==Logistic映射的动态行为与控制参数u密切相关==，对于不同的u值系统将呈现不同的特性（即当k趋于无穷大，xk的变化情况）。其中==Logistic映射有两个主要的参数，一个是初值x0，一个是系统参数μ==，研究表明，==当 0&lt;μ&lt;=3.5699456时，Logistic呈现出周期性；而当映射方程满足0&lt;x0&lt;1和3.5699456&lt;μ&lt;=4这两个条件时，Logistic映射处于混沌状态==，即一种无序的、不可预测的、混乱的、摸不到头、摸不到尾的状态。对给定的初始值x0，生成的序列是非周期性、非收敛以及对初始条件敏感的。</p>\n<blockquote>\n<p>有界性<br>混沌是有界的，它的运动轨线始终局限于一个确定的区域，这个区域称为混沌吸引域。由图 所示，无论控制参数μ怎么变，迭代值xn始终在(0,1)之间。</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120312766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"**不同控制参数μ下的Logistic分岔图**\"></p>\n<h1 id=\"混沌Logistic映射与其他加密算法介绍\"><a href=\"#混沌Logistic映射与其他加密算法介绍\" class=\"headerlink\" title=\"混沌Logistic映射与其他加密算法介绍\"></a>混沌Logistic映射与其他加密算法介绍</h1><h2 id=\"普通行列置乱加密算法\"><a href=\"#普通行列置乱加密算法\" class=\"headerlink\" title=\"普通行列置乱加密算法\"></a>普通行列置乱加密算法</h2><h3 id=\"普通置乱加密算法的流程\"><a href=\"#普通置乱加密算法的流程\" class=\"headerlink\" title=\"普通置乱加密算法的流程\"></a>普通置乱加密算法的流程</h3><p>将读入的水印图片，先获取图片的大小，得到原始图片矩阵，首先随机打乱各行，输出打乱后的矩阵，再将这个矩阵随机打乱各列，最后图像成功加密，显示加密图像。算法流程框图如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120508960.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>s = size(handles.img);\nr = randsample(s(1), s(1)); \nRGBS = handles.img(r, :, :);\nc = randsample(s(2), s(2)); \nRGBSS = RGBS(:, c, :);\naxes(handles.axes2);        \nimshow(RGBSS); \ntitle(&#39;普通置乱加密图像&#39;);\nfigure(2);\nhist_im=histogram(RGBSS); %加密后直方图\ntitle(&#39;普通置乱加密直方图&#39;);</code></pre><h2 id=\"像素点的RGB值缩放加密\"><a href=\"#像素点的RGB值缩放加密\" class=\"headerlink\" title=\"像素点的RGB值缩放加密\"></a>像素点的RGB值缩放加密</h2><h3 id=\"像素点的RGB值缩放加密算法的流程\"><a href=\"#像素点的RGB值缩放加密算法的流程\" class=\"headerlink\" title=\"像素点的RGB值缩放加密算法的流程\"></a>像素点的RGB值缩放加密算法的流程</h3><p>首先读入原始图片，通过size获取水印图片的大小矩阵，接着获取图片各R、G、B的值，然后将获取到的RGB值分别扩大20倍并将值赋给r，最后再将r与将水印图片转换成double类型的矩阵进行点乘运算实现图像的成功加密。算法流程框图如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322120755105.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析-1\"><a href=\"#算法分析-1\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>s = size(handles.img);\nr = rand(s(1), s(2), s(3)) * 20;\nRGBD = im2double(handles.img);\nRGB_jiami = RGBD .* r;\naxes(handles.axes2);      \nimshow(RGB_jiami); \ntitle(&#39;像素点的RGB值缩放加密图像&#39;);\nfigure(3);\nhist_im=histogram(RGB_jiami); \ntitle(&#39;像素点的RGB值缩放加密直方图&#39;);</code></pre><h2 id=\"混沌Logistic映射加密算法\"><a href=\"#混沌Logistic映射加密算法\" class=\"headerlink\" title=\"混沌Logistic映射加密算法\"></a>混沌Logistic映射加密算法</h2><h3 id=\"混沌Logistic映射加密算法模型\"><a href=\"#混沌Logistic映射加密算法模型\" class=\"headerlink\" title=\"混沌Logistic映射加密算法模型\"></a>混沌Logistic映射加密算法模型</h3><p>读入待处理的原始图片，通过加密密钥进入混沌序列，通过混沌系统设计加密算法，实现加密目的；再输入解密密钥，把加密过程逆向运算即可得到解密图像。系统参数u和初值x0设置成密钥。混沌Logistic映射加密算法模型如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322121024286.png\" alt=\"在这里插入图片描述\"></p>\n<p>当迭代n次后，我们就得到了x1、x2、…，xn这n个值，这就是一个混沌序列，是一维的，称作序列A，也就是我们想要得到的序列，在MATLAB中，可以看出xi（i=1,2,…,n）的取值是在(0,1)之间的，就像图像灰度值是在(0,255)之间一样。那么我们把这个一维序列归一化到(0,255)之间得到序列B。异或过程如图：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200322121130568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"算法分析-2\"><a href=\"#算法分析-2\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h3><pre><code>u=4;   \nfor i=1:500 \n    x=u*x*(1-x); \nend \nfprintf(&#39;x(k+1)=%d\\n&#39;,x); \nA=zeros(1,M*N); \nA(1)=x;   \nfor i=1:M*N-1 \n    A(i+1)=u*A(i)*(1-A(i)); \nend\nB=uint8(255*A); %\nImgn=reshape(B,M,N);   \nC=zeros(M,N); \nfor x=1:M \n    for y=1:N \n        C(x,y)=handles.img(x,y); \n    end\nend\nC; \nD=uint8(C); \nRod=bitxor(D,Imgn); \nRod; \nrod=reshape(Rod,M,N/3,3); </code></pre><h1 id=\"验证与性能分析\"><a href=\"#验证与性能分析\" class=\"headerlink\" title=\"验证与性能分析\"></a>验证与性能分析</h1><h2 id=\"Matlab-GUI操作界面\"><a href=\"#Matlab-GUI操作界面\" class=\"headerlink\" title=\"Matlab GUI操作界面\"></a>Matlab GUI操作界面</h2><p>使用的是<strong>MATLAB GUI可视化仿真平台</strong>。它是采用图形方式显示的计算机操作用户界面，是MATLAB用户可视化交互式的工具，运用GUI生成的操作界面用户可以不用浏览繁冗的代码而进行操作。如图是设计的<strong>GUI操作界面</strong><br><img src=\"https://img-blog.csdnimg.cn/20200322121557542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><strong><em>看到这个界面是不是很不错，对的。。。你没看错MATLAB GUI确实是这么厉害。。。。。。。</em></strong></p>\n<h2 id=\"普通行列置乱加密实现\"><a href=\"#普通行列置乱加密实现\" class=\"headerlink\" title=\"普通行列置乱加密实现\"></a>普通行列置乱加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121749624.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121818930.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"像素点的RGB值的缩放加密实现\"><a href=\"#像素点的RGB值的缩放加密实现\" class=\"headerlink\" title=\"像素点的RGB值的缩放加密实现\"></a>像素点的RGB值的缩放加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322121940411.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/2020032212200941.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"混沌Logistic映射加密实现\"><a href=\"#混沌Logistic映射加密实现\" class=\"headerlink\" title=\"混沌Logistic映射加密实现\"></a>混沌Logistic映射加密实现</h2><p>Lena原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/20200322122101398.png\" alt=\"在这里插入图片描述\"><br>Baboon原图像、加密图像、解密图像<br><img src=\"https://img-blog.csdnimg.cn/2020032212213175.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"直方图性能分析\"><a href=\"#直方图性能分析\" class=\"headerlink\" title=\"直方图性能分析\"></a>直方图性能分析</h2><blockquote>\n<p>这里就只对lena图进行直方图分析，Baboon图大致和lena图一样。</p>\n</blockquote>\n<p>Lena图的普通置乱与混沌Logistic加密的直方图<br><img src=\"https://img-blog.csdnimg.cn/20200322122315134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>普通行列置乱图像的直方图与原始图像的直方图相同，且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性，达到了图像加密的效果。</p>\n<p>Lena图的像素点的RGB缩放与混沌Logistic加密的直方图<br><img src=\"https://img-blog.csdnimg.cn/20200322125400671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l3c3lkd3Nibg==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>由直方图可知：像素点的RGB缩放图像的直方图与原始图像的直方图不相同且像素点的分布都不均匀，而混沌Logistic加密图像的直方图的像素点分布相对均匀，很好地隐藏了原始图像的统计特性。</p>\n<p>完整代码以上传至我的github：<a href=\"https://github.com/gain-wyj/-Logistic-\" target=\"_blank\" rel=\"noopener\">完整代码</a></p>\n<blockquote>\n<p><strong><em>你的三连击是我的荣幸！！！！！</em></strong></p>\n</blockquote>\n"}],"PostAsset":[{"_id":"source/_posts/SSL-secure-network-communication/1.png","slug":"1.png","post":"ckipp1hsw000lksvbjpbil34m","modified":1,"renderable":0},{"_id":"source/_posts/Chinese-chess/1.gif","slug":"1.gif","post":"ckipp1hs40001ksvb69eter0i","modified":1,"renderable":0},{"_id":"source/_posts/Chinese-chess/2.png","post":"ckipp1hs40001ksvb69eter0i","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Chinese-chess/3.png","post":"ckipp1hs40001ksvb69eter0i","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/1.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/10.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/11.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/12.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"12.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/13.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"13.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/14.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"14.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/15.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"15.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/16.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"16.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/17.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"17.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/18.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"18.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/19.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"19.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/2.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/20.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"20.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/21.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"21.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/22.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"22.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/3.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/4.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/5.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/6.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/7.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/8.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/Dimensionless-processing-of-data/9.png","post":"ckipp1hs90003ksvbjqcfzy6n","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/Raspberry-Pi-camera/1.png","post":"ckipp1hsn000bksvblc2xtr64","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/sort-algorithms/1.png","post":"ckipp1hsz000tksvb5kmoymw7","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-comprehensive-evaluation/1.png","post":"ckipp1hse0007ksvbn7l35xqu","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-comprehensive-evaluation/2.png","post":"ckipp1hse0007ksvbn7l35xqu","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/1.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/2.jpg","post":"ckipp1hsh0009ksvb9gnahluy","slug":"2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/3.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/4.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/5.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/6.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/7.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/Different-color-canvas/8.png","post":"ckipp1hsh0009ksvb9gnahluy","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/1.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/2.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/3.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/4.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/5.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/6.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/7.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/8.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/pip-change-source/9.png","post":"ckipp1ht1000vksvbmk7jskni","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/1.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/10.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/2.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/3.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/4.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/5.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/6.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/7.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/8.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/analytic-hierarchy-process/9.png","post":"ckipp1hss000hksvbzy9yfljk","slug":"9.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/1.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/10.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"10.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/11.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"11.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/2.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/3.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/4.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/5.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/6.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"6.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/7.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"7.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/8.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"8.png","modified":1,"renderable":1},{"_id":"source/_posts/Fuzzy-cluster-analysis/9.png","post":"ckipp1ht3000zksvbx265zzwz","slug":"9.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ckipp1hsh0009ksvb9gnahluy","category_id":"ckipp1hsc0005ksvb6er5kx8g","_id":"ckipp1hst000iksvbnzijyxmv"},{"post_id":"ckipp1hs40001ksvb69eter0i","category_id":"ckipp1hsc0005ksvb6er5kx8g","_id":"ckipp1hsw000mksvb38523kfv"},{"post_id":"ckipp1hsn000bksvblc2xtr64","category_id":"ckipp1hsc0005ksvb6er5kx8g","_id":"ckipp1hsy000pksvbod5u4v6k"},{"post_id":"ckipp1hs90003ksvbjqcfzy6n","category_id":"ckipp1hso000cksvbw0ft5pmg","_id":"ckipp1ht0000uksvbmn9et5oz"},{"post_id":"ckipp1hss000hksvbzy9yfljk","category_id":"ckipp1hso000cksvbw0ft5pmg","_id":"ckipp1ht2000wksvb0vt5vlge"},{"post_id":"ckipp1hse0007ksvbn7l35xqu","category_id":"ckipp1hso000cksvbw0ft5pmg","_id":"ckipp1ht30010ksvb4qejy1wy"},{"post_id":"ckipp1hsq000fksvb147rmlq2","category_id":"ckipp1hsz000rksvb3i0hdcjt","_id":"ckipp1ht50012ksvb5uu28e0f"},{"post_id":"ckipp1ht1000vksvbmk7jskni","category_id":"ckipp1hsc0005ksvb6er5kx8g","_id":"ckipp1ht60016ksvbjxa3hth7"},{"post_id":"ckipp1ht3000zksvbx265zzwz","category_id":"ckipp1hso000cksvbw0ft5pmg","_id":"ckipp1ht70018ksvbv5oqcmk7"},{"post_id":"ckipp1hsw000lksvbjpbil34m","category_id":"ckipp1ht2000xksvbrojsu62p","_id":"ckipp1ht8001cksvblq77dvw8"},{"post_id":"ckipp1hsx000oksvb2ctqfxj4","category_id":"ckipp1ht50014ksvbl7gkiv60","_id":"ckipp1ht8001fksvbnjoxrmwc"},{"post_id":"ckipp1hsz000tksvb5kmoymw7","category_id":"ckipp1ht7001aksvbxmbugi54","_id":"ckipp1ht9001hksvbekqjxbfw"},{"post_id":"ckipp1hu1002fksvbx4w47sta","category_id":"ckipp1hu2002gksvb5ghkqc0d","_id":"ckipp1hu4002jksvbiu12cewj"}],"PostTag":[{"post_id":"ckipp1hs40001ksvb69eter0i","tag_id":"ckipp1hse0006ksvb106uhd2u","_id":"ckipp1hsx000nksvbxe1iwthq"},{"post_id":"ckipp1hs40001ksvb69eter0i","tag_id":"ckipp1hso000dksvbk7gelw1l","_id":"ckipp1hsy000qksvbsytbc49u"},{"post_id":"ckipp1hs90003ksvbjqcfzy6n","tag_id":"ckipp1hsu000kksvbv7a2jb25","_id":"ckipp1ht40011ksvb7d9t154y"},{"post_id":"ckipp1hs90003ksvbjqcfzy6n","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1ht50013ksvb1nw6tfnj"},{"post_id":"ckipp1ht3000zksvbx265zzwz","tag_id":"ckipp1hsu000kksvbv7a2jb25","_id":"ckipp1ht60017ksvbvy1phkal"},{"post_id":"ckipp1ht3000zksvbx265zzwz","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1ht70019ksvbx0hgj947"},{"post_id":"ckipp1hse0007ksvbn7l35xqu","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1ht8001dksvbdho3y18y"},{"post_id":"ckipp1hse0007ksvbn7l35xqu","tag_id":"ckipp1ht60015ksvbzliojfu2","_id":"ckipp1ht8001eksvbx3w6l13m"},{"post_id":"ckipp1hsh0009ksvb9gnahluy","tag_id":"ckipp1hse0006ksvb106uhd2u","_id":"ckipp1ht9001jksvbj5kv1xad"},{"post_id":"ckipp1hsh0009ksvb9gnahluy","tag_id":"ckipp1ht7001bksvbicj9m133","_id":"ckipp1hta001kksvbch56q6dx"},{"post_id":"ckipp1hsh0009ksvb9gnahluy","tag_id":"ckipp1ht9001gksvb58gk6252","_id":"ckipp1hta001mksvbuoqp656x"},{"post_id":"ckipp1hsn000bksvblc2xtr64","tag_id":"ckipp1hse0006ksvb106uhd2u","_id":"ckipp1htb001oksvbmpssc7ee"},{"post_id":"ckipp1hsn000bksvblc2xtr64","tag_id":"ckipp1ht9001iksvb8u4yrse6","_id":"ckipp1htb001pksvbtomeyzaw"},{"post_id":"ckipp1hsn000bksvblc2xtr64","tag_id":"ckipp1hta001lksvb7p45smkw","_id":"ckipp1htc001rksvbeihippnn"},{"post_id":"ckipp1hsq000fksvb147rmlq2","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1htc001tksvbcfye8o02"},{"post_id":"ckipp1hsq000fksvb147rmlq2","tag_id":"ckipp1htb001qksvbvc05at16","_id":"ckipp1htc001uksvbabw3v5on"},{"post_id":"ckipp1hss000hksvbzy9yfljk","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1htd001xksvbusqyzdf4"},{"post_id":"ckipp1hss000hksvbzy9yfljk","tag_id":"ckipp1ht60015ksvbzliojfu2","_id":"ckipp1hte001yksvbxn8bpkbo"},{"post_id":"ckipp1hsw000lksvbjpbil34m","tag_id":"ckipp1htd001wksvb4ser2avy","_id":"ckipp1htf0022ksvbaiowsmkl"},{"post_id":"ckipp1hsw000lksvbjpbil34m","tag_id":"ckipp1hte001zksvba5l4sm4m","_id":"ckipp1htf0023ksvb9zsyffo8"},{"post_id":"ckipp1hsw000lksvbjpbil34m","tag_id":"ckipp1hte0020ksvb3ds0yl76","_id":"ckipp1htf0025ksvb0v06e7nt"},{"post_id":"ckipp1hsx000oksvb2ctqfxj4","tag_id":"ckipp1hte0021ksvbhz87v74o","_id":"ckipp1htg0027ksvbky26wd0k"},{"post_id":"ckipp1hsx000oksvb2ctqfxj4","tag_id":"ckipp1htf0024ksvb6us7vqug","_id":"ckipp1htg0028ksvbw1h255wz"},{"post_id":"ckipp1hsz000tksvb5kmoymw7","tag_id":"ckipp1htg0026ksvbrdjwrxqt","_id":"ckipp1hth002bksvbmyvvfv1l"},{"post_id":"ckipp1hsz000tksvb5kmoymw7","tag_id":"ckipp1htg0029ksvbhxh2ic3m","_id":"ckipp1hth002cksvb7v5cq8xv"},{"post_id":"ckipp1ht1000vksvbmk7jskni","tag_id":"ckipp1hse0006ksvb106uhd2u","_id":"ckipp1hth002dksvbl8i2ly2p"},{"post_id":"ckipp1ht1000vksvbmk7jskni","tag_id":"ckipp1hth002aksvbcpork8if","_id":"ckipp1hti002eksvbdoel9pog"},{"post_id":"ckipp1hu1002fksvbx4w47sta","tag_id":"ckipp1hu3002hksvbs0asif2f","_id":"ckipp1hu5002kksvbwvx7e6u4"},{"post_id":"ckipp1hu1002fksvbx4w47sta","tag_id":"ckipp1hsz000sksvb6tzsostl","_id":"ckipp1hu5002lksvb3eilkdq8"},{"post_id":"ckipp1hu1002fksvbx4w47sta","tag_id":"ckipp1hu3002iksvbu8efno80","_id":"ckipp1hu5002mksvb7s803s4l"}],"Tag":[{"name":"python","_id":"ckipp1hse0006ksvb106uhd2u"},{"name":"turtle","_id":"ckipp1hso000dksvbk7gelw1l"},{"name":"数学分析模型","_id":"ckipp1hsu000kksvbv7a2jb25"},{"name":"matlab","_id":"ckipp1hsz000sksvb6tzsostl"},{"name":"数学评价模型","_id":"ckipp1ht60015ksvbzliojfu2"},{"name":"numpy","_id":"ckipp1ht7001bksvbicj9m133"},{"name":"OpenCV","_id":"ckipp1ht9001gksvb58gk6252"},{"name":"Raspberry Pi","_id":"ckipp1ht9001iksvb8u4yrse6"},{"name":"网络","_id":"ckipp1hta001lksvb7p45smkw"},{"name":"函数","_id":"ckipp1htb001qksvbvc05at16"},{"name":"SSL","_id":"ckipp1htd001wksvb4ser2avy"},{"name":"网络通信","_id":"ckipp1hte001zksvba5l4sm4m"},{"name":"安全","_id":"ckipp1hte0020ksvb3ds0yl76"},{"name":"Vue 3.0","_id":"ckipp1hte0021ksvbhz87v74o"},{"name":"javascript","_id":"ckipp1htf0024ksvb6us7vqug"},{"name":"leetcode","_id":"ckipp1htg0026ksvbrdjwrxqt"},{"name":"算法","_id":"ckipp1htg0029ksvbhxh2ic3m"},{"name":"pip","_id":"ckipp1hth002aksvbcpork8if"},{"name":"Logistic加密","_id":"ckipp1hu3002hksvbs0asif2f"},{"name":"数字图像处理","_id":"ckipp1hu3002iksvbu8efno80"}]}}